/* Generated by Cython 0.29.13 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "CAComputeParse\\compute.cpp"
        ],
        "include_dirs": [
            "CAComputeParse"
        ],
        "language": "c++",
        "name": "CAComputeParse.CACompute",
        "sources": [
            "CAComputeParse\\CACompute.pyx"
        ]
    },
    "module_name": "CAComputeParse.CACompute"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_13"
#define CYTHON_HEX_VERSION 0x001D0DF0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__CAComputeParse__CACompute
#define __PYX_HAVE_API__CAComputeParse__CACompute
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <utility>
#include <map>
#include <string.h>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include "compute.cpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "CAComputeParse\\CACompute.pyx",
  "stringsource",
};

/*--- Type declarations ---*/

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* None.proto */
static CYTHON_INLINE int __Pyx_mod_int(int, int);

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* None.proto */
static CYTHON_INLINE long __Pyx_mod_long(long, long);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.pair' */

/* Module declarations from 'libcpp.map' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.unordered_map' */

/* Module declarations from 'libcpp.unordered_set' */

/* Module declarations from 'CAComputeParse.CACompute' */
static std::unordered_map<std::pair<int,int> ,std::vector<int> >  __pyx_v_14CAComputeParse_9CACompute_neighbours_cache;
static std::unordered_map<std::pair<int,int> ,int>  __pyx_v_14CAComputeParse_9CACompute_depends_cache;
static std::map<std::pair<std::vector<int> ,int> ,int>  __pyx_v_14CAComputeParse_9CACompute_transition_func_cache;
static std::vector<std::vector<int> >  __pyx_v_14CAComputeParse_9CACompute_colour_palette;
static std::string __pyx_v_14CAComputeParse_9CACompute_rule_name;
static std::string __pyx_v_14CAComputeParse_9CACompute_rule_space;
static std::string __pyx_v_14CAComputeParse_9CACompute_bsconditions;
static int __pyx_v_14CAComputeParse_9CACompute_n_states;
static std::vector<std::unordered_map<std::pair<int,int> ,int> >  __pyx_v_14CAComputeParse_9CACompute_index_map;
static std::vector<std::vector<int> >  __pyx_v_14CAComputeParse_9CACompute_state_weights;
static std::vector<std::vector<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_neighbourhood;
static std::vector<std::vector<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_original_neighbourhood;
static std::vector<std::vector<int> >  __pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights;
static int __pyx_v_14CAComputeParse_9CACompute_alternating_period;
static int __pyx_v_14CAComputeParse_9CACompute_birth_state;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_forcing;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_killing;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_living;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_regen_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_regen_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_activity_list;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_regen_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_regen_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_forcing;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_killing;
static std::vector<std::unordered_set<int> >  __pyx_v_14CAComputeParse_9CACompute_other_living;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_birth_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_survival_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_forcing_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_killing_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_living_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_birth_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_survival_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_mutate_1;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_birth_2;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_survival_2;
static std::vector<std::unordered_set<std::pair<int,int> > >  __pyx_v_14CAComputeParse_9CACompute_mutate_2;
static std::vector<std::string>  __pyx_v_14CAComputeParse_9CACompute_naive_lst;
static std::vector<std::string>  __pyx_v_14CAComputeParse_9CACompute_direction_lst;
static std::vector<int>  __pyx_v_14CAComputeParse_9CACompute_corner_lst;
static std::vector<int>  __pyx_v_14CAComputeParse_9CACompute_xy_lst;
static int __pyx_v_14CAComputeParse_9CACompute_corner;
static int __pyx_v_14CAComputeParse_9CACompute_xy;
static std::string __pyx_v_14CAComputeParse_9CACompute_direction;
static int __pyx_v_14CAComputeParse_9CACompute_x_bound;
static int __pyx_v_14CAComputeParse_9CACompute_y_bound;
static std::string __pyx_v_14CAComputeParse_9CACompute_bound_type;
static PyObject *__pyx_f_14CAComputeParse_9CACompute_load(PyObject *, int __pyx_skip_dispatch); /*proto*/
static std::vector<std::pair<int,int> >  __pyx_f_14CAComputeParse_9CACompute_get_neighbourhood(int, int __pyx_skip_dispatch); /*proto*/
static int __pyx_f_14CAComputeParse_9CACompute_get_n_states(int __pyx_skip_dispatch); /*proto*/
static std::vector<std::vector<int> >  __pyx_f_14CAComputeParse_9CACompute_get_colour_palette(int __pyx_skip_dispatch); /*proto*/
static std::string __pyx_f_14CAComputeParse_9CACompute_get_rule_name(int __pyx_skip_dispatch); /*proto*/
static int __pyx_f_14CAComputeParse_9CACompute_transition_func(std::vector<int> , int); /*proto*/
static int __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours(int, int); /*proto*/
static PyObject *__pyx_f_14CAComputeParse_9CACompute_set_bounds(int, int, std::string, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_14CAComputeParse_9CACompute_compute(std::unordered_set<std::pair<int,int> > , std::unordered_map<std::pair<int,int> ,int> , int, int __pyx_skip_dispatch); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static std::pair<int,int>  __pyx_convert_pair_from_py_int__and_int(PyObject *); /*proto*/
static std::unordered_set<std::pair<int,int> >  __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *); /*proto*/
static std::unordered_map<std::pair<int,int> ,int>  __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static std::vector<std::string>  __pyx_convert_vector_from_py_std_3a__3a_string(PyObject *); /*proto*/
static PyObject *__pyx_convert_pair_to_py_int____int(std::pair<int,int>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const std::vector<std::pair<int,int> >  &); /*proto*/
static std::vector<std::pair<int,int> >  __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *); /*proto*/
static std::vector<std::vector<std::pair<int,int> > >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(PyObject *); /*proto*/
static PyObject *__pyx_convert_unordered_set_to_py_int(std::unordered_set<int>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(const std::vector<std::unordered_set<int> >  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &); /*proto*/
static PyObject *__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(std::unordered_set<std::pair<int,int> >  const &); /*proto*/
static PyObject *__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(std::unordered_map<std::pair<int,int> ,int>  const &); /*proto*/
#define __Pyx_MODULE_NAME "CAComputeParse.CACompute"
extern int __pyx_module_is_main_CAComputeParse__CACompute;
int __pyx_module_is_main_CAComputeParse__CACompute = 0;

/* Implementation of 'CAComputeParse.CACompute' */
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_IndexError;
static const char __pyx_k_[] = "";
static const char __pyx_k_1[] = "-1";
static const char __pyx_k_o[] = "o";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k__2[] = "\n";
static const char __pyx_k__3[] = "#";
static const char __pyx_k__4[] = ",";
static const char __pyx_k__5[] = "[() ]";
static const char __pyx_k__9[] = "|";
static const char __pyx_k_re[] = "re";
static const char __pyx_k__29[] = "/";
static const char __pyx_k__30[] = "-";
static const char __pyx_k__31[] = "\\((.*?)\\)";
static const char __pyx_k__32[] = "\\(.*?\\)";
static const char __pyx_k__34[] = " ";
static const char __pyx_k_bsd[] = "[bsd]";
static const char __pyx_k_sub[] = "sub";
static const char __pyx_k_Name[] = "Name:";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_find[] = "find";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_type1[] = "type1";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_Name_2[] = "Name: ";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_b_s_nn[] = "b|s|nn";
static const char __pyx_k_decode[] = "decode";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_findall[] = "findall";
static const char __pyx_k_log_log[] = "log.log";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_b_s_d_nn[] = "b|s|d|nn";
static const char __pyx_k_b_s_m_nn[] = "b|s|m|nn";
static const char __pyx_k_Rulespace[] = "Rulespace:";
static const char __pyx_k_bms_parse[] = "bms_parse";
static const char __pyx_k_dict_grid[] = "dict_grid";
static const char __pyx_k_iteritems[] = "iteritems";
static const char __pyx_k_naive_gen[] = "naive_gen";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_Rulestring[] = "Rulestring:";
static const char __pyx_k_Rulespace_2[] = "Rulespace: ";
static const char __pyx_k_birth_trans[] = "birth_trans";
static const char __pyx_k_generations[] = "generations";
static const char __pyx_k_Rulestring_2[] = "Rulestring: ";
static const char __pyx_k_Single_State[] = "Single State";
static const char __pyx_k_b_s_f_k_l_nn[] = "b|s|f|k|l|nn";
static const char __pyx_k_correct_coor[] = "correct_coor";
static const char __pyx_k_living_trans[] = "living_trans";
static const char __pyx_k_Neighbourhood[] = "Neighbourhood:";
static const char __pyx_k_State_Weights[] = "State Weights:";
static const char __pyx_k_cells_changed[] = "cells_changed";
static const char __pyx_k_forcing_trans[] = "forcing_trans";
static const char __pyx_k_get_trans_far[] = "get_trans_far";
static const char __pyx_k_killing_trans[] = "killing_trans";
static const char __pyx_k_B_S_Conditions[] = "B/S Conditions:";
static const char __pyx_k_Colour_Palette[] = "Colour Palette:";
static const char __pyx_k_survival_trans[] = "survival_trans";
static const char __pyx_k_State_Weights_2[] = "State Weights: ";
static const char __pyx_k_get_trans_cross[] = "get_trans_cross";
static const char __pyx_k_get_trans_moore[] = "get_trans_moore";
static const char __pyx_k_B_S_Conditions_2[] = "B/S Conditions: ";
static const char __pyx_k_Outer_Totalistic[] = "Outer Totalistic";
static const char __pyx_k_regen_birth_trans[] = "regen_birth_trans";
static const char __pyx_k_rg_l_b_s_rb_rs_nn[] = "rg|l|b|s|rb|rs|nn";
static const char __pyx_k_CAComputeParse_BMS[] = "CAComputeParse.BMS";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_Neighbourhood_Range[] = "Neighbourhood Range:";
static const char __pyx_k_regen_survival_trans[] = "regen_survival_trans";
static const char __pyx_k_CAComputeParse_Bounds[] = "CAComputeParse.Bounds";
static const char __pyx_k_Neighbourhood_Range_2[] = "Neighbourhood Range: ";
static const char __pyx_k_get_trans_von_neumann[] = "get_trans_von_neumann";
static const char __pyx_k_CAComputeParse_R1_INT_Moore[] = "CAComputeParse.R1_INT_Moore";
static const char __pyx_k_CAComputeParse_R2_INT_Cross[] = "CAComputeParse.R2_INT_Cross";
static const char __pyx_k_CAComputeParse_Naive_Generate[] = "CAComputeParse.Naive_Generate";
static const char __pyx_k_CAComputeParse_R2_INT_FarCorners[] = "CAComputeParse.R2_INT_FarCorners";
static const char __pyx_k_CAComputeParse_R2_INT_Von_Neuman[] = "CAComputeParse.R2_INT_Von_Neumann";
static PyObject *__pyx_kp_b_;
static PyObject *__pyx_kp_b_1;
static PyObject *__pyx_kp_b_B_S_Conditions_2;
static PyObject *__pyx_n_s_CAComputeParse_BMS;
static PyObject *__pyx_n_s_CAComputeParse_Bounds;
static PyObject *__pyx_n_s_CAComputeParse_Naive_Generate;
static PyObject *__pyx_n_s_CAComputeParse_R1_INT_Moore;
static PyObject *__pyx_n_s_CAComputeParse_R2_INT_Cross;
static PyObject *__pyx_n_s_CAComputeParse_R2_INT_FarCorners;
static PyObject *__pyx_n_s_CAComputeParse_R2_INT_Von_Neuman;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_kp_b_Name_2;
static PyObject *__pyx_kp_b_Neighbourhood_Range_2;
static PyObject *__pyx_kp_b_Outer_Totalistic;
static PyObject *__pyx_kp_b_Rulespace_2;
static PyObject *__pyx_kp_b_Rulestring_2;
static PyObject *__pyx_kp_b_Single_State;
static PyObject *__pyx_kp_b_State_Weights_2;
static PyObject *__pyx_kp_b__2;
static PyObject *__pyx_kp_b__29;
static PyObject *__pyx_kp_b__30;
static PyObject *__pyx_kp_b__31;
static PyObject *__pyx_kp_b__32;
static PyObject *__pyx_kp_s__34;
static PyObject *__pyx_kp_b__4;
static PyObject *__pyx_kp_b__5;
static PyObject *__pyx_kp_b__9;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_kp_b_b_s_d_nn;
static PyObject *__pyx_kp_b_b_s_f_k_l_nn;
static PyObject *__pyx_kp_b_b_s_m_nn;
static PyObject *__pyx_kp_b_b_s_nn;
static PyObject *__pyx_n_s_birth_trans;
static PyObject *__pyx_n_s_bms_parse;
static PyObject *__pyx_kp_b_bsd;
static PyObject *__pyx_n_s_cells_changed;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_correct_coor;
static PyObject *__pyx_n_s_decode;
static PyObject *__pyx_n_s_dict_grid;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_find;
static PyObject *__pyx_n_s_findall;
static PyObject *__pyx_n_s_forcing_trans;
static PyObject *__pyx_n_s_generations;
static PyObject *__pyx_n_s_get_trans_cross;
static PyObject *__pyx_n_s_get_trans_far;
static PyObject *__pyx_n_s_get_trans_moore;
static PyObject *__pyx_n_s_get_trans_von_neumann;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_iteritems;
static PyObject *__pyx_n_s_killing_trans;
static PyObject *__pyx_n_s_living_trans;
static PyObject *__pyx_kp_s_log_log;
static PyObject *__pyx_n_s_lower;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_naive_gen;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_b_o;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_re;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_regen_birth_trans;
static PyObject *__pyx_n_s_regen_survival_trans;
static PyObject *__pyx_n_s_replace;
static PyObject *__pyx_kp_b_rg_l_b_s_rb_rs_nn;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_sub;
static PyObject *__pyx_n_s_survival_trans;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_type1;
static PyObject *__pyx_kp_s_utf_8;
static PyObject *__pyx_n_s_w;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_load(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_2get_neighbourhood(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_generations); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_4get_n_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_6get_colour_palette(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_8get_rule_name(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_10set_bounds(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_x, int __pyx_v_y, std::string __pyx_v_type1); /* proto */
static PyObject *__pyx_pf_14CAComputeParse_9CACompute_12compute(CYTHON_UNUSED PyObject *__pyx_self, std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations); /* proto */
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_48;
static PyObject *__pyx_int_150;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_neg_2;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_slice__35;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__33;
/* Late includes */

/* "CAComputeParse/CACompute.pyx":51
 *     pass
 * 
 * cpdef load(filename):             # <<<<<<<<<<<<<<
 *     global colour_palette, rule_name, rule_space, n_states, state_weights, neighbourhood, neighbourhood_weights,\
 *         alternating_period, birth, survival, forcing, killing, living, \
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename); /*proto*/
static PyObject *__pyx_f_14CAComputeParse_9CACompute_load(PyObject *__pyx_v_filename, CYTHON_UNUSED int __pyx_skip_dispatch) {
  CYTHON_UNUSED long __pyx_v_corner;
  CYTHON_UNUSED long __pyx_v_xy;
  CYTHON_UNUSED PyObject *__pyx_v_direction = NULL;
  std::string __pyx_v_rule;
  int __pyx_v_neighbourhood_count;
  std::vector<std::vector<int> >  __pyx_v_current_neighbourhood_weights;
  std::vector<std::vector<std::vector<int> > >  __pyx_v_unflattened_neighbourhood_weights;
  std::unordered_set<std::pair<int,int> >  __pyx_v_set_neighbourhood;
  std::pair<int,int>  __pyx_v_neighbour;
  std::pair<int,int>  __pyx_v_neighbour2;
  bool __pyx_v_parsing_neighbourhood;
  int __pyx_v_colour_palette_count;
  std::vector<int>  __pyx_v_temp;
  bool __pyx_v_parsing_colour_palette;
  std::string __pyx_v_section;
  std::vector<std::string>  __pyx_v_rule_string;
  int __pyx_v_neighbourhood_range;
  int __pyx_v_i;
  int __pyx_v_j;
  std::vector<std::vector<int> >  __pyx_v_weights;
  std::vector<std::pair<int,int> >  __pyx_v_pair_temp;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_map_temp;
  std::vector<int>  __pyx_v_k;
  int __pyx_v_num;
  int __pyx_v_alt;
  std::unordered_set<int>  __pyx_v_set_temp;
  std::unordered_set<std::pair<int,int> >  __pyx_v_temp_semi_1;
  std::vector<int>  __pyx_v_extended;
  PyObject *__pyx_v_file = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_individual_rule_string = NULL;
  PyObject *__pyx_v_current_trans = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_t_11;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  int __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  std::vector<std::string>  __pyx_t_18;
  std::vector<std::vector<std::vector<int> > > ::iterator __pyx_t_19;
  std::vector<std::vector<int> >  __pyx_t_20;
  long __pyx_t_21;
  long __pyx_t_22;
  long __pyx_t_23;
  long __pyx_t_24;
  int __pyx_t_25;
  std::pair<int,int>  __pyx_t_26;
  int __pyx_t_27;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_28;
  std::vector<std::pair<int,int> >  *__pyx_t_29;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_30;
  std::vector<std::pair<int,int> >  *__pyx_t_31;
  int __pyx_t_32;
  std::vector<std::vector<int> > ::iterator __pyx_t_33;
  std::vector<int>  __pyx_t_34;
  std::vector<int> ::iterator __pyx_t_35;
  std::vector<std::vector<std::pair<int,int> > >  __pyx_t_36;
  std::vector<std::string> ::iterator __pyx_t_37;
  PyObject *__pyx_t_38 = NULL;
  PyObject *__pyx_t_39 = NULL;
  PyObject *__pyx_t_40 = NULL;
  int __pyx_t_41;
  std::unordered_set<std::pair<int,int> >  __pyx_t_42;
  __Pyx_RefNannySetupContext("load", 0);

  /* "CAComputeParse/CACompute.pyx":60
 *         living_trans, regen_birth_trans, regen_survival_trans
 * 
 *     colour_palette.clear()             # <<<<<<<<<<<<<<
 *     rule_name = b""
 *     rule_space = b"Single State"
 */
  __pyx_v_14CAComputeParse_9CACompute_colour_palette.clear();

  /* "CAComputeParse/CACompute.pyx":61
 * 
 *     colour_palette.clear()
 *     rule_name = b""             # <<<<<<<<<<<<<<
 *     rule_space = b"Single State"
 *     bsconditions = b"Outer Totalistic"
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 61, __pyx_L1_error)
  __pyx_v_14CAComputeParse_9CACompute_rule_name = __pyx_t_1;

  /* "CAComputeParse/CACompute.pyx":62
 *     colour_palette.clear()
 *     rule_name = b""
 *     rule_space = b"Single State"             # <<<<<<<<<<<<<<
 *     bsconditions = b"Outer Totalistic"
 *     n_states = 0
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_Single_State); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 62, __pyx_L1_error)
  __pyx_v_14CAComputeParse_9CACompute_rule_space = __pyx_t_1;

  /* "CAComputeParse/CACompute.pyx":63
 *     rule_name = b""
 *     rule_space = b"Single State"
 *     bsconditions = b"Outer Totalistic"             # <<<<<<<<<<<<<<
 *     n_states = 0
 *     state_weights.clear()
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_Outer_Totalistic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L1_error)
  __pyx_v_14CAComputeParse_9CACompute_bsconditions = __pyx_t_1;

  /* "CAComputeParse/CACompute.pyx":64
 *     rule_space = b"Single State"
 *     bsconditions = b"Outer Totalistic"
 *     n_states = 0             # <<<<<<<<<<<<<<
 *     state_weights.clear()
 *     neighbourhood.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_n_states = 0;

  /* "CAComputeParse/CACompute.pyx":65
 *     bsconditions = b"Outer Totalistic"
 *     n_states = 0
 *     state_weights.clear()             # <<<<<<<<<<<<<<
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_state_weights.clear();

  /* "CAComputeParse/CACompute.pyx":66
 *     n_states = 0
 *     state_weights.clear()
 *     neighbourhood.clear()             # <<<<<<<<<<<<<<
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_neighbourhood.clear();

  /* "CAComputeParse/CACompute.pyx":67
 *     state_weights.clear()
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()             # <<<<<<<<<<<<<<
 *     original_neighbourhood.clear()
 *     alternating_period = 0
 */
  __pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights.clear();

  /* "CAComputeParse/CACompute.pyx":68
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()             # <<<<<<<<<<<<<<
 *     alternating_period = 0
 *     birth_state = 0
 */
  __pyx_v_14CAComputeParse_9CACompute_original_neighbourhood.clear();

  /* "CAComputeParse/CACompute.pyx":69
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()
 *     alternating_period = 0             # <<<<<<<<<<<<<<
 *     birth_state = 0
 *     birth.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_alternating_period = 0;

  /* "CAComputeParse/CACompute.pyx":70
 *     original_neighbourhood.clear()
 *     alternating_period = 0
 *     birth_state = 0             # <<<<<<<<<<<<<<
 *     birth.clear()
 *     survival.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_birth_state = 0;

  /* "CAComputeParse/CACompute.pyx":71
 *     alternating_period = 0
 *     birth_state = 0
 *     birth.clear()             # <<<<<<<<<<<<<<
 *     survival.clear()
 *     forcing.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_birth.clear();

  /* "CAComputeParse/CACompute.pyx":72
 *     birth_state = 0
 *     birth.clear()
 *     survival.clear()             # <<<<<<<<<<<<<<
 *     forcing.clear()
 *     killing.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_survival.clear();

  /* "CAComputeParse/CACompute.pyx":73
 *     birth.clear()
 *     survival.clear()
 *     forcing.clear()             # <<<<<<<<<<<<<<
 *     killing.clear()
 *     living.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_forcing.clear();

  /* "CAComputeParse/CACompute.pyx":74
 *     survival.clear()
 *     forcing.clear()
 *     killing.clear()             # <<<<<<<<<<<<<<
 *     living.clear()
 *     index_map.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_killing.clear();

  /* "CAComputeParse/CACompute.pyx":75
 *     forcing.clear()
 *     killing.clear()
 *     living.clear()             # <<<<<<<<<<<<<<
 *     index_map.clear()
 *     activity_list.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_living.clear();

  /* "CAComputeParse/CACompute.pyx":76
 *     killing.clear()
 *     living.clear()
 *     index_map.clear()             # <<<<<<<<<<<<<<
 *     activity_list.clear()
 *     regen_birth.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_index_map.clear();

  /* "CAComputeParse/CACompute.pyx":77
 *     living.clear()
 *     index_map.clear()
 *     activity_list.clear()             # <<<<<<<<<<<<<<
 *     regen_birth.clear()
 *     regen_survival.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_activity_list.clear();

  /* "CAComputeParse/CACompute.pyx":78
 *     index_map.clear()
 *     activity_list.clear()
 *     regen_birth.clear()             # <<<<<<<<<<<<<<
 *     regen_survival.clear()
 *     other_birth.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_regen_birth.clear();

  /* "CAComputeParse/CACompute.pyx":79
 *     activity_list.clear()
 *     regen_birth.clear()
 *     regen_survival.clear()             # <<<<<<<<<<<<<<
 *     other_birth.clear()
 *     other_survival.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_regen_survival.clear();

  /* "CAComputeParse/CACompute.pyx":80
 *     regen_birth.clear()
 *     regen_survival.clear()
 *     other_birth.clear()             # <<<<<<<<<<<<<<
 *     other_survival.clear()
 *     other_forcing.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_birth.clear();

  /* "CAComputeParse/CACompute.pyx":81
 *     regen_survival.clear()
 *     other_birth.clear()
 *     other_survival.clear()             # <<<<<<<<<<<<<<
 *     other_forcing.clear()
 *     other_killing.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_survival.clear();

  /* "CAComputeParse/CACompute.pyx":82
 *     other_birth.clear()
 *     other_survival.clear()
 *     other_forcing.clear()             # <<<<<<<<<<<<<<
 *     other_killing.clear()
 *     other_living.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_forcing.clear();

  /* "CAComputeParse/CACompute.pyx":83
 *     other_survival.clear()
 *     other_forcing.clear()
 *     other_killing.clear()             # <<<<<<<<<<<<<<
 *     other_living.clear()
 *     other_regen_birth.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_killing.clear();

  /* "CAComputeParse/CACompute.pyx":84
 *     other_forcing.clear()
 *     other_killing.clear()
 *     other_living.clear()             # <<<<<<<<<<<<<<
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_living.clear();

  /* "CAComputeParse/CACompute.pyx":85
 *     other_killing.clear()
 *     other_living.clear()
 *     other_regen_birth.clear()             # <<<<<<<<<<<<<<
 *     other_regen_survival.clear()
 *     birth_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_regen_birth.clear();

  /* "CAComputeParse/CACompute.pyx":86
 *     other_living.clear()
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()             # <<<<<<<<<<<<<<
 *     birth_semi_1.clear()
 *     survival_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_other_regen_survival.clear();

  /* "CAComputeParse/CACompute.pyx":87
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()
 *     birth_semi_1.clear()             # <<<<<<<<<<<<<<
 *     survival_semi_1.clear()
 *     forcing_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":88
 *     other_regen_survival.clear()
 *     birth_semi_1.clear()
 *     survival_semi_1.clear()             # <<<<<<<<<<<<<<
 *     forcing_semi_1.clear()
 *     killing_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":89
 *     birth_semi_1.clear()
 *     survival_semi_1.clear()
 *     forcing_semi_1.clear()             # <<<<<<<<<<<<<<
 *     killing_semi_1.clear()
 *     living_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_forcing_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":90
 *     survival_semi_1.clear()
 *     forcing_semi_1.clear()
 *     killing_semi_1.clear()             # <<<<<<<<<<<<<<
 *     living_semi_1.clear()
 *     regen_birth_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_killing_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":91
 *     forcing_semi_1.clear()
 *     killing_semi_1.clear()
 *     living_semi_1.clear()             # <<<<<<<<<<<<<<
 *     regen_birth_semi_1.clear()
 *     regen_survival_semi_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_living_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":92
 *     killing_semi_1.clear()
 *     living_semi_1.clear()
 *     regen_birth_semi_1.clear()             # <<<<<<<<<<<<<<
 *     regen_survival_semi_1.clear()
 *     birth_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":93
 *     living_semi_1.clear()
 *     regen_birth_semi_1.clear()
 *     regen_survival_semi_1.clear()             # <<<<<<<<<<<<<<
 *     birth_1.clear()
 *     survival_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1.clear();

  /* "CAComputeParse/CACompute.pyx":94
 *     regen_birth_semi_1.clear()
 *     regen_survival_semi_1.clear()
 *     birth_1.clear()             # <<<<<<<<<<<<<<
 *     survival_1.clear()
 *     mutate_1.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_birth_1.clear();

  /* "CAComputeParse/CACompute.pyx":95
 *     regen_survival_semi_1.clear()
 *     birth_1.clear()
 *     survival_1.clear()             # <<<<<<<<<<<<<<
 *     mutate_1.clear()
 *     birth_2.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_survival_1.clear();

  /* "CAComputeParse/CACompute.pyx":96
 *     birth_1.clear()
 *     survival_1.clear()
 *     mutate_1.clear()             # <<<<<<<<<<<<<<
 *     birth_2.clear()
 *     survival_2.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_mutate_1.clear();

  /* "CAComputeParse/CACompute.pyx":97
 *     survival_1.clear()
 *     mutate_1.clear()
 *     birth_2.clear()             # <<<<<<<<<<<<<<
 *     survival_2.clear()
 *     mutate_2.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_birth_2.clear();

  /* "CAComputeParse/CACompute.pyx":98
 *     mutate_1.clear()
 *     birth_2.clear()
 *     survival_2.clear()             # <<<<<<<<<<<<<<
 *     mutate_2.clear()
 *     naive_lst.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_survival_2.clear();

  /* "CAComputeParse/CACompute.pyx":99
 *     birth_2.clear()
 *     survival_2.clear()
 *     mutate_2.clear()             # <<<<<<<<<<<<<<
 *     naive_lst.clear()
 *     direction_lst.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_mutate_2.clear();

  /* "CAComputeParse/CACompute.pyx":100
 *     survival_2.clear()
 *     mutate_2.clear()
 *     naive_lst.clear()             # <<<<<<<<<<<<<<
 *     direction_lst.clear()
 *     corner_lst.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_naive_lst.clear();

  /* "CAComputeParse/CACompute.pyx":101
 *     mutate_2.clear()
 *     naive_lst.clear()
 *     direction_lst.clear()             # <<<<<<<<<<<<<<
 *     corner_lst.clear()
 *     xy_lst.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_direction_lst.clear();

  /* "CAComputeParse/CACompute.pyx":102
 *     naive_lst.clear()
 *     direction_lst.clear()
 *     corner_lst.clear()             # <<<<<<<<<<<<<<
 *     xy_lst.clear()
 *     depends_cache.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_corner_lst.clear();

  /* "CAComputeParse/CACompute.pyx":103
 *     direction_lst.clear()
 *     corner_lst.clear()
 *     xy_lst.clear()             # <<<<<<<<<<<<<<
 *     depends_cache.clear()
 *     transition_func_cache.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_xy_lst.clear();

  /* "CAComputeParse/CACompute.pyx":104
 *     corner_lst.clear()
 *     xy_lst.clear()
 *     depends_cache.clear()             # <<<<<<<<<<<<<<
 *     transition_func_cache.clear()
 *     neighbours_cache.clear()
 */
  __pyx_v_14CAComputeParse_9CACompute_depends_cache.clear();

  /* "CAComputeParse/CACompute.pyx":105
 *     xy_lst.clear()
 *     depends_cache.clear()
 *     transition_func_cache.clear()             # <<<<<<<<<<<<<<
 *     neighbours_cache.clear()
 *     corner = -1
 */
  __pyx_v_14CAComputeParse_9CACompute_transition_func_cache.clear();

  /* "CAComputeParse/CACompute.pyx":106
 *     depends_cache.clear()
 *     transition_func_cache.clear()
 *     neighbours_cache.clear()             # <<<<<<<<<<<<<<
 *     corner = -1
 *     xy = -1
 */
  __pyx_v_14CAComputeParse_9CACompute_neighbours_cache.clear();

  /* "CAComputeParse/CACompute.pyx":107
 *     transition_func_cache.clear()
 *     neighbours_cache.clear()
 *     corner = -1             # <<<<<<<<<<<<<<
 *     xy = -1
 *     direction = b"o"
 */
  __pyx_v_corner = -1L;

  /* "CAComputeParse/CACompute.pyx":108
 *     neighbours_cache.clear()
 *     corner = -1
 *     xy = -1             # <<<<<<<<<<<<<<
 *     direction = b"o"
 * 
 */
  __pyx_v_xy = -1L;

  /* "CAComputeParse/CACompute.pyx":109
 *     corner = -1
 *     xy = -1
 *     direction = b"o"             # <<<<<<<<<<<<<<
 * 
 *     birth_trans, survival_trans, forcing_trans, killing_trans, living_trans, \
 */
  __Pyx_INCREF(__pyx_n_b_o);
  __pyx_v_direction = __pyx_n_b_o;

  /* "CAComputeParse/CACompute.pyx":112
 * 
 *     birth_trans, survival_trans, forcing_trans, killing_trans, living_trans, \
 *         regen_birth_trans, regen_survival_trans = [], [], [], [], [], [], []             # <<<<<<<<<<<<<<
 * 
 *     cdef string rule
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_birth_trans, __pyx_t_2) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_survival_trans, __pyx_t_3) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_forcing_trans, __pyx_t_4) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_killing_trans, __pyx_t_5) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_living_trans, __pyx_t_6) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_regen_birth_trans, __pyx_t_7) < 0) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_regen_survival_trans, __pyx_t_8) < 0) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "CAComputeParse/CACompute.pyx":116
 *     cdef string rule
 * 
 *     cdef int neighbourhood_count = 0             # <<<<<<<<<<<<<<
 *     cdef vector[vector[int]] current_neighbourhood_weights
 *     cdef vector[vector[vector[int]]] unflattened_neighbourhood_weights
 */
  __pyx_v_neighbourhood_count = 0;

  /* "CAComputeParse/CACompute.pyx":121
 *     cdef unordered_set[pair[int, int]] set_neighbourhood
 *     cdef pair[int, int] neighbour, neighbour2
 *     cdef bool parsing_neighbourhood = False             # <<<<<<<<<<<<<<
 * 
 *     cdef int colour_palette_count = 0
 */
  __pyx_v_parsing_neighbourhood = 0;

  /* "CAComputeParse/CACompute.pyx":123
 *     cdef bool parsing_neighbourhood = False
 * 
 *     cdef int colour_palette_count = 0             # <<<<<<<<<<<<<<
 *     cdef vector[int] temp
 *     cdef bool parsing_colour_palette = False
 */
  __pyx_v_colour_palette_count = 0;

  /* "CAComputeParse/CACompute.pyx":125
 *     cdef int colour_palette_count = 0
 *     cdef vector[int] temp
 *     cdef bool parsing_colour_palette = False             # <<<<<<<<<<<<<<
 * 
 *     cdef string section
 */
  __pyx_v_parsing_colour_palette = 0;

  /* "CAComputeParse/CACompute.pyx":130
 *     cdef vector[string] rule_string
 * 
 *     cdef int neighbourhood_range = 0             # <<<<<<<<<<<<<<
 * 
 *     cdef int i, j
 */
  __pyx_v_neighbourhood_range = 0;

  /* "CAComputeParse/CACompute.pyx":144
 *     cdef vector[int] extended
 * 
 *     file = open(filename, "r")             # <<<<<<<<<<<<<<
 *     rule = file.read().encode("utf-8")
 * 
 */
  __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_INCREF(__pyx_v_filename);
  __Pyx_GIVEREF(__pyx_v_filename);
  PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_filename);
  __Pyx_INCREF(__pyx_n_s_r);
  __Pyx_GIVEREF(__pyx_n_s_r);
  PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_n_s_r);
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_v_file = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "CAComputeParse/CACompute.pyx":145
 * 
 *     file = open(filename, "r")
 *     rule = file.read().encode("utf-8")             # <<<<<<<<<<<<<<
 * 
 *     for section in rule.split(b"\n"):
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_file, __pyx_n_s_read); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_encode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_s_utf_8);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_v_rule = __pyx_t_1;

  /* "CAComputeParse/CACompute.pyx":147
 *     rule = file.read().encode("utf-8")
 * 
 *     for section in rule.split(b"\n"):             # <<<<<<<<<<<<<<
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 */
  __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_rule); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__2) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__2);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
    __pyx_t_8 = __pyx_t_7; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 147, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_8))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 147, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 147, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 147, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 147, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_10(__pyx_t_8);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 147, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_v_section = __pyx_t_1;

    /* "CAComputeParse/CACompute.pyx":148
 * 
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 */
    __pyx_t_12 = ((__pyx_v_section.find(__pyx_k_Neighbourhood) != -1L) != 0);
    if (!__pyx_t_12) {
    } else {
      __pyx_t_11 = __pyx_t_12;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_12 = ((__pyx_v_section.find(__pyx_k__3) != -1L) != 0);
    __pyx_t_11 = __pyx_t_12;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":149
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0             # <<<<<<<<<<<<<<
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()
 */
      __pyx_v_neighbourhood_count = 0;

      /* "CAComputeParse/CACompute.pyx":150
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True             # <<<<<<<<<<<<<<
 *             current_neighbourhood_weights.clear()
 *             continue
 */
      __pyx_v_parsing_neighbourhood = 1;

      /* "CAComputeParse/CACompute.pyx":151
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()             # <<<<<<<<<<<<<<
 *             continue
 *         elif parsing_neighbourhood:
 */
      __pyx_v_current_neighbourhood_weights.clear();

      /* "CAComputeParse/CACompute.pyx":152
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()
 *             continue             # <<<<<<<<<<<<<<
 *         elif parsing_neighbourhood:
 *             temp.clear()
 */
      goto __pyx_L3_continue;

      /* "CAComputeParse/CACompute.pyx":148
 * 
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 */
    }

    /* "CAComputeParse/CACompute.pyx":153
 *             current_neighbourhood_weights.clear()
 *             continue
 *         elif parsing_neighbourhood:             # <<<<<<<<<<<<<<
 *             temp.clear()
 *             for x in section.split(b","):
 */
    __pyx_t_11 = (__pyx_v_parsing_neighbourhood != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":154
 *             continue
 *         elif parsing_neighbourhood:
 *             temp.clear()             # <<<<<<<<<<<<<<
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))
 */
      __pyx_v_temp.clear();

      /* "CAComputeParse/CACompute.pyx":155
 *         elif parsing_neighbourhood:
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 */
      __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
        __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 155, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_14 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 155, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_13); __Pyx_INCREF(__pyx_t_7); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 155, __pyx_L1_error)
            #else
            __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 155, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_13); __Pyx_INCREF(__pyx_t_7); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 155, __pyx_L1_error)
            #else
            __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 155, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            #endif
          }
        } else {
          __pyx_t_7 = __pyx_t_14(__pyx_t_5);
          if (unlikely(!__pyx_t_7)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 155, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_7);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
        __pyx_t_7 = 0;

        /* "CAComputeParse/CACompute.pyx":156
 *             temp.clear()
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))             # <<<<<<<<<<<<<<
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 */
        __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        try {
          __pyx_v_temp.push_back(__pyx_t_15);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 156, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":155
 *         elif parsing_neighbourhood:
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "CAComputeParse/CACompute.pyx":157
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)             # <<<<<<<<<<<<<<
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 */
      try {
        __pyx_v_current_neighbourhood_weights.push_back(__pyx_v_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 157, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":158
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1             # <<<<<<<<<<<<<<
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False
 */
      __pyx_v_neighbourhood_count = (__pyx_v_neighbourhood_count + 1);

      /* "CAComputeParse/CACompute.pyx":159
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:             # <<<<<<<<<<<<<<
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 */
      __pyx_t_11 = ((__pyx_v_neighbourhood_count == ((__pyx_v_neighbourhood_range * 2) + 1)) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":160
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False             # <<<<<<<<<<<<<<
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 *             continue
 */
        __pyx_v_parsing_neighbourhood = 0;

        /* "CAComputeParse/CACompute.pyx":161
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
        try {
          __pyx_v_unflattened_neighbourhood_weights.push_back(__pyx_v_current_neighbourhood_weights);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 161, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":159
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:             # <<<<<<<<<<<<<<
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 */
      }

      /* "CAComputeParse/CACompute.pyx":162
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 *             continue             # <<<<<<<<<<<<<<
 * 
 *         if section.find(b"Colour Palette:") != -1:
 */
      goto __pyx_L3_continue;

      /* "CAComputeParse/CACompute.pyx":153
 *             current_neighbourhood_weights.clear()
 *             continue
 *         elif parsing_neighbourhood:             # <<<<<<<<<<<<<<
 *             temp.clear()
 *             for x in section.split(b","):
 */
    }

    /* "CAComputeParse/CACompute.pyx":164
 *             continue
 * 
 *         if section.find(b"Colour Palette:") != -1:             # <<<<<<<<<<<<<<
 *             parsing_colour_palette = True
 *             continue
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_Colour_Palette) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":165
 * 
 *         if section.find(b"Colour Palette:") != -1:
 *             parsing_colour_palette = True             # <<<<<<<<<<<<<<
 *             continue
 *         elif parsing_colour_palette:
 */
      __pyx_v_parsing_colour_palette = 1;

      /* "CAComputeParse/CACompute.pyx":166
 *         if section.find(b"Colour Palette:") != -1:
 *             parsing_colour_palette = True
 *             continue             # <<<<<<<<<<<<<<
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:
 */
      goto __pyx_L3_continue;

      /* "CAComputeParse/CACompute.pyx":164
 *             continue
 * 
 *         if section.find(b"Colour Palette:") != -1:             # <<<<<<<<<<<<<<
 *             parsing_colour_palette = True
 *             continue
 */
    }

    /* "CAComputeParse/CACompute.pyx":167
 *             parsing_colour_palette = True
 *             continue
 *         elif parsing_colour_palette:             # <<<<<<<<<<<<<<
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 */
    __pyx_t_11 = (__pyx_v_parsing_colour_palette != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":168
 *             continue
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:             # <<<<<<<<<<<<<<
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 */
      __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_None) != -1L) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":169
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *                 continue
 */
        __pyx_v_14CAComputeParse_9CACompute_colour_palette.clear();

        /* "CAComputeParse/CACompute.pyx":170
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
        __pyx_v_parsing_colour_palette = 0;

        /* "CAComputeParse/CACompute.pyx":171
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             temp.clear()
 */
        goto __pyx_L3_continue;

        /* "CAComputeParse/CACompute.pyx":168
 *             continue
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:             # <<<<<<<<<<<<<<
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 */
      }

      /* "CAComputeParse/CACompute.pyx":173
 *                 continue
 * 
 *             temp.clear()             # <<<<<<<<<<<<<<
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 */
      __pyx_v_temp.clear();

      /* "CAComputeParse/CACompute.pyx":174
 * 
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 */
      __pyx_t_7 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_6 = __pyx_t_5; __Pyx_INCREF(__pyx_t_6); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_14 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 174, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_6))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_13); __Pyx_INCREF(__pyx_t_5); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 174, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_13); __Pyx_INCREF(__pyx_t_5); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 174, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_14(__pyx_t_6);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 174, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "CAComputeParse/CACompute.pyx":175
 *             temp.clear()
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))             # <<<<<<<<<<<<<<
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_15 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_15 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_kp_b__5, __pyx_kp_b_, __pyx_v_x};
          __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_5);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_kp_b__5, __pyx_kp_b_, __pyx_v_x};
          __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_5);
        } else
        #endif
        {
          __pyx_t_3 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (__pyx_t_7) {
            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b__5);
          __Pyx_GIVEREF(__pyx_kp_b__5);
          PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__5);
          __Pyx_INCREF(__pyx_kp_b_);
          __Pyx_GIVEREF(__pyx_kp_b_);
          PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_kp_b_);
          __Pyx_INCREF(__pyx_v_x);
          __Pyx_GIVEREF(__pyx_v_x);
          PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_15, __pyx_v_x);
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 175, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 175, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        try {
          __pyx_v_temp.push_back(__pyx_t_15);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 175, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":174
 * 
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 */
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "CAComputeParse/CACompute.pyx":176
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)             # <<<<<<<<<<<<<<
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:
 */
      try {
        __pyx_v_14CAComputeParse_9CACompute_colour_palette.push_back(__pyx_v_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 176, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":177
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1             # <<<<<<<<<<<<<<
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False
 */
      __pyx_v_colour_palette_count = (__pyx_v_colour_palette_count + 1);

      /* "CAComputeParse/CACompute.pyx":178
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *             continue
 */
      __pyx_t_11 = ((__pyx_v_colour_palette_count == __pyx_v_14CAComputeParse_9CACompute_n_states) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":179
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
        __pyx_v_parsing_colour_palette = 0;

        /* "CAComputeParse/CACompute.pyx":178
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *             continue
 */
      }

      /* "CAComputeParse/CACompute.pyx":180
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False
 *             continue             # <<<<<<<<<<<<<<
 * 
 *         if section.find(b"Name:") != -1:
 */
      goto __pyx_L3_continue;

      /* "CAComputeParse/CACompute.pyx":167
 *             parsing_colour_palette = True
 *             continue
 *         elif parsing_colour_palette:             # <<<<<<<<<<<<<<
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 */
    }

    /* "CAComputeParse/CACompute.pyx":182
 *             continue
 * 
 *         if section.find(b"Name:") != -1:             # <<<<<<<<<<<<<<
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_Name) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":183
 * 
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 */
      __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 183, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_v_14CAComputeParse_9CACompute_rule_name = __pyx_t_1;

      /* "CAComputeParse/CACompute.pyx":182
 *             continue
 * 
 *         if section.find(b"Name:") != -1:             # <<<<<<<<<<<<<<
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CAComputeParse/CACompute.pyx":184
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_Neighbourhood_Range) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":185
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))             # <<<<<<<<<<<<<<
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 */
      __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_neighbourhood_range = __pyx_t_15;

      /* "CAComputeParse/CACompute.pyx":184
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CAComputeParse/CACompute.pyx":186
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:             # <<<<<<<<<<<<<<
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_State_Weights) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":187
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
      __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__9) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__9);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 187, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_14 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 187, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 187, __pyx_L1_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 187, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) __PYX_ERR(0, 187, __pyx_L1_error)
            #else
            __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 187, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            #endif
          }
        } else {
          __pyx_t_4 = __pyx_t_14(__pyx_t_5);
          if (unlikely(!__pyx_t_4)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 187, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "CAComputeParse/CACompute.pyx":188
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()             # <<<<<<<<<<<<<<
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))
 */
        __pyx_v_temp.clear();

        /* "CAComputeParse/CACompute.pyx":189
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 *                 for y in x.split(b","):             # <<<<<<<<<<<<<<
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 189, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
          __pyx_t_6 = __pyx_t_4; __Pyx_INCREF(__pyx_t_6); __pyx_t_16 = 0;
          __pyx_t_17 = NULL;
        } else {
          __pyx_t_16 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 189, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_17 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 189, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        for (;;) {
          if (likely(!__pyx_t_17)) {
            if (likely(PyList_CheckExact(__pyx_t_6))) {
              if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_6)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_4 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_16); __Pyx_INCREF(__pyx_t_4); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 189, __pyx_L1_error)
              #else
              __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              #endif
            } else {
              if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_16); __Pyx_INCREF(__pyx_t_4); __pyx_t_16++; if (unlikely(0 < 0)) __PYX_ERR(0, 189, __pyx_L1_error)
              #else
              __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 189, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              #endif
            }
          } else {
            __pyx_t_4 = __pyx_t_17(__pyx_t_6);
            if (unlikely(!__pyx_t_4)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 189, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_4);
          }
          __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_4);
          __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":190
 *                 temp.clear()
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))             # <<<<<<<<<<<<<<
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 */
          __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 190, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          try {
            __pyx_v_temp.push_back(__pyx_t_15);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 190, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":189
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 *                 for y in x.split(b","):             # <<<<<<<<<<<<<<
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 */
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "CAComputeParse/CACompute.pyx":191
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)             # <<<<<<<<<<<<<<
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 */
        try {
          __pyx_v_14CAComputeParse_9CACompute_state_weights.push_back(__pyx_v_temp);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 191, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":187
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "CAComputeParse/CACompute.pyx":192
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 */
      __pyx_v_14CAComputeParse_9CACompute_n_states = (__pyx_v_14CAComputeParse_9CACompute_state_weights[0]).size();

      /* "CAComputeParse/CACompute.pyx":186
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:             # <<<<<<<<<<<<<<
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 */
      goto __pyx_L16;
    }

    /* "CAComputeParse/CACompute.pyx":193
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:             # <<<<<<<<<<<<<<
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_Rulespace) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":194
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 */
      __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 194, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_replace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 194, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 194, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 194, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_14CAComputeParse_9CACompute_rule_space = __pyx_t_1;

      /* "CAComputeParse/CACompute.pyx":193
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:             # <<<<<<<<<<<<<<
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CAComputeParse/CACompute.pyx":195
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:             # <<<<<<<<<<<<<<
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_B_S_Conditions) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":196
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 */
      __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 196, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_replace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 196, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 196, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 196, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_14CAComputeParse_9CACompute_bsconditions = __pyx_t_1;

      /* "CAComputeParse/CACompute.pyx":195
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:             # <<<<<<<<<<<<<<
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CAComputeParse/CACompute.pyx":197
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:             # <<<<<<<<<<<<<<
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 */
    __pyx_t_11 = ((__pyx_v_section.find(__pyx_k_Rulestring) != -1L) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":198
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")             # <<<<<<<<<<<<<<
 * 
 *     alternating_period = state_weights.size()
 */
      __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__9) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__9);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_18 = __pyx_convert_vector_from_py_std_3a__3a_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_rule_string = __pyx_t_18;

      /* "CAComputeParse/CACompute.pyx":197
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:             # <<<<<<<<<<<<<<
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 */
    }
    __pyx_L16:;

    /* "CAComputeParse/CACompute.pyx":147
 *     rule = file.read().encode("utf-8")
 * 
 *     for section in rule.split(b"\n"):             # <<<<<<<<<<<<<<
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "CAComputeParse/CACompute.pyx":200
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 *     alternating_period = state_weights.size()             # <<<<<<<<<<<<<<
 * 
 *     for weights in unflattened_neighbourhood_weights:
 */
  __pyx_v_14CAComputeParse_9CACompute_alternating_period = __pyx_v_14CAComputeParse_9CACompute_state_weights.size();

  /* "CAComputeParse/CACompute.pyx":202
 *     alternating_period = state_weights.size()
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 */
  __pyx_t_19 = __pyx_v_unflattened_neighbourhood_weights.begin();
  for (;;) {
    if (!(__pyx_t_19 != __pyx_v_unflattened_neighbourhood_weights.end())) break;
    __pyx_t_20 = *__pyx_t_19;
    ++__pyx_t_19;
    __pyx_v_weights = __pyx_t_20;

    /* "CAComputeParse/CACompute.pyx":203
 * 
 *     for weights in unflattened_neighbourhood_weights:
 *         pair_temp.clear()             # <<<<<<<<<<<<<<
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 */
    __pyx_v_pair_temp.clear();

    /* "CAComputeParse/CACompute.pyx":204
 *     for weights in unflattened_neighbourhood_weights:
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):             # <<<<<<<<<<<<<<
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 */
    __pyx_t_21 = (__pyx_v_neighbourhood_range + 1);
    __pyx_t_22 = __pyx_t_21;
    for (__pyx_t_15 = (-__pyx_v_neighbourhood_range); __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
      __pyx_v_i = __pyx_t_15;

      /* "CAComputeParse/CACompute.pyx":205
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):             # <<<<<<<<<<<<<<
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 *                     pair_temp.push_back(pair[int, int] (i, j))
 */
      __pyx_t_23 = (__pyx_v_neighbourhood_range + 1);
      __pyx_t_24 = __pyx_t_23;
      for (__pyx_t_25 = (-__pyx_v_neighbourhood_range); __pyx_t_25 < __pyx_t_24; __pyx_t_25+=1) {
        __pyx_v_j = __pyx_t_25;

        /* "CAComputeParse/CACompute.pyx":206
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:             # <<<<<<<<<<<<<<
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 */
        __pyx_t_11 = ((((__pyx_v_weights[(__pyx_v_i + __pyx_v_neighbourhood_range)])[(__pyx_v_j + __pyx_v_neighbourhood_range)]) != 0) != 0);
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":207
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 *                     pair_temp.push_back(pair[int, int] (i, j))             # <<<<<<<<<<<<<<
 * 
 *         neighbourhood.push_back(pair_temp)
 */
          try {
            __pyx_t_26 = std::pair<int,int> (__pyx_v_i, __pyx_v_j);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 207, __pyx_L1_error)
          }
          try {
            __pyx_v_pair_temp.push_back(__pyx_t_26);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 207, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":206
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:             # <<<<<<<<<<<<<<
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 */
        }
      }
    }

    /* "CAComputeParse/CACompute.pyx":209
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 *         neighbourhood.push_back(pair_temp)             # <<<<<<<<<<<<<<
 * 
 *     if bsconditions == b"Double Totalistic":
 */
    try {
      __pyx_v_14CAComputeParse_9CACompute_neighbourhood.push_back(__pyx_v_pair_temp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 209, __pyx_L1_error)
    }

    /* "CAComputeParse/CACompute.pyx":202
 *     alternating_period = state_weights.size()
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 */
  }

  /* "CAComputeParse/CACompute.pyx":211
 *         neighbourhood.push_back(pair_temp)
 * 
 *     if bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 */
  __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
  if (__pyx_t_11) {

    /* "CAComputeParse/CACompute.pyx":212
 * 
 *     if bsconditions == b"Double Totalistic":
 *         original_neighbourhood = neighbourhood             # <<<<<<<<<<<<<<
 *         neighbourhood.clear()
 *         for i in range(alternating_period):
 */
    __pyx_v_14CAComputeParse_9CACompute_original_neighbourhood = __pyx_v_14CAComputeParse_9CACompute_neighbourhood;

    /* "CAComputeParse/CACompute.pyx":213
 *     if bsconditions == b"Double Totalistic":
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()             # <<<<<<<<<<<<<<
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 */
    __pyx_v_14CAComputeParse_9CACompute_neighbourhood.clear();

    /* "CAComputeParse/CACompute.pyx":214
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 *         for i in range(alternating_period):             # <<<<<<<<<<<<<<
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 */
    __pyx_t_15 = __pyx_v_14CAComputeParse_9CACompute_alternating_period;
    __pyx_t_25 = __pyx_t_15;
    for (__pyx_t_27 = 0; __pyx_t_27 < __pyx_t_25; __pyx_t_27+=1) {
      __pyx_v_i = __pyx_t_27;

      /* "CAComputeParse/CACompute.pyx":215
 *         neighbourhood.clear()
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:
 */
      __pyx_v_set_neighbourhood.clear();

      /* "CAComputeParse/CACompute.pyx":216
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 */
      __pyx_t_29 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__pyx_v_i]);
      __pyx_t_28 = __pyx_t_29->begin();
      for (;;) {
        if (!(__pyx_t_28 != __pyx_t_29->end())) break;
        __pyx_t_26 = *__pyx_t_28;
        ++__pyx_t_28;
        __pyx_v_neighbour = __pyx_t_26;

        /* "CAComputeParse/CACompute.pyx":217
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 */
        __pyx_t_31 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__pyx_v_i]);
        __pyx_t_30 = __pyx_t_31->begin();
        for (;;) {
          if (!(__pyx_t_30 != __pyx_t_31->end())) break;
          __pyx_t_26 = *__pyx_t_30;
          ++__pyx_t_30;
          __pyx_v_neighbour2 = __pyx_t_26;

          /* "CAComputeParse/CACompute.pyx":218
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,             # <<<<<<<<<<<<<<
 *                                                              neighbour.second + neighbour2.second))
 *                 set_neighbourhood.insert(neighbour)
 */
          try {
            __pyx_t_26 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 218, __pyx_L1_error)
          }
          (void)(__pyx_v_set_neighbourhood.insert(__pyx_t_26));

          /* "CAComputeParse/CACompute.pyx":217
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 */
        }

        /* "CAComputeParse/CACompute.pyx":220
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 *                 set_neighbourhood.insert(neighbour)             # <<<<<<<<<<<<<<
 * 
 *             pair_temp.clear()
 */
        (void)(__pyx_v_set_neighbourhood.insert(__pyx_v_neighbour));

        /* "CAComputeParse/CACompute.pyx":216
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 */
      }

      /* "CAComputeParse/CACompute.pyx":222
 *                 set_neighbourhood.insert(neighbour)
 * 
 *             pair_temp.clear()             # <<<<<<<<<<<<<<
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())
 *             neighbourhood.push_back(pair_temp)
 */
      __pyx_v_pair_temp.clear();

      /* "CAComputeParse/CACompute.pyx":223
 * 
 *             pair_temp.clear()
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())             # <<<<<<<<<<<<<<
 *             neighbourhood.push_back(pair_temp)
 * 
 */
      try {
        __pyx_v_pair_temp.insert(__pyx_v_pair_temp.end(), __pyx_v_set_neighbourhood.begin(), __pyx_v_set_neighbourhood.end());
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 223, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":224
 *             pair_temp.clear()
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())
 *             neighbourhood.push_back(pair_temp)             # <<<<<<<<<<<<<<
 * 
 *             map_temp.clear()
 */
      try {
        __pyx_v_14CAComputeParse_9CACompute_neighbourhood.push_back(__pyx_v_pair_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 224, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":226
 *             neighbourhood.push_back(pair_temp)
 * 
 *             map_temp.clear()             # <<<<<<<<<<<<<<
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j
 */
      __pyx_v_map_temp.clear();

      /* "CAComputeParse/CACompute.pyx":227
 * 
 *             map_temp.clear()
 *             for j in range(len(neighbourhood[i])):             # <<<<<<<<<<<<<<
 *                 map_temp[neighbourhood[i][j]] = j
 *             index_map.push_back(map_temp)
 */
      __pyx_t_8 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__pyx_v_i])); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 227, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyObject_Length(__pyx_t_8); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 227, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_13 = __pyx_t_9;
      for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_13; __pyx_t_32+=1) {
        __pyx_v_j = __pyx_t_32;

        /* "CAComputeParse/CACompute.pyx":228
 *             map_temp.clear()
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j             # <<<<<<<<<<<<<<
 *             index_map.push_back(map_temp)
 * 
 */
        (__pyx_v_map_temp[((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__pyx_v_i])[__pyx_v_j])]) = __pyx_v_j;
      }

      /* "CAComputeParse/CACompute.pyx":229
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j
 *             index_map.push_back(map_temp)             # <<<<<<<<<<<<<<
 * 
 *     for weights in unflattened_neighbourhood_weights:
 */
      try {
        __pyx_v_14CAComputeParse_9CACompute_index_map.push_back(__pyx_v_map_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 229, __pyx_L1_error)
      }
    }

    /* "CAComputeParse/CACompute.pyx":211
 *         neighbourhood.push_back(pair_temp)
 * 
 *     if bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 */
  }

  /* "CAComputeParse/CACompute.pyx":231
 *             index_map.push_back(map_temp)
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         temp.clear()
 *         for k in weights:
 */
  __pyx_t_19 = __pyx_v_unflattened_neighbourhood_weights.begin();
  for (;;) {
    if (!(__pyx_t_19 != __pyx_v_unflattened_neighbourhood_weights.end())) break;
    __pyx_t_20 = *__pyx_t_19;
    ++__pyx_t_19;
    __pyx_v_weights = __pyx_t_20;

    /* "CAComputeParse/CACompute.pyx":232
 * 
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()             # <<<<<<<<<<<<<<
 *         for k in weights:
 *             for j in k:
 */
    __pyx_v_temp.clear();

    /* "CAComputeParse/CACompute.pyx":233
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()
 *         for k in weights:             # <<<<<<<<<<<<<<
 *             for j in k:
 *                 if j != 0:
 */
    __pyx_t_33 = __pyx_v_weights.begin();
    for (;;) {
      if (!(__pyx_t_33 != __pyx_v_weights.end())) break;
      __pyx_t_34 = *__pyx_t_33;
      ++__pyx_t_33;
      __pyx_v_k = __pyx_t_34;

      /* "CAComputeParse/CACompute.pyx":234
 *         temp.clear()
 *         for k in weights:
 *             for j in k:             # <<<<<<<<<<<<<<
 *                 if j != 0:
 *                     temp.push_back(j)
 */
      __pyx_t_35 = __pyx_v_k.begin();
      for (;;) {
        if (!(__pyx_t_35 != __pyx_v_k.end())) break;
        __pyx_t_15 = *__pyx_t_35;
        ++__pyx_t_35;
        __pyx_v_j = __pyx_t_15;

        /* "CAComputeParse/CACompute.pyx":235
 *         for k in weights:
 *             for j in k:
 *                 if j != 0:             # <<<<<<<<<<<<<<
 *                     temp.push_back(j)
 * 
 */
        __pyx_t_11 = ((__pyx_v_j != 0) != 0);
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":236
 *             for j in k:
 *                 if j != 0:
 *                     temp.push_back(j)             # <<<<<<<<<<<<<<
 * 
 *         neighbourhood_weights.push_back(temp)
 */
          try {
            __pyx_v_temp.push_back(__pyx_v_j);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 236, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":235
 *         for k in weights:
 *             for j in k:
 *                 if j != 0:             # <<<<<<<<<<<<<<
 *                     temp.push_back(j)
 * 
 */
        }

        /* "CAComputeParse/CACompute.pyx":234
 *         temp.clear()
 *         for k in weights:
 *             for j in k:             # <<<<<<<<<<<<<<
 *                 if j != 0:
 *                     temp.push_back(j)
 */
      }

      /* "CAComputeParse/CACompute.pyx":233
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()
 *         for k in weights:             # <<<<<<<<<<<<<<
 *             for j in k:
 *                 if j != 0:
 */
    }

    /* "CAComputeParse/CACompute.pyx":238
 *                     temp.push_back(j)
 * 
 *         neighbourhood_weights.push_back(temp)             # <<<<<<<<<<<<<<
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
    try {
      __pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights.push_back(__pyx_v_temp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 238, __pyx_L1_error)
    }

    /* "CAComputeParse/CACompute.pyx":231
 *             index_map.push_back(map_temp)
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         temp.clear()
 *         for k in weights:
 */
  }

  /* "CAComputeParse/CACompute.pyx":240
 *         neighbourhood_weights.push_back(temp)
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 */
  __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
  if (__pyx_t_11) {

    /* "CAComputeParse/CACompute.pyx":241
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
    __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "CAComputeParse/CACompute.pyx":242
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_alternating_period); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 242, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 242, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 242, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 242, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 242, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 242, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 242, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":241
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
      __pyx_t_4 = PyList_New(8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_tuple__13);
      __Pyx_GIVEREF(__pyx_tuple__13);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_tuple__13);
      __Pyx_INCREF(__pyx_tuple__14);
      __Pyx_GIVEREF(__pyx_tuple__14);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_tuple__14);
      __Pyx_INCREF(__pyx_tuple__15);
      __Pyx_GIVEREF(__pyx_tuple__15);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_tuple__15);
      __Pyx_INCREF(__pyx_tuple__16);
      __Pyx_GIVEREF(__pyx_tuple__16);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_tuple__16);
      __Pyx_INCREF(__pyx_tuple__17);
      __Pyx_GIVEREF(__pyx_tuple__17);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_tuple__17);
      __Pyx_INCREF(__pyx_tuple__18);
      __Pyx_GIVEREF(__pyx_tuple__18);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_tuple__18);
      __Pyx_INCREF(__pyx_tuple__19);
      __Pyx_GIVEREF(__pyx_tuple__19);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_tuple__19);
      __Pyx_INCREF(__pyx_tuple__20);
      __Pyx_GIVEREF(__pyx_tuple__20);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_tuple__20);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_8, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 241, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":242
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "CAComputeParse/CACompute.pyx":241
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
    __pyx_t_36 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 241, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_14CAComputeParse_9CACompute_neighbourhood = __pyx_t_36;

    /* "CAComputeParse/CACompute.pyx":240
 *         neighbourhood_weights.push_back(temp)
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 */
    goto __pyx_L44;
  }

  /* "CAComputeParse/CACompute.pyx":243
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 */
  __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
  if (__pyx_t_11) {

    /* "CAComputeParse/CACompute.pyx":244
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),             # <<<<<<<<<<<<<<
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
    __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "CAComputeParse/CACompute.pyx":245
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_alternating_period); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 245, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 245, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 245, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 245, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 245, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 245, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 245, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":244
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),             # <<<<<<<<<<<<<<
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
      __pyx_t_4 = PyList_New(8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_tuple__21);
      __Pyx_GIVEREF(__pyx_tuple__21);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_tuple__21);
      __Pyx_INCREF(__pyx_tuple__22);
      __Pyx_GIVEREF(__pyx_tuple__22);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_tuple__22);
      __Pyx_INCREF(__pyx_tuple__23);
      __Pyx_GIVEREF(__pyx_tuple__23);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_tuple__23);
      __Pyx_INCREF(__pyx_tuple__24);
      __Pyx_GIVEREF(__pyx_tuple__24);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_tuple__24);
      __Pyx_INCREF(__pyx_tuple__14);
      __Pyx_GIVEREF(__pyx_tuple__14);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_tuple__14);
      __Pyx_INCREF(__pyx_tuple__16);
      __Pyx_GIVEREF(__pyx_tuple__16);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_tuple__16);
      __Pyx_INCREF(__pyx_tuple__18);
      __Pyx_GIVEREF(__pyx_tuple__18);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_tuple__18);
      __Pyx_INCREF(__pyx_tuple__20);
      __Pyx_GIVEREF(__pyx_tuple__20);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_tuple__20);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_8, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 244, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":245
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "CAComputeParse/CACompute.pyx":244
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),             # <<<<<<<<<<<<<<
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
    __pyx_t_36 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 244, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_14CAComputeParse_9CACompute_neighbourhood = __pyx_t_36;

    /* "CAComputeParse/CACompute.pyx":243
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 */
    goto __pyx_L44;
  }

  /* "CAComputeParse/CACompute.pyx":246
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 */
  __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
  if (__pyx_t_11) {

    /* "CAComputeParse/CACompute.pyx":247
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 */
    __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "CAComputeParse/CACompute.pyx":249
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_alternating_period); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 249, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 249, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 249, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 249, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 249, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":247
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 */
      __pyx_t_4 = PyList_New(12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 247, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_tuple__13);
      __Pyx_GIVEREF(__pyx_tuple__13);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_tuple__13);
      __Pyx_INCREF(__pyx_tuple__14);
      __Pyx_GIVEREF(__pyx_tuple__14);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_tuple__14);
      __Pyx_INCREF(__pyx_tuple__15);
      __Pyx_GIVEREF(__pyx_tuple__15);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_tuple__15);
      __Pyx_INCREF(__pyx_tuple__16);
      __Pyx_GIVEREF(__pyx_tuple__16);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_tuple__16);
      __Pyx_INCREF(__pyx_tuple__17);
      __Pyx_GIVEREF(__pyx_tuple__17);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_tuple__17);
      __Pyx_INCREF(__pyx_tuple__18);
      __Pyx_GIVEREF(__pyx_tuple__18);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_tuple__18);
      __Pyx_INCREF(__pyx_tuple__19);
      __Pyx_GIVEREF(__pyx_tuple__19);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_tuple__19);
      __Pyx_INCREF(__pyx_tuple__20);
      __Pyx_GIVEREF(__pyx_tuple__20);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_tuple__20);
      __Pyx_INCREF(__pyx_tuple__21);
      __Pyx_GIVEREF(__pyx_tuple__21);
      PyList_SET_ITEM(__pyx_t_4, 8, __pyx_tuple__21);
      __Pyx_INCREF(__pyx_tuple__22);
      __Pyx_GIVEREF(__pyx_tuple__22);
      PyList_SET_ITEM(__pyx_t_4, 9, __pyx_tuple__22);
      __Pyx_INCREF(__pyx_tuple__23);
      __Pyx_GIVEREF(__pyx_tuple__23);
      PyList_SET_ITEM(__pyx_t_4, 10, __pyx_tuple__23);
      __Pyx_INCREF(__pyx_tuple__24);
      __Pyx_GIVEREF(__pyx_tuple__24);
      PyList_SET_ITEM(__pyx_t_4, 11, __pyx_tuple__24);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_8, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 247, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":249
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "CAComputeParse/CACompute.pyx":247
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 */
    __pyx_t_36 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_14CAComputeParse_9CACompute_neighbourhood = __pyx_t_36;

    /* "CAComputeParse/CACompute.pyx":246
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 */
    goto __pyx_L44;
  }

  /* "CAComputeParse/CACompute.pyx":250
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 */
  __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
  if (__pyx_t_11) {

    /* "CAComputeParse/CACompute.pyx":251
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 */
    __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "CAComputeParse/CACompute.pyx":252
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *     for individual_rule_string in rule_string:
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_alternating_period); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 252, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 252, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 252, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 252, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_5);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 252, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":251
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 */
      __pyx_t_4 = PyList_New(8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 251, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_tuple__25);
      __Pyx_GIVEREF(__pyx_tuple__25);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_tuple__25);
      __Pyx_INCREF(__pyx_tuple__14);
      __Pyx_GIVEREF(__pyx_tuple__14);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_tuple__14);
      __Pyx_INCREF(__pyx_tuple__26);
      __Pyx_GIVEREF(__pyx_tuple__26);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_tuple__26);
      __Pyx_INCREF(__pyx_tuple__16);
      __Pyx_GIVEREF(__pyx_tuple__16);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_tuple__16);
      __Pyx_INCREF(__pyx_tuple__27);
      __Pyx_GIVEREF(__pyx_tuple__27);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_tuple__27);
      __Pyx_INCREF(__pyx_tuple__18);
      __Pyx_GIVEREF(__pyx_tuple__18);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_tuple__18);
      __Pyx_INCREF(__pyx_tuple__28);
      __Pyx_GIVEREF(__pyx_tuple__28);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_tuple__28);
      __Pyx_INCREF(__pyx_tuple__20);
      __Pyx_GIVEREF(__pyx_tuple__20);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_tuple__20);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_8, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 251, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "CAComputeParse/CACompute.pyx":252
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *     for individual_rule_string in rule_string:
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "CAComputeParse/CACompute.pyx":251
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 */
    __pyx_t_36 = __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_14CAComputeParse_9CACompute_neighbourhood = __pyx_t_36;

    /* "CAComputeParse/CACompute.pyx":250
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1),
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 */
  }
  __pyx_L44:;

  /* "CAComputeParse/CACompute.pyx":254
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 *     for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":
 */
  __pyx_t_37 = __pyx_v_rule_string.begin();
  for (;;) {
    if (!(__pyx_t_37 != __pyx_v_rule_string.end())) break;
    __pyx_t_1 = *__pyx_t_37;
    ++__pyx_t_37;
    __pyx_t_8 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_XDECREF_SET(__pyx_v_individual_rule_string, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "CAComputeParse/CACompute.pyx":255
 * 
 *     for individual_rule_string in rule_string:
 *         individual_rule_string = individual_rule_string.lower()             # <<<<<<<<<<<<<<
 *         if rule_space == b"Single State":
 *             if bsconditions == b"Outer Totalistic":
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_lower); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_individual_rule_string, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "CAComputeParse/CACompute.pyx":256
 *     for individual_rule_string in rule_string:
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Single State")) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":257
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":258
 *         if rule_space == b"Single State":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 258, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":259
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":260
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 260, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 260, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 260, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 260, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 260, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 260, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":261
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 261, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 261, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":262
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 262, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":263
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":261
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L60;
            }

            /* "CAComputeParse/CACompute.pyx":265
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 265, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L60:;

            /* "CAComputeParse/CACompute.pyx":260
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":266
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 266, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":268
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":269
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 269, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 269, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 269, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 269, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 269, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_5 = __pyx_t_8; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 269, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 269, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 269, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 269, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 269, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 269, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":270
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 270, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 270, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":271
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 271, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":272
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":270
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L65;
            }

            /* "CAComputeParse/CACompute.pyx":274
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 274, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 274, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L65:;

            /* "CAComputeParse/CACompute.pyx":269
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":275
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 275, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":277
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 277, __pyx_L68_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 277, __pyx_L68_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 277, __pyx_L68_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 277, __pyx_L68_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 277, __pyx_L68_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L75_try_end;
            __pyx_L68_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":278
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_5, &__pyx_t_4) < 0) __PYX_ERR(0, 278, __pyx_L70_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 278, __pyx_L70_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 278, __pyx_L70_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L69_exception_handled;
            }
            goto __pyx_L70_except_error;
            __pyx_L70_except_error:;

            /* "CAComputeParse/CACompute.pyx":277
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L69_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L75_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":258
 *         if rule_space == b"Single State":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
          goto __pyx_L57;
        }

        /* "CAComputeParse/CACompute.pyx":280
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":281
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 281, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 281, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 281, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 281, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 281, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 281, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":282
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 282, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 282, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 282, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 282, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":283
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":284
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":282
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L80;
            }

            /* "CAComputeParse/CACompute.pyx":286
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 286, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 286, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L80:;

            /* "CAComputeParse/CACompute.pyx":281
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":287
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 287, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":289
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":290
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 290, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 290, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 290, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 290, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 290, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 290, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 290, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 290, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 290, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 290, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":291
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 291, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 291, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":292
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 292, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":293
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":291
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L85;
            }

            /* "CAComputeParse/CACompute.pyx":295
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 295, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 295, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L85:;

            /* "CAComputeParse/CACompute.pyx":290
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":296
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 296, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":298
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 298, __pyx_L88_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 298, __pyx_L88_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L88_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L88_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              {
                __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 298, __pyx_L88_error)
                __Pyx_GOTREF(__pyx_t_8);
                if (__pyx_t_5) {
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L88_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 298, __pyx_L88_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 298, __pyx_L88_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 298, __pyx_L88_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L95_try_end;
            __pyx_L88_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":299
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_4, &__pyx_t_8) < 0) __PYX_ERR(0, 299, __pyx_L90_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 299, __pyx_L90_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 299, __pyx_L90_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L89_exception_handled;
            }
            goto __pyx_L90_except_error;
            __pyx_L90_except_error:;

            /* "CAComputeParse/CACompute.pyx":298
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L89_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L95_try_end:;
          }
        }
        __pyx_L57:;

        /* "CAComputeParse/CACompute.pyx":257
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":300
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":301
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 301, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 301, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":302
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":303
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 303, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 303, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 303, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 303, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 303, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":304
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":305
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 305, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":306
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":304
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L101;
            }

            /* "CAComputeParse/CACompute.pyx":308
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 308, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 308, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L101:;

            /* "CAComputeParse/CACompute.pyx":303
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":309
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 309, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":311
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":312
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 312, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_4 = __pyx_t_8; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 312, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 312, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 312, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 312, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 312, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 312, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":313
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 313, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 313, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 313, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 313, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":314
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 314, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":315
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":313
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L106;
            }

            /* "CAComputeParse/CACompute.pyx":317
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 317, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 317, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L106:;

            /* "CAComputeParse/CACompute.pyx":312
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":318
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 318, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":320
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":321
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_6};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 321, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_7, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_6};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 321, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 321, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 321, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 321, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 321, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 321, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 321, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 321, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":322
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 322, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 322, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 322, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 322, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":323
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 323, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":324
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":322
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L111;
            }

            /* "CAComputeParse/CACompute.pyx":326
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 326, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 326, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L111:;

            /* "CAComputeParse/CACompute.pyx":321
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":327
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 327, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":329
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":330
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 330, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 330, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_5 = __pyx_t_3; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 330, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 330, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 330, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 330, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 330, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":331
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 331, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 331, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 331, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":332
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 332, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":333
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":331
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L116;
            }

            /* "CAComputeParse/CACompute.pyx":335
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L116:;

            /* "CAComputeParse/CACompute.pyx":330
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":336
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 336, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":338
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 338, __pyx_L119_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 338, __pyx_L119_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 338, __pyx_L119_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 338, __pyx_L119_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 338, __pyx_L119_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L126_try_end;
            __pyx_L119_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":339
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_5, &__pyx_t_4) < 0) __PYX_ERR(0, 339, __pyx_L121_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 339, __pyx_L121_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 339, __pyx_L121_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L120_exception_handled;
            }
            goto __pyx_L121_except_error;
            __pyx_L121_except_error:;

            /* "CAComputeParse/CACompute.pyx":338
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L120_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L126_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":301
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
          goto __pyx_L98;
        }

        /* "CAComputeParse/CACompute.pyx":341
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":342
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_findall); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_8};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_8};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_t_8);
            __pyx_t_8 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 342, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 342, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 342, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 342, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":343
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 343, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 343, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 343, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":344
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":345
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":343
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L131;
            }

            /* "CAComputeParse/CACompute.pyx":347
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 347, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L131:;

            /* "CAComputeParse/CACompute.pyx":342
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":348
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 348, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":350
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":351
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 351, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 351, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 351, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 351, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 351, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 351, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 351, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":352
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 352, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 352, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":353
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 353, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":354
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":352
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L136;
            }

            /* "CAComputeParse/CACompute.pyx":356
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 356, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 356, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L136:;

            /* "CAComputeParse/CACompute.pyx":351
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":357
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 357, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":359
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":360
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 360, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_6 = __pyx_t_4; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 360, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 360, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 360, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 360, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 360, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 360, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 360, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":361
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 361, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 361, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 361, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 361, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":362
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 362, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":363
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":361
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L141;
            }

            /* "CAComputeParse/CACompute.pyx":365
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 365, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 365, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L141:;

            /* "CAComputeParse/CACompute.pyx":360
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":366
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 366, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":368
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":369
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 369, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_8 = __pyx_t_6; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 369, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 369, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 369, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 369, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 369, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":370
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":371
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 371, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":372
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":370
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L146;
            }

            /* "CAComputeParse/CACompute.pyx":374
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 374, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 374, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L146:;

            /* "CAComputeParse/CACompute.pyx":369
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":375
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 375, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":377
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 377, __pyx_L149_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L149_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 377, __pyx_L149_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 377, __pyx_L149_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 377, __pyx_L149_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 377, __pyx_L149_error)
                __Pyx_GOTREF(__pyx_t_8);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L149_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 377, __pyx_L149_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 377, __pyx_L149_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L156_try_end;
            __pyx_L149_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":378
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_3) < 0) __PYX_ERR(0, 378, __pyx_L151_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 378, __pyx_L151_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 378, __pyx_L151_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L150_exception_handled;
            }
            goto __pyx_L151_except_error;
            __pyx_L151_except_error:;

            /* "CAComputeParse/CACompute.pyx":377
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L150_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L156_try_end:;
          }
        }
        __pyx_L98:;

        /* "CAComputeParse/CACompute.pyx":300
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":379
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":380
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     current_trans = []
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 380, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 380, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 380, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":381
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":382
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 382, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_8));
          __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":383
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 383, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 383, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 383, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 383, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 383, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":384
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 384, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 384, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 384, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":385
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 385, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":386
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 386, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 386, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":387
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 387, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_4));
              __pyx_t_4 = 0;

              /* "CAComputeParse/CACompute.pyx":385
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":383
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":388
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     temp_semi_1.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 388, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":390
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":391
 * 
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 391, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_8));
          __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":392
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 392, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 392, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 392, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 392, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 392, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 392, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":393
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 393, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 393, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 393, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":394
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 394, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":395
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 395, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 395, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":396
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 396, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
              __pyx_t_3 = 0;

              /* "CAComputeParse/CACompute.pyx":394
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":392
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":397
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 397, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":399
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 399, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 399, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 399, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 399, __pyx_L166_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 399, __pyx_L166_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L173_try_end;
            __pyx_L166_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":400
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     temp_semi_1.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_8, &__pyx_t_4) < 0) __PYX_ERR(0, 400, __pyx_L168_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 400, __pyx_L168_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 400, __pyx_L168_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L167_exception_handled;
            }
            goto __pyx_L168_except_error;
            __pyx_L168_except_error:;

            /* "CAComputeParse/CACompute.pyx":399
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L167_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L173_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":380
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     current_trans = []
 */
          goto __pyx_L159;
        }

        /* "CAComputeParse/CACompute.pyx":402
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:
 */
        /*else*/ {
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":403
 *                 else:
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 403, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_4));
          __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":404
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 404, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 404, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 404, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 404, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 404, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 404, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 404, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 404, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 404, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 404, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":405
 *                     current_trans = []
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 405, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":406
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 406, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":407
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_6, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 407, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 407, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":408
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
              __pyx_t_6 = 0;

              /* "CAComputeParse/CACompute.pyx":406
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":404
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":409
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     temp_semi_1.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 409, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":411
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":412
 * 
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 412, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 412, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 412, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 412, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 412, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":413
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 413, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":414
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 414, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":415
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 415, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 415, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":416
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 416, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_8));
              __pyx_t_8 = 0;

              /* "CAComputeParse/CACompute.pyx":414
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":412
 * 
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":417
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 417, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":419
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 419, __pyx_L182_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L182_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L182_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L182_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              {
                __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 419, __pyx_L182_error)
                __Pyx_GOTREF(__pyx_t_6);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L182_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L182_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 419, __pyx_L182_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 419, __pyx_L182_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L189_try_end;
            __pyx_L182_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":420
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_4, &__pyx_t_6) < 0) __PYX_ERR(0, 420, __pyx_L184_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 420, __pyx_L184_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 420, __pyx_L184_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L183_exception_handled;
            }
            goto __pyx_L184_except_error;
            __pyx_L184_except_error:;

            /* "CAComputeParse/CACompute.pyx":419
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L183_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L189_try_end:;
          }
        }
        __pyx_L159:;

        /* "CAComputeParse/CACompute.pyx":379
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":421
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":422
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":423
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":424
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 424, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":426
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 426, __pyx_L193_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 426, __pyx_L193_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 426, __pyx_L193_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 426, __pyx_L193_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 426, __pyx_L193_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L200_try_end;
            __pyx_L193_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":427
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_4, &__pyx_t_3) < 0) __PYX_ERR(0, 427, __pyx_L195_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 427, __pyx_L195_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 427, __pyx_L195_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L194_exception_handled;
            }
            goto __pyx_L195_except_error;
            __pyx_L195_except_error:;

            /* "CAComputeParse/CACompute.pyx":426
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L194_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L200_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":422
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L192;
        }

        /* "CAComputeParse/CACompute.pyx":429
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 429, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":430
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 430, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 430, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 430, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 430, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 430, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":432
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 432, __pyx_L203_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 432, __pyx_L203_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L203_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L203_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 432, __pyx_L203_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_4) {
                  __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 432, __pyx_L203_error)
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 432, __pyx_L203_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 432, __pyx_L203_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 432, __pyx_L203_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L210_try_end;
            __pyx_L203_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":433
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_3, &__pyx_t_7) < 0) __PYX_ERR(0, 433, __pyx_L205_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 433, __pyx_L205_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 433, __pyx_L205_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L204_exception_handled;
            }
            goto __pyx_L205_except_error;
            __pyx_L205_except_error:;

            /* "CAComputeParse/CACompute.pyx":432
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L204_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L210_try_end:;
          }
        }
        __pyx_L192:;

        /* "CAComputeParse/CACompute.pyx":421
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":434
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":435
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":436
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 436, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":437
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":439
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 439, __pyx_L214_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L214_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 439, __pyx_L214_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L214_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 439, __pyx_L214_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L221_try_end;
            __pyx_L214_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":440
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[0]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_3, &__pyx_t_6) < 0) __PYX_ERR(0, 440, __pyx_L216_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 440, __pyx_L216_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 440, __pyx_L216_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L215_exception_handled;
            }
            goto __pyx_L216_except_error;
            __pyx_L216_except_error:;

            /* "CAComputeParse/CACompute.pyx":439
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L215_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L221_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":435
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L213;
        }

        /* "CAComputeParse/CACompute.pyx":442
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 442, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":443
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[0]))
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 443, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":445
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L224_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 445, __pyx_L224_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 445, __pyx_L224_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 445, __pyx_L224_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              {
                __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 445, __pyx_L224_error)
                __Pyx_GOTREF(__pyx_t_8);
                if (__pyx_t_3) {
                  __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 445, __pyx_L224_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              }
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 445, __pyx_L224_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 445, __pyx_L224_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 445, __pyx_L224_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L231_try_end;
            __pyx_L224_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":446
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_6, &__pyx_t_8) < 0) __PYX_ERR(0, 446, __pyx_L226_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 446, __pyx_L226_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 446, __pyx_L226_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L225_exception_handled;
            }
            goto __pyx_L226_except_error;
            __pyx_L226_except_error:;

            /* "CAComputeParse/CACompute.pyx":445
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L225_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L231_try_end:;
          }
        }
        __pyx_L213:;

        /* "CAComputeParse/CACompute.pyx":434
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":447
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":448
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 448, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 448, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 448, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 448, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":449
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 449, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":450
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 450, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":452
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 452, __pyx_L235_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 452, __pyx_L235_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 452, __pyx_L235_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 452, __pyx_L235_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 452, __pyx_L235_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L242_try_end;
            __pyx_L235_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":453
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[0]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(0, 453, __pyx_L237_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 453, __pyx_L237_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 453, __pyx_L237_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L236_exception_handled;
            }
            goto __pyx_L237_except_error;
            __pyx_L237_except_error:;

            /* "CAComputeParse/CACompute.pyx":452
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L236_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L242_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":448
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L234;
        }

        /* "CAComputeParse/CACompute.pyx":455
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":456
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[0]))
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 456, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":458
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 458, __pyx_L245_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 458, __pyx_L245_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 458, __pyx_L245_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 458, __pyx_L245_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              {
                __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 458, __pyx_L245_error)
                __Pyx_GOTREF(__pyx_t_4);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 458, __pyx_L245_error)
                __Pyx_GOTREF(__pyx_t_7);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 458, __pyx_L245_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 458, __pyx_L245_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 458, __pyx_L245_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L252_try_end;
            __pyx_L245_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":459
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_4) < 0) __PYX_ERR(0, 459, __pyx_L247_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 459, __pyx_L247_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 459, __pyx_L247_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L246_exception_handled;
            }
            goto __pyx_L247_except_error;
            __pyx_L247_except_error:;

            /* "CAComputeParse/CACompute.pyx":458
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|nn", individual_rule_string)[1]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L246_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L252_try_end:;
          }
        }
        __pyx_L234:;

        /* "CAComputeParse/CACompute.pyx":447
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L56;
      }

      /* "CAComputeParse/CACompute.pyx":460
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":461
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 461, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 461, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 461, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 461, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":462
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 462, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":463
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 463, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":465
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 465, __pyx_L256_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 465, __pyx_L256_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 465, __pyx_L256_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 465, __pyx_L256_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 465, __pyx_L256_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L263_try_end;
            __pyx_L256_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":466
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(0, 466, __pyx_L258_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 466, __pyx_L258_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 466, __pyx_L258_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L257_exception_handled;
            }
            goto __pyx_L258_except_error;
            __pyx_L258_except_error:;

            /* "CAComputeParse/CACompute.pyx":465
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[2])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L257_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L263_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":461
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L255;
        }

        /* "CAComputeParse/CACompute.pyx":468
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 468, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 468, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 468, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":469
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 469, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 469, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 469, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 469, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":471
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 471, __pyx_L266_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 471, __pyx_L266_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 471, __pyx_L266_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 471, __pyx_L266_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 471, __pyx_L266_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_7) {
                  __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 471, __pyx_L266_error)
                __Pyx_GOTREF(__pyx_t_8);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 471, __pyx_L266_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 471, __pyx_L266_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 471, __pyx_L266_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L273_try_end;
            __pyx_L266_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":472
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *         elif rule_space == b"BSFKL":
 *             if bsconditions == b"Outer Totalistic":
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_3) < 0) __PYX_ERR(0, 472, __pyx_L268_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 472, __pyx_L268_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 472, __pyx_L268_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L267_exception_handled;
            }
            goto __pyx_L268_except_error;
            __pyx_L268_except_error:;

            /* "CAComputeParse/CACompute.pyx":471
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|nn", individual_rule_string)[2]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L267_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L273_try_end:;
          }
        }
        __pyx_L255:;

        /* "CAComputeParse/CACompute.pyx":460
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[2])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
      }
      __pyx_L56:;

      /* "CAComputeParse/CACompute.pyx":256
 *     for individual_rule_string in rule_string:
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
      goto __pyx_L55;
    }

    /* "CAComputeParse/CACompute.pyx":473
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":474
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":475
 *         elif rule_space == b"BSFKL":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 475, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":476
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":477
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 477, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 477, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 477, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 477, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 477, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 477, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 477, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 477, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 477, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":478
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 478, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 478, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 478, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 478, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":479
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 479, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":480
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":478
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L280;
            }

            /* "CAComputeParse/CACompute.pyx":482
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 482, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 482, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L280:;

            /* "CAComputeParse/CACompute.pyx":477
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":483
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 483, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":485
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":486
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 486, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 486, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 486, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 486, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 486, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 486, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 486, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":487
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 487, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 487, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 487, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 487, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":488
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":489
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":487
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L285;
            }

            /* "CAComputeParse/CACompute.pyx":491
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 491, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 491, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L285:;

            /* "CAComputeParse/CACompute.pyx":486
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":492
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 492, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":494
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":495
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 495, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 495, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 495, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 495, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 495, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 495, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 495, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 495, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":496
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 496, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":497
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 497, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":498
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":496
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L290;
            }

            /* "CAComputeParse/CACompute.pyx":500
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 500, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 500, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L290:;

            /* "CAComputeParse/CACompute.pyx":495
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":501
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 501, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":503
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":504
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 504, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 504, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 504, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 504, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 504, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 504, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 504, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 504, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 504, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 504, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 504, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 504, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":505
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 505, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 505, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 505, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":506
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 506, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":507
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":505
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L295;
            }

            /* "CAComputeParse/CACompute.pyx":509
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 509, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L295:;

            /* "CAComputeParse/CACompute.pyx":504
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":510
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 510, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":512
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":513
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 513, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 513, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 513, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 513, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 513, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 513, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":514
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 514, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 514, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 514, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 514, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":515
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 515, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":516
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":514
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L300;
            }

            /* "CAComputeParse/CACompute.pyx":518
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 518, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 518, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L300:;

            /* "CAComputeParse/CACompute.pyx":513
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":519
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 519, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":521
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 521, __pyx_L303_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 521, __pyx_L303_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 521, __pyx_L303_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 521, __pyx_L303_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 521, __pyx_L303_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L310_try_end;
            __pyx_L303_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":522
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_3, &__pyx_t_4) < 0) __PYX_ERR(0, 522, __pyx_L305_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 522, __pyx_L305_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 522, __pyx_L305_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L304_exception_handled;
            }
            goto __pyx_L305_except_error;
            __pyx_L305_except_error:;

            /* "CAComputeParse/CACompute.pyx":521
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L304_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L310_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":475
 *         elif rule_space == b"BSFKL":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 */
          goto __pyx_L277;
        }

        /* "CAComputeParse/CACompute.pyx":524
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":525
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 525, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 525, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 525, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 525, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 525, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 525, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 525, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 525, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 525, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 525, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 525, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":526
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 526, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":527
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":528
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":526
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L315;
            }

            /* "CAComputeParse/CACompute.pyx":530
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 530, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 530, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L315:;

            /* "CAComputeParse/CACompute.pyx":525
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":531
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 531, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":533
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":534
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 534, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 534, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 534, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 534, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 534, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 534, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 534, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 534, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 534, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 534, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 534, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 534, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 534, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 534, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":535
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 535, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":536
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":537
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":535
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L320;
            }

            /* "CAComputeParse/CACompute.pyx":539
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 539, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L320:;

            /* "CAComputeParse/CACompute.pyx":534
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":540
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 540, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":542
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":543
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 543, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 543, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 543, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 543, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 543, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 543, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 543, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 543, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 543, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 543, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":544
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 544, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":545
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 545, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":546
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":544
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L325;
            }

            /* "CAComputeParse/CACompute.pyx":548
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 548, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L325:;

            /* "CAComputeParse/CACompute.pyx":543
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":549
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 549, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":551
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":552
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 552, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 552, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 552, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 552, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 552, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 552, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 552, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 552, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 552, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 552, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 552, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":553
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 553, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 553, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 553, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 553, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":554
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 554, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":555
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":553
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L330;
            }

            /* "CAComputeParse/CACompute.pyx":557
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L330:;

            /* "CAComputeParse/CACompute.pyx":552
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":558
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 558, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":560
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":561
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 561, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 561, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 561, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 561, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 561, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 561, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":562
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 562, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 562, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 562, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 562, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":563
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 563, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":564
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":562
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L335;
            }

            /* "CAComputeParse/CACompute.pyx":566
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 566, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L335:;

            /* "CAComputeParse/CACompute.pyx":561
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":567
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 567, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":569
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 569, __pyx_L338_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L338_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 569, __pyx_L338_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 569, __pyx_L338_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              {
                __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 569, __pyx_L338_error)
                __Pyx_GOTREF(__pyx_t_8);
                if (__pyx_t_4) {
                  __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 569, __pyx_L338_error)
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L338_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L338_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 569, __pyx_L338_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L345_try_end;
            __pyx_L338_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":570
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_3, &__pyx_t_8) < 0) __PYX_ERR(0, 570, __pyx_L340_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 570, __pyx_L340_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 570, __pyx_L340_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L339_exception_handled;
            }
            goto __pyx_L340_except_error;
            __pyx_L340_except_error:;

            /* "CAComputeParse/CACompute.pyx":569
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L339_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L345_try_end:;
          }
        }
        __pyx_L277:;

        /* "CAComputeParse/CACompute.pyx":474
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":571
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":572
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":573
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":574
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 574, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 574, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 574, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 574, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 574, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 574, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 574, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 574, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 574, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 574, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 574, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":575
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":576
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 576, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":577
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":575
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L351;
            }

            /* "CAComputeParse/CACompute.pyx":579
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 579, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 579, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L351:;

            /* "CAComputeParse/CACompute.pyx":574
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":580
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 580, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":582
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":583
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 583, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 583, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 583, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 583, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 583, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 583, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 583, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 583, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 583, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 583, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 583, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 583, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":584
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":585
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":586
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":584
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L356;
            }

            /* "CAComputeParse/CACompute.pyx":588
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 588, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 588, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L356:;

            /* "CAComputeParse/CACompute.pyx":583
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":589
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 589, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":591
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":592
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 592, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 592, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 592, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 592, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 592, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 592, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 592, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 592, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 592, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 592, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":593
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":594
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":595
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":593
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L361;
            }

            /* "CAComputeParse/CACompute.pyx":597
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 597, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 597, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L361:;

            /* "CAComputeParse/CACompute.pyx":592
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":598
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 598, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":600
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":601
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 601, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 601, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 601, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 601, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 601, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 601, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 601, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":602
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 602, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 602, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 602, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 602, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":603
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 603, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":604
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":602
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L366;
            }

            /* "CAComputeParse/CACompute.pyx":606
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 606, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 606, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L366:;

            /* "CAComputeParse/CACompute.pyx":601
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":607
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 607, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":609
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":610
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 610, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 610, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 610, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 610, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 610, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 610, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 610, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 610, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":611
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 611, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 611, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 611, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 611, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":612
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 612, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":613
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":611
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L371;
            }

            /* "CAComputeParse/CACompute.pyx":615
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 615, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L371:;

            /* "CAComputeParse/CACompute.pyx":610
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":616
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 616, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":618
 *                     living.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":619
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 619, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 619, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 619, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 619, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 619, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 619, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 619, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":620
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 620, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 620, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 620, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 620, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":621
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 621, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":622
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":620
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L376;
            }

            /* "CAComputeParse/CACompute.pyx":624
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 624, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 624, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L376:;

            /* "CAComputeParse/CACompute.pyx":619
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":625
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 625, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":627
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":628
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 628, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 628, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 628, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 628, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 628, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_4 = __pyx_t_2; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 628, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 628, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 628, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 628, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 628, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 628, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 628, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":629
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 629, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 629, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 629, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 629, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":630
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":631
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":629
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L381;
            }

            /* "CAComputeParse/CACompute.pyx":633
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 633, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L381:;

            /* "CAComputeParse/CACompute.pyx":628
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":634
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 634, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":636
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":637
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 637, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 637, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 637, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 637, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 637, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 637, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":638
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 638, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":639
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 639, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":640
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":638
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L386;
            }

            /* "CAComputeParse/CACompute.pyx":642
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 642, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L386:;

            /* "CAComputeParse/CACompute.pyx":637
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":643
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 643, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":645
 *                     other_forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":646
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 646, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_3 = __pyx_t_5; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 646, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 646, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 646, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 646, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 646, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 646, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 646, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":647
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 647, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 647, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 647, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 647, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":648
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":649
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":647
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L391;
            }

            /* "CAComputeParse/CACompute.pyx":651
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 651, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 651, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L391:;

            /* "CAComputeParse/CACompute.pyx":646
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":652
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 652, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":654
 *                     other_killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":655
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_7};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 655, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 655, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 655, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 655, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 655, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 655, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":656
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 656, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":657
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":658
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":656
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L396;
            }

            /* "CAComputeParse/CACompute.pyx":660
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 660, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 660, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L396:;

            /* "CAComputeParse/CACompute.pyx":655
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":661
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 661, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":663
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 663, __pyx_L399_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 663, __pyx_L399_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 663, __pyx_L399_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 663, __pyx_L399_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 663, __pyx_L399_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L406_try_end;
            __pyx_L399_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":664
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_8, &__pyx_t_5) < 0) __PYX_ERR(0, 664, __pyx_L401_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L401_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 664, __pyx_L401_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L400_exception_handled;
            }
            goto __pyx_L401_except_error;
            __pyx_L401_except_error:;

            /* "CAComputeParse/CACompute.pyx":663
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L400_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L406_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":572
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 */
          goto __pyx_L348;
        }

        /* "CAComputeParse/CACompute.pyx":666
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":667
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_4};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__31, __pyx_t_4};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 667, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 667, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 667, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 667, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 667, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 667, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 667, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":668
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 668, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 668, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 668, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 668, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":669
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":670
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":668
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L411;
            }

            /* "CAComputeParse/CACompute.pyx":672
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 672, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L411:;

            /* "CAComputeParse/CACompute.pyx":667
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":673
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 673, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":675
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":676
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 676, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_5 = __pyx_t_8; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 676, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 676, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 676, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 676, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 676, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 676, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":677
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 677, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 677, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 677, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 677, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":678
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":679
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":677
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L416;
            }

            /* "CAComputeParse/CACompute.pyx":681
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 681, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 681, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L416:;

            /* "CAComputeParse/CACompute.pyx":676
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":682
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 682, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":684
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":685
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_findall); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 685, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 685, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 685, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 685, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 685, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 685, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 685, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":686
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 686, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 686, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 686, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 686, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":687
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":688
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":686
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L421;
            }

            /* "CAComputeParse/CACompute.pyx":690
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 690, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 690, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L421:;

            /* "CAComputeParse/CACompute.pyx":685
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":691
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 691, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":693
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":694
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_5 = __pyx_t_8; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 694, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 694, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 694, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 694, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 694, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 694, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 694, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":695
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 695, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 695, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 695, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 695, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":696
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":697
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":695
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L426;
            }

            /* "CAComputeParse/CACompute.pyx":699
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 699, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L426:;

            /* "CAComputeParse/CACompute.pyx":694
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":700
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 700, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":702
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":703
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_8 = __pyx_t_5; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 703, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 703, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 703, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 703, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 703, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 703, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":704
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 704, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 704, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 704, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 704, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":705
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 705, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":706
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":704
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L431;
            }

            /* "CAComputeParse/CACompute.pyx":708
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 708, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 708, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L431:;

            /* "CAComputeParse/CACompute.pyx":703
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":709
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 709, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":711
 *                     living.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":712
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_15, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 712, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 712, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 712, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 712, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 712, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 712, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 712, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":713
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 713, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 713, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 713, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 713, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":714
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 714, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":715
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":713
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L436;
            }

            /* "CAComputeParse/CACompute.pyx":717
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 717, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 717, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L436:;

            /* "CAComputeParse/CACompute.pyx":712
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":718
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 718, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":720
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":721
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_15, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 721, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 721, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 721, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 721, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 721, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 721, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 721, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":722
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 722, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 722, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 722, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 722, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":723
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 723, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":724
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":722
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L441;
            }

            /* "CAComputeParse/CACompute.pyx":726
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 726, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 726, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L441:;

            /* "CAComputeParse/CACompute.pyx":721
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":727
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 727, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":729
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":730
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sub); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_15, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 730, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 730, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 730, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 730, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 730, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 730, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 730, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 730, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":731
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 731, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 731, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 731, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 731, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":732
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 732, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":733
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":731
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L446;
            }

            /* "CAComputeParse/CACompute.pyx":735
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 735, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 735, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L446:;

            /* "CAComputeParse/CACompute.pyx":730
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":736
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 736, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":738
 *                     other_forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":739
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_8};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_8};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_15, __pyx_t_8);
            __pyx_t_8 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 739, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_4 = __pyx_t_7; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 739, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 739, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 739, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 739, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 739, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 739, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 739, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":740
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 740, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 740, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 740, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 740, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":741
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 741, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":742
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":740
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L451;
            }

            /* "CAComputeParse/CACompute.pyx":744
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 744, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L451:;

            /* "CAComputeParse/CACompute.pyx":739
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":745
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 745, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":747
 *                     other_killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":748
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 748, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 748, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 748, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 748, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 748, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 748, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 748, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 748, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":749
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 749, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 749, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 749, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 749, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":750
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 750, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":751
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":749
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L456;
            }

            /* "CAComputeParse/CACompute.pyx":753
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 753, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 753, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L456:;

            /* "CAComputeParse/CACompute.pyx":748
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":754
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 754, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":756
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 756, __pyx_L459_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 756, __pyx_L459_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L459_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L459_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              {
                __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 756, __pyx_L459_error)
                __Pyx_GOTREF(__pyx_t_5);
                if (__pyx_t_4) {
                  __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L459_error)
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 756, __pyx_L459_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 756, __pyx_L459_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 756, __pyx_L459_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L466_try_end;
            __pyx_L459_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":757
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_3, &__pyx_t_5) < 0) __PYX_ERR(0, 757, __pyx_L461_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 757, __pyx_L461_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 757, __pyx_L461_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L460_exception_handled;
            }
            goto __pyx_L461_except_error;
            __pyx_L461_except_error:;

            /* "CAComputeParse/CACompute.pyx":756
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L460_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L466_try_end:;
          }
        }
        __pyx_L348:;

        /* "CAComputeParse/CACompute.pyx":571
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":758
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     current_trans = []
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":759
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     temp_semi_1.clear()
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 759, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":760
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[0]:
 */
          __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 760, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
          __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":761
 *                 if individual_rule_string.find(b"/") != -1:
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":762
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 762, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 762, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 762, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_3 = __pyx_t_5; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 762, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 762, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 762, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 762, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 762, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 762, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 762, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":763
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 763, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 763, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 763, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":764
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 764, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":765
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 765, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":766
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 766, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":764
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":762
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":767
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 767, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":769
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[1]:
 */
          __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 769, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
          __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":770
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":771
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 771, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 771, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 771, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_3 = __pyx_t_7; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 771, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 771, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 771, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 771, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 771, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 771, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 771, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":772
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 772, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 772, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 772, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":773
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 773, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":774
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 774, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 774, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":775
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 775, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
              __pyx_t_5 = 0;

              /* "CAComputeParse/CACompute.pyx":773
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":771
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":776
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 776, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":778
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:
 */
          __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 778, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
          __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":779
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":780
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 780, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 780, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 780, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_3 = __pyx_t_5; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 780, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 780, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 780, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 780, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 780, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 780, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 780, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":781
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 781, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 781, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 781, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":782
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 782, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":783
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     forcing_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 783, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":784
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     forcing_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 784, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":782
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":780
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":785
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     forcing_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 785, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":787
 *                     forcing_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:
 */
          __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 787, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
          __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":788
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":789
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 789, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 789, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 789, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_3 = __pyx_t_7; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 789, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 789, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 789, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 789, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 789, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 789, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 789, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":790
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 790, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 790, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 790, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":791
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 791, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":792
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     killing_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 792, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 792, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":793
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     killing_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 793, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
              __pyx_t_5 = 0;

              /* "CAComputeParse/CACompute.pyx":791
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":789
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":794
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     killing_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 794, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":796
 *                     killing_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:
 */
          __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 796, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
          __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":797
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":798
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_3 = __pyx_t_5; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 798, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 798, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 798, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 798, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 798, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 798, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":799
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":800
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 800, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":801
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     living_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 801, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":802
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 802, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":800
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":798
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":803
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     living_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 803, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":805
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 805, __pyx_L485_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L485_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 805, __pyx_L485_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 805, __pyx_L485_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 805, __pyx_L485_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L492_try_end;
            __pyx_L485_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":806
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     current_trans = []
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_3, &__pyx_t_5) < 0) __PYX_ERR(0, 806, __pyx_L487_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 806, __pyx_L487_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 806, __pyx_L487_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L486_exception_handled;
            }
            goto __pyx_L487_except_error;
            __pyx_L487_except_error:;

            /* "CAComputeParse/CACompute.pyx":805
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L486_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L492_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":759
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     temp_semi_1.clear()
 */
          goto __pyx_L469;
        }

        /* "CAComputeParse/CACompute.pyx":808
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:
 */
        /*else*/ {
          __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 808, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
          __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":809
 *                 else:
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":810
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 810, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 810, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 810, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 810, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 810, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 810, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 810, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 810, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 810, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 810, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 810, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 810, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 810, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 810, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":811
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 811, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 811, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 811, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":812
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 812, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":813
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 813, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 813, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":814
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 814, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_4));
              __pyx_t_4 = 0;

              /* "CAComputeParse/CACompute.pyx":812
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":810
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":815
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 815, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":817
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:
 */
          __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
          __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":818
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":819
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 819, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 819, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 819, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 819, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 819, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 819, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 819, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 819, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 819, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 819, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 819, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 819, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 819, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 819, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":820
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 820, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 820, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 820, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":821
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 821, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":822
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 822, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 822, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":823
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 823, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
              __pyx_t_3 = 0;

              /* "CAComputeParse/CACompute.pyx":821
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":819
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":824
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 824, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":826
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:
 */
          __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 826, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
          __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":827
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":828
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 828, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 828, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 828, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 828, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 828, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 828, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 828, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 828, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 828, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 828, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 828, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 828, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 828, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 828, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":829
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 829, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 829, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 829, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":830
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 830, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":831
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     forcing_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 831, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 831, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":832
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     forcing_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 832, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_4));
              __pyx_t_4 = 0;

              /* "CAComputeParse/CACompute.pyx":830
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":828
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":833
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     forcing_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_forcing_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 833, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":835
 *                     forcing_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:
 */
          __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 835, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
          __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":836
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":837
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 837, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 837, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 837, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 837, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 837, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 837, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 837, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":838
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 838, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 838, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 838, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":839
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 839, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":840
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     killing_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 840, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 840, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":841
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     killing_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 841, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
              __pyx_t_3 = 0;

              /* "CAComputeParse/CACompute.pyx":839
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":837
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":842
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     killing_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_killing_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 842, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":844
 *                     killing_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:
 */
          __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 844, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_5));
          __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":845
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":846
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 846, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 846, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 846, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 846, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_5 = __pyx_t_7; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 846, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 846, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 846, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 846, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 846, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 846, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 846, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":847
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 847, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 847, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 847, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":848
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 848, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":849
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     living_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 849, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 849, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":850
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 850, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_4));
              __pyx_t_4 = 0;

              /* "CAComputeParse/CACompute.pyx":848
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":846
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":851
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     living_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_living_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 851, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":853
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 853, __pyx_L510_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 853, __pyx_L510_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 853, __pyx_L510_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_5);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 853, __pyx_L510_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_5);
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 853, __pyx_L510_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_4) {
                  __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 853, __pyx_L510_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 853, __pyx_L510_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L510_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 853, __pyx_L510_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L517_try_end;
            __pyx_L510_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":854
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_5, &__pyx_t_3) < 0) __PYX_ERR(0, 854, __pyx_L512_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 854, __pyx_L512_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 854, __pyx_L512_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L511_exception_handled;
            }
            goto __pyx_L512_except_error;
            __pyx_L512_except_error:;

            /* "CAComputeParse/CACompute.pyx":853
 *                     living_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L511_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L517_try_end:;
          }
        }
        __pyx_L469:;

        /* "CAComputeParse/CACompute.pyx":758
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     current_trans = []
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":855
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":856
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 856, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 856, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 856, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 856, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":857
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 857, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":858
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":859
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 859, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":860
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 860, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":861
 *                     forcing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 861, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":863
 *                     living_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 863, __pyx_L521_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 863, __pyx_L521_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 863, __pyx_L521_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 863, __pyx_L521_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 863, __pyx_L521_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L528_try_end;
            __pyx_L521_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":864
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_moore(
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_3, &__pyx_t_7) < 0) __PYX_ERR(0, 864, __pyx_L523_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 864, __pyx_L523_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 864, __pyx_L523_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L522_exception_handled;
            }
            goto __pyx_L523_except_error;
            __pyx_L523_except_error:;

            /* "CAComputeParse/CACompute.pyx":863
 *                     living_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L522_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L528_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":856
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
          goto __pyx_L520;
        }

        /* "CAComputeParse/CACompute.pyx":866
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 866, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 866, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);

          /* "CAComputeParse/CACompute.pyx":867
 *                 else:
 *                     birth_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 866, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":866
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 866, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":868
 *                     birth_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_moore(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 868, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 868, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);

          /* "CAComputeParse/CACompute.pyx":869
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 869, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 869, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 869, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 869, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 869, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 869, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 869, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 868, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":868
 *                     birth_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_moore(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 868, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":870
 *                     survival_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_moore(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);

          /* "CAComputeParse/CACompute.pyx":871
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 871, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 871, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 871, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 871, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 871, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 871, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 871, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_8, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":870
 *                     survival_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_moore(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 870, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":872
 *                     forcing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_moore(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 872, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 872, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);

          /* "CAComputeParse/CACompute.pyx":873
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_moore(
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 873, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 873, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 873, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 873, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 872, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":872
 *                     forcing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_moore(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 872, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":874
 *                     killing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 874, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 874, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);

          /* "CAComputeParse/CACompute.pyx":875
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_moore(
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 875, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 875, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 875, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 874, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":874
 *                     killing_trans.append(get_trans_moore(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_moore(             # <<<<<<<<<<<<<<
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 874, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":877
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 877, __pyx_L531_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 877, __pyx_L531_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L531_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L531_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              {
                __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 877, __pyx_L531_error)
                __Pyx_GOTREF(__pyx_t_6);
                if (__pyx_t_7) {
                  __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L531_error)
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 877, __pyx_L531_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 877, __pyx_L531_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 877, __pyx_L531_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L538_try_end;
            __pyx_L531_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":878
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_3, &__pyx_t_6) < 0) __PYX_ERR(0, 878, __pyx_L533_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 878, __pyx_L533_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 878, __pyx_L533_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L532_exception_handled;
            }
            goto __pyx_L533_except_error;
            __pyx_L533_except_error:;

            /* "CAComputeParse/CACompute.pyx":877
 *                        re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L532_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L538_try_end:;
          }
        }
        __pyx_L520:;

        /* "CAComputeParse/CACompute.pyx":855
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":879
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":880
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 880, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 880, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 880, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 880, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":881
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 881, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":882
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 882, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":883
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 883, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":884
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 884, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":885
 *                     forcing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":887
 *                     living_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L542_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 887, __pyx_L542_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L542_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 887, __pyx_L542_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 887, __pyx_L542_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L549_try_end;
            __pyx_L542_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":888
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_cross(
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_6, &__pyx_t_5) < 0) __PYX_ERR(0, 888, __pyx_L544_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L544_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 888, __pyx_L544_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L543_exception_handled;
            }
            goto __pyx_L544_except_error;
            __pyx_L544_except_error:;

            /* "CAComputeParse/CACompute.pyx":887
 *                     living_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L543_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L549_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":880
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
          goto __pyx_L541;
        }

        /* "CAComputeParse/CACompute.pyx":890
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 890, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 890, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "CAComputeParse/CACompute.pyx":891
 *                 else:
 *                     birth_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 891, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 891, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 891, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 891, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 891, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 891, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 891, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 890, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":890
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 890, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":892
 *                     birth_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_cross(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 892, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 892, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "CAComputeParse/CACompute.pyx":893
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 893, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 893, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 893, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 893, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 892, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":892
 *                     birth_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_cross(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 892, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":894
 *                     survival_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_cross(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "CAComputeParse/CACompute.pyx":895
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 895, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 895, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 895, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":894
 *                     survival_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_cross(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":896
 *                     forcing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_cross(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "CAComputeParse/CACompute.pyx":897
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 897, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 897, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 897, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 897, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 897, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 897, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 897, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":896
 *                     forcing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_cross(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":898
 *                     killing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 898, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 898, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);

          /* "CAComputeParse/CACompute.pyx":899
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 899, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 899, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 899, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 899, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 898, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":898
 *                     killing_trans.append(get_trans_cross(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_cross(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 898, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":901
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 901, __pyx_L552_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 901, __pyx_L552_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 901, __pyx_L552_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 901, __pyx_L552_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              {
                __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 901, __pyx_L552_error)
                __Pyx_GOTREF(__pyx_t_8);
                if (__pyx_t_5) {
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 901, __pyx_L552_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 901, __pyx_L552_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 901, __pyx_L552_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 901, __pyx_L552_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L559_try_end;
            __pyx_L552_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":902
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_6, &__pyx_t_8) < 0) __PYX_ERR(0, 902, __pyx_L554_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 902, __pyx_L554_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 902, __pyx_L554_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L553_exception_handled;
            }
            goto __pyx_L554_except_error;
            __pyx_L554_except_error:;

            /* "CAComputeParse/CACompute.pyx":901
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L553_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L559_try_end:;
          }
        }
        __pyx_L541:;

        /* "CAComputeParse/CACompute.pyx":879
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":903
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":904
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 904, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 904, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 904, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 904, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":905
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":906
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 906, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":907
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 907, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":908
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 908, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":909
 *                     forcing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 909, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":911
 *                     living_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 911, __pyx_L563_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 911, __pyx_L563_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 911, __pyx_L563_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 911, __pyx_L563_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 911, __pyx_L563_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L570_try_end;
            __pyx_L563_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":912
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_8, &__pyx_t_3) < 0) __PYX_ERR(0, 912, __pyx_L565_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 912, __pyx_L565_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 912, __pyx_L565_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L564_exception_handled;
            }
            goto __pyx_L565_except_error;
            __pyx_L565_except_error:;

            /* "CAComputeParse/CACompute.pyx":911
 *                     living_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L564_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L570_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":904
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
          goto __pyx_L562;
        }

        /* "CAComputeParse/CACompute.pyx":914
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":915
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 915, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 915, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 915, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 915, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 915, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 915, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 915, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":914
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":916
 *                     birth_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_von_neumann(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 916, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 916, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":917
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 916, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":916
 *                     birth_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_von_neumann(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 916, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":918
 *                     survival_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_von_neumann(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 918, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 918, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":919
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 919, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 919, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 919, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 919, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 919, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 919, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 919, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 918, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":918
 *                     survival_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_von_neumann(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 918, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":920
 *                     forcing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_von_neumann(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 920, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 920, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":921
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 921, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 921, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 921, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 921, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 921, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 921, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 921, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 920, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":920
 *                     forcing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_von_neumann(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 920, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":922
 *                     killing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":923
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 923, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":922
 *                     killing_trans.append(get_trans_von_neumann(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_von_neumann(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 922, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":925
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 925, __pyx_L573_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 925, __pyx_L573_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 925, __pyx_L573_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 925, __pyx_L573_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              {
                __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 925, __pyx_L573_error)
                __Pyx_GOTREF(__pyx_t_4);
                if (__pyx_t_3) {
                  __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 925, __pyx_L573_error)
                __Pyx_GOTREF(__pyx_t_8);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              }
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 925, __pyx_L573_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 925, __pyx_L573_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 925, __pyx_L573_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L580_try_end;
            __pyx_L573_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":926
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_8, &__pyx_t_4) < 0) __PYX_ERR(0, 926, __pyx_L575_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 926, __pyx_L575_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 926, __pyx_L575_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L574_exception_handled;
            }
            goto __pyx_L575_except_error;
            __pyx_L575_except_error:;

            /* "CAComputeParse/CACompute.pyx":925
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L574_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L580_try_end:;
          }
        }
        __pyx_L562:;

        /* "CAComputeParse/CACompute.pyx":903
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
        goto __pyx_L276;
      }

      /* "CAComputeParse/CACompute.pyx":927
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":928
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 928, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 928, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 928, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 928, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":929
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 929, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":930
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 930, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":931
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 931, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":932
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     forcing_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 932, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":933
 *                     forcing_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     killing_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 *                     living_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 933, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":935
 *                     living_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 935, __pyx_L584_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L584_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 935, __pyx_L584_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 935, __pyx_L584_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 935, __pyx_L584_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L591_try_end;
            __pyx_L584_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":936
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_far(
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_4, &__pyx_t_6) < 0) __PYX_ERR(0, 936, __pyx_L586_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L586_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 936, __pyx_L586_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L585_exception_handled;
            }
            goto __pyx_L586_except_error;
            __pyx_L586_except_error:;

            /* "CAComputeParse/CACompute.pyx":935
 *                     living_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[5])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L585_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L591_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":928
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
          goto __pyx_L583;
        }

        /* "CAComputeParse/CACompute.pyx":938
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 938, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 938, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":939
 *                 else:
 *                     birth_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 939, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 939, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 939, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 939, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 939, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 939, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 939, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 938, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":938
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 938, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":940
 *                     birth_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_far(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 940, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 940, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":941
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 *                     forcing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 941, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 941, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 941, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 941, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 941, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 941, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 941, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 940, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":940
 *                     birth_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_far(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 940, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":942
 *                     survival_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_far(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 942, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 942, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":943
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     killing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 943, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 943, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 943, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 943, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 942, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":942
 *                     survival_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]))
 *                     forcing_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_far(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 942, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":944
 *                     forcing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_far(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":945
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     living_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 945, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 945, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 945, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":944
 *                     forcing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]))
 *                     killing_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_far(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":946
 *                     killing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 946, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 946, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":947
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 947, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 947, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 947, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 947, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 947, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 947, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 947, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 946, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":946
 *                     killing_trans.append(get_trans_far(
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]))
 *                     living_trans.append(get_trans_far(             # <<<<<<<<<<<<<<
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 946, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":949
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 949, __pyx_L594_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 949, __pyx_L594_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 949, __pyx_L594_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_f_k_l_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 949, __pyx_L594_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 949, __pyx_L594_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 949, __pyx_L594_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 949, __pyx_L594_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 949, __pyx_L594_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 949, __pyx_L594_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L601_try_end;
            __pyx_L594_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":950
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *         elif rule_space == b"Extended Generations":
 *             if bsconditions == b"Outer Totalistic":
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(0, 950, __pyx_L596_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 950, __pyx_L596_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 950, __pyx_L596_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L595_exception_handled;
            }
            goto __pyx_L596_except_error;
            __pyx_L596_except_error:;

            /* "CAComputeParse/CACompute.pyx":949
 *                         re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L595_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L601_try_end:;
          }
        }
        __pyx_L583:;

        /* "CAComputeParse/CACompute.pyx":927
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
      }
      __pyx_L276:;

      /* "CAComputeParse/CACompute.pyx":473
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[3])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
      goto __pyx_L55;
    }

    /* "CAComputeParse/CACompute.pyx":951
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":952
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":953
 *         elif rule_space == b"Extended Generations":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 953, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 953, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 953, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 953, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":954
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":955
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 955, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 955, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 955, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 955, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 955, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_7 = __pyx_t_4; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 955, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 955, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 955, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 955, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 955, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 955, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 955, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":956
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 956, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 956, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 956, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 956, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":957
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":958
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":956
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L608;
            }

            /* "CAComputeParse/CACompute.pyx":960
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 960, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L608:;

            /* "CAComputeParse/CACompute.pyx":955
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":961
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 961, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":963
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":964
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 964, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 964, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 964, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 964, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 964, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_4 = __pyx_t_7; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 964, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 964, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 964, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 964, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 964, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 964, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 964, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":965
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 965, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 965, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 965, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 965, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":966
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":967
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":965
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L613;
            }

            /* "CAComputeParse/CACompute.pyx":969
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 969, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L613:;

            /* "CAComputeParse/CACompute.pyx":964
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":970
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 970, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":972
 *                     survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":973
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 973, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 973, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 973, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 973, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 973, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_7 = __pyx_t_4; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 973, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 973, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 973, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 973, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 973, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 973, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 973, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":974
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 974, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 974, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":973
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":976
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L618_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 976, __pyx_L618_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L618_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L618_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 976, __pyx_L618_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L625_try_end;
            __pyx_L618_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":977
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(0, 977, __pyx_L620_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 977, __pyx_L620_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 977, __pyx_L620_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L619_exception_handled;
            }
            goto __pyx_L620_except_error;
            __pyx_L620_except_error:;

            /* "CAComputeParse/CACompute.pyx":976
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L619_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L625_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":953
 *         elif rule_space == b"Extended Generations":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
          goto __pyx_L605;
        }

        /* "CAComputeParse/CACompute.pyx":979
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":980
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_7 = __pyx_t_8; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 980, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 980, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 980, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 980, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 980, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 980, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":981
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":982
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":983
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":981
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L630;
            }

            /* "CAComputeParse/CACompute.pyx":985
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 985, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 985, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L630:;

            /* "CAComputeParse/CACompute.pyx":980
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":986
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 986, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":988
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":989
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 989, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 989, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 989, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 989, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 989, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_8 = __pyx_t_7; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 989, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 989, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 989, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 989, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 989, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 989, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 989, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":990
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 990, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 990, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 990, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 990, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":991
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 991, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":992
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":990
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L635;
            }

            /* "CAComputeParse/CACompute.pyx":994
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 994, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L635:;

            /* "CAComputeParse/CACompute.pyx":989
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":995
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 995, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":997
 *                     survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":998
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 998, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 998, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 998, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 998, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 998, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 998, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 998, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 998, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 998, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_7 = __pyx_t_8; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 998, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 998, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 998, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 998, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 998, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 998, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 998, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":999
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 999, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 999, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":998
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1001
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1001, __pyx_L640_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1001, __pyx_L640_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1001, __pyx_L640_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1001, __pyx_L640_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              {
                __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1001, __pyx_L640_error)
                __Pyx_GOTREF(__pyx_t_6);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1001, __pyx_L640_error)
                __Pyx_GOTREF(__pyx_t_7);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1001, __pyx_L640_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L640_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1001, __pyx_L640_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L647_try_end;
            __pyx_L640_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1002
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(0, 1002, __pyx_L642_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L642_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1002, __pyx_L642_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L641_exception_handled;
            }
            goto __pyx_L642_except_error;
            __pyx_L642_except_error:;

            /* "CAComputeParse/CACompute.pyx":1001
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L641_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L647_try_end:;
          }
        }
        __pyx_L605:;

        /* "CAComputeParse/CACompute.pyx":952
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1003
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1004
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1005
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1006
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1006, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1006, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1006, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1006, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1006, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1006, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1006, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1006, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1006, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1006, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1006, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1006, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1007
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1007, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1007, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            (void)(__pyx_v_set_temp.insert(__pyx_t_15));

            /* "CAComputeParse/CACompute.pyx":1006
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1008
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1008, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1010
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1011
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1011, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1011, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1011, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1011, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1011, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1011, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1011, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1011, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1011, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1011, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1011, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1011, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1012
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1012, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1012, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1012, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1012, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1013
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1014
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1012
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L655;
            }

            /* "CAComputeParse/CACompute.pyx":1016
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1016, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1016, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L655:;

            /* "CAComputeParse/CACompute.pyx":1011
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1017
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1017, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1019
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1020
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1020, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1020, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1020, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1020, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1020, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_4 = __pyx_t_7; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1020, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1020, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1020, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1020, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1020, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1020, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1020, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1021
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1021, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1021, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1021, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1021, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1022
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1023
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1021
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L660;
            }

            /* "CAComputeParse/CACompute.pyx":1025
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1025, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L660:;

            /* "CAComputeParse/CACompute.pyx":1020
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1026
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1026, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1028
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1029
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sub); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1029, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1029, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1029, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_15, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1029, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1029, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_8 = __pyx_t_4; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1029, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1029, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1029, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1029, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1029, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1029, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1029, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":1030
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1030, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1030, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1030, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1030, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1031
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1031, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1032
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1030
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L665;
            }

            /* "CAComputeParse/CACompute.pyx":1034
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1034, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1034, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L665:;

            /* "CAComputeParse/CACompute.pyx":1029
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1035
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1035, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1037
 *                     other_survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1038
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1038, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1038, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1038, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1038, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1038, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_4 = __pyx_t_8; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1038, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1038, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1038, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1038, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1038, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1038, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1038, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1039
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1039, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1039, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1039, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1038
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1041
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1041, __pyx_L670_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1041, __pyx_L670_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1041, __pyx_L670_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1041, __pyx_L670_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1041, __pyx_L670_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L677_try_end;
            __pyx_L670_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1042
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(0, 1042, __pyx_L672_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1042, __pyx_L672_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1042, __pyx_L672_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L671_exception_handled;
            }
            goto __pyx_L672_except_error;
            __pyx_L672_except_error:;

            /* "CAComputeParse/CACompute.pyx":1041
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L671_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L677_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1004
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
          goto __pyx_L650;
        }

        /* "CAComputeParse/CACompute.pyx":1044
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1045
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_bsd);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1045, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_4 = __pyx_t_7; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1045, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1045, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1045, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1045, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1045, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1045, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1046
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1046, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1046, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1046, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1046, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1047
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1048
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1046
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L682;
            }

            /* "CAComputeParse/CACompute.pyx":1050
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1050, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1050, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L682:;

            /* "CAComputeParse/CACompute.pyx":1045
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1051
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1051, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1053
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1054
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_bsd);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_8};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_8};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_t_8);
            __pyx_t_8 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1054, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_7 = __pyx_t_4; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1054, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1054, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1054, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1054, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1054, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1054, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1054, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":1055
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1055, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1055, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1055, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1055, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1056
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1056, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1057
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1055
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L687;
            }

            /* "CAComputeParse/CACompute.pyx":1059
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1059, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1059, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L687:;

            /* "CAComputeParse/CACompute.pyx":1054
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1060
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1060, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1062
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1063
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_bsd);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_15, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1063, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_2 = __pyx_t_7; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1063, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1063, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1063, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1063, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1063, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1063, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1063, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1064
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1064, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1064, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1064, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1064, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1065
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1065, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_23; __pyx_t_15 < __pyx_t_22; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1066
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1064
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L692;
            }

            /* "CAComputeParse/CACompute.pyx":1068
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1068, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1068, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L692:;

            /* "CAComputeParse/CACompute.pyx":1063
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1069
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1069, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1071
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1072
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_bsd);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 3+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(3+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_15, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1072, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1072, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1072, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1072, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1072, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1072, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1072, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1072, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1073
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1073, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1073, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1073, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1073, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1074
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_15 = __pyx_t_22; __pyx_t_15 < __pyx_t_23; __pyx_t_15+=1) {
                __pyx_v_i = __pyx_t_15;

                /* "CAComputeParse/CACompute.pyx":1075
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1073
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L697;
            }

            /* "CAComputeParse/CACompute.pyx":1077
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1077, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1077, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_15));
            }
            __pyx_L697:;

            /* "CAComputeParse/CACompute.pyx":1072
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1078
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1078, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1080
 *                     other_survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1081
 * 
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1081, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1081, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_bsd, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1081, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_bsd);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1081, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1081, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_2 = __pyx_t_6; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1081, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1081, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1081, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1081, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1081, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1081, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1082
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1082, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1082, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1081
 * 
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1084
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1084, __pyx_L702_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1084, __pyx_L702_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1084, __pyx_L702_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1084, __pyx_L702_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1084, __pyx_L702_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1084, __pyx_L702_error)
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1084, __pyx_L702_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L702_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1084, __pyx_L702_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L709_try_end;
            __pyx_L702_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1085
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 1085, __pyx_L704_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1085, __pyx_L704_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1085, __pyx_L704_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L703_exception_handled;
            }
            goto __pyx_L704_except_error;
            __pyx_L704_except_error:;

            /* "CAComputeParse/CACompute.pyx":1084
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L703_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L709_try_end:;
          }
        }
        __pyx_L650:;

        /* "CAComputeParse/CACompute.pyx":1003
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1086
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1087
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     current_trans = []
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1087, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1087, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1087, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1087, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1088
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1089
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1089, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1090
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1090, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1090, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1090, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1090, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1090, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1091
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1091, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1091, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1091, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1092
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1092, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1093
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1093, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1093, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1094
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1094, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_8));
              __pyx_t_8 = 0;

              /* "CAComputeParse/CACompute.pyx":1092
 *                     for x in individual_rule_string.split(b"/")[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1090
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1095
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     temp_semi_1.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1095, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1097
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1098
 * 
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1098, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1099
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1099, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1099, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1099, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1099, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1099, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1099, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1100
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1100, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1100, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1100, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1101
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1101, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1102
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1102, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1103
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1103, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_3));
              __pyx_t_3 = 0;

              /* "CAComputeParse/CACompute.pyx":1101
 *                     for x in individual_rule_string.split(b"/")[0]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1099
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in individual_rule_string.split(b"/")[0]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1104
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1104, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1106
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1106, __pyx_L719_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1106, __pyx_L719_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1106, __pyx_L719_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1106, __pyx_L719_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1106, __pyx_L719_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L726_try_end;
            __pyx_L719_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1107
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     temp_semi_1.clear()
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_2, &__pyx_t_8) < 0) __PYX_ERR(0, 1107, __pyx_L721_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L721_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1107, __pyx_L721_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L720_exception_handled;
            }
            goto __pyx_L721_except_error;
            __pyx_L721_except_error:;

            /* "CAComputeParse/CACompute.pyx":1106
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L720_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L726_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1087
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     current_trans = []
 */
          goto __pyx_L712;
        }

        /* "CAComputeParse/CACompute.pyx":1109
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     current_trans = []
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:
 */
        /*else*/ {
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1110
 *                 else:
 *                     temp_semi_1.clear()
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1110, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_8));
          __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1111
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1111, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1111, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1111, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1111, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1111, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1111, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1111, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1111, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1111, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1111, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1111, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1112
 *                     current_trans = []
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1112, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1112, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1112, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1113
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1113, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1114
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_6, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1114, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1115
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1115, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
              __pyx_t_6 = 0;

              /* "CAComputeParse/CACompute.pyx":1113
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1111
 *                     temp_semi_1.clear()
 *                     current_trans = []
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1116
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     temp_semi_1.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1116, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1118
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1119
 * 
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1119, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1119, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1119, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1119, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1119, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1119, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1119, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_8 = __pyx_t_3; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1119, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1119, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1119, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1119, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1119, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1119, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1119, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1120
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1120, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1120, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1121
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1121, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1122
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1122, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1123
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1123, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
              __pyx_t_2 = 0;

              /* "CAComputeParse/CACompute.pyx":1121
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1119
 * 
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1124
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1124, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1126
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1127
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1127, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1127, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1127, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1127, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1127, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1127, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1128
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])
 */
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1128, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1128, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1128, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1127
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1130
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1130, __pyx_L737_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1130, __pyx_L737_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L737_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L737_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1130, __pyx_L737_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L737_error)
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1130, __pyx_L737_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1130, __pyx_L737_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1130, __pyx_L737_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L744_try_end;
            __pyx_L737_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1131
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_2, &__pyx_t_7) < 0) __PYX_ERR(0, 1131, __pyx_L739_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1131, __pyx_L739_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1131, __pyx_L739_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L738_exception_handled;
            }
            goto __pyx_L739_except_error;
            __pyx_L739_except_error:;

            /* "CAComputeParse/CACompute.pyx":1130
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L738_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L744_try_end:;
          }
        }
        __pyx_L712:;

        /* "CAComputeParse/CACompute.pyx":1086
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     temp_semi_1.clear()
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1132
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1133
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1133, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1134
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1134, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1135
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1135, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1137
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1138
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1138, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1138, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1138, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1138, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1138, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1138, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1138, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1139
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1139, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1139, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1138
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1141
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1141, __pyx_L750_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1141, __pyx_L750_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1141, __pyx_L750_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1141, __pyx_L750_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1141, __pyx_L750_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L757_try_end;
            __pyx_L750_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1142
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(0, 1142, __pyx_L752_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1142, __pyx_L752_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1142, __pyx_L752_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L751_exception_handled;
            }
            goto __pyx_L752_except_error;
            __pyx_L752_except_error:;

            /* "CAComputeParse/CACompute.pyx":1141
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L751_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L757_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1133
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L747;
        }

        /* "CAComputeParse/CACompute.pyx":1144
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1144, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1144, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1144, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1144, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1144, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1145
 *                 else:
 *                     birth_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1145, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1145, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1145, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1145, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1145, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1147
 *                     survival_trans.append(get_trans_moore(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1148
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1148, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1148, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1148, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1148, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1148, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1148, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1148, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1148, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1148, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1148, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1148, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1149
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1149, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1149, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1149, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1148
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1151
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1151, __pyx_L762_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1151, __pyx_L762_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1151, __pyx_L762_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1151, __pyx_L762_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              {
                __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1151, __pyx_L762_error)
                __Pyx_GOTREF(__pyx_t_4);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1151, __pyx_L762_error)
                __Pyx_GOTREF(__pyx_t_7);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              }
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1151, __pyx_L762_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1151, __pyx_L762_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1151, __pyx_L762_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L769_try_end;
            __pyx_L762_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1152
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_7, &__pyx_t_4) < 0) __PYX_ERR(0, 1152, __pyx_L764_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1152, __pyx_L764_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1152, __pyx_L764_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L763_exception_handled;
            }
            goto __pyx_L764_except_error;
            __pyx_L764_except_error:;

            /* "CAComputeParse/CACompute.pyx":1151
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L763_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L769_try_end:;
          }
        }
        __pyx_L747:;

        /* "CAComputeParse/CACompute.pyx":1132
 *                     try: naive_lst.push_back(re.split(b"b|s|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1153
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1154
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1154, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1155
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1155, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1156
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1156, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1158
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1159
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1159, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_4 = __pyx_t_7; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1159, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1159, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1159, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1159, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1159, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1159, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1159, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1160
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1160, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1160, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1159
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1162
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1162, __pyx_L775_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1162, __pyx_L775_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1162, __pyx_L775_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1162, __pyx_L775_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1162, __pyx_L775_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L782_try_end;
            __pyx_L775_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1163
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_4, &__pyx_t_5) < 0) __PYX_ERR(0, 1163, __pyx_L777_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1163, __pyx_L777_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1163, __pyx_L777_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L776_exception_handled;
            }
            goto __pyx_L777_except_error;
            __pyx_L777_except_error:;

            /* "CAComputeParse/CACompute.pyx":1162
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L776_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L782_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1154
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L772;
        }

        /* "CAComputeParse/CACompute.pyx":1165
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1165, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1165, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1165, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1165, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1165, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1166
 *                 else:
 *                     birth_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_5); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1166, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":1168
 *                     survival_trans.append(get_trans_cross(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1169
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1169, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1169, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1169, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1169, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1169, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1169, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1169, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1169, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1169, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1169, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1169, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1169, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1169, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1169, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1169, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":1170
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1170, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1170, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1169
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1172
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1172, __pyx_L787_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1172, __pyx_L787_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1172, __pyx_L787_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1172, __pyx_L787_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1172, __pyx_L787_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_5) {
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1172, __pyx_L787_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1172, __pyx_L787_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1172, __pyx_L787_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1172, __pyx_L787_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L794_try_end;
            __pyx_L787_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1173
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_4, &__pyx_t_3) < 0) __PYX_ERR(0, 1173, __pyx_L789_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1173, __pyx_L789_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1173, __pyx_L789_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L788_exception_handled;
            }
            goto __pyx_L789_except_error;
            __pyx_L789_except_error:;

            /* "CAComputeParse/CACompute.pyx":1172
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L788_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L794_try_end:;
          }
        }
        __pyx_L772:;

        /* "CAComputeParse/CACompute.pyx":1153
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1174
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1175
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1175, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1175, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1176
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1176, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1177
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1177, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1179
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1180
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1180, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1180, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1180, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1180, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1180, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1180, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1180, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1180, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1180, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1180, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1180, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1180, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CAComputeParse/CACompute.pyx":1181
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1181, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1181, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1181, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1180
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1183
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1183, __pyx_L800_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L800_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1183, __pyx_L800_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1183, __pyx_L800_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1183, __pyx_L800_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L807_try_end;
            __pyx_L800_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1184
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_3, &__pyx_t_8) < 0) __PYX_ERR(0, 1184, __pyx_L802_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L802_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1184, __pyx_L802_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L801_exception_handled;
            }
            goto __pyx_L802_except_error;
            __pyx_L802_except_error:;

            /* "CAComputeParse/CACompute.pyx":1183
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L801_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L807_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1175
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L797;
        }

        /* "CAComputeParse/CACompute.pyx":1186
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1186, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1186, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1186, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1186, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1186, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1187
 *                 else:
 *                     birth_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1187, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1187, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1189
 *                     survival_trans.append(get_trans_von_neumann(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1190
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1190, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1190, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1190, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1190, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1190, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_3 = __pyx_t_8; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1190, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1190, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1190, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1190, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1190, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1190, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1190, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1191
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1191, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1191, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1191, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1190
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1193
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1193, __pyx_L812_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1193, __pyx_L812_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1193, __pyx_L812_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1193, __pyx_L812_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_3);
              } else
              #endif
              {
                __pyx_t_2 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1193, __pyx_L812_error)
                __Pyx_GOTREF(__pyx_t_2);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1193, __pyx_L812_error)
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1193, __pyx_L812_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1193, __pyx_L812_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1193, __pyx_L812_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L819_try_end;
            __pyx_L812_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1194
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_3, &__pyx_t_2) < 0) __PYX_ERR(0, 1194, __pyx_L814_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1194, __pyx_L814_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1194, __pyx_L814_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L813_exception_handled;
            }
            goto __pyx_L814_except_error;
            __pyx_L814_except_error:;

            /* "CAComputeParse/CACompute.pyx":1193
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L813_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L819_try_end:;
          }
        }
        __pyx_L797:;

        /* "CAComputeParse/CACompute.pyx":1174
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L604;
      }

      /* "CAComputeParse/CACompute.pyx":1195
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1196
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1196, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1196, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1196, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1196, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1197
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1198
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_3); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1198, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1200
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1201
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1201, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1201, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1201, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1201, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1201, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1201, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1201, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1201, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1201, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1201, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1201, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1201, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1202
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 */
            __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1202, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1202, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1201
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1204
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L825_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1204, __pyx_L825_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1204, __pyx_L825_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1204, __pyx_L825_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1204, __pyx_L825_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L832_try_end;
            __pyx_L825_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1205
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_2, &__pyx_t_6) < 0) __PYX_ERR(0, 1205, __pyx_L827_except_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1205, __pyx_L827_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1205, __pyx_L827_except_error)
              }
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L826_exception_handled;
            }
            goto __pyx_L827_except_error;
            __pyx_L827_except_error:;

            /* "CAComputeParse/CACompute.pyx":1204
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[3])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L826_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L832_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1196
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[0]))
 */
          goto __pyx_L822;
        }

        /* "CAComputeParse/CACompute.pyx":1207
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1207, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1207, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1207, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1207, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1207, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1208
 *                 else:
 *                     birth_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[1]))
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1208, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1208, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1208, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1208, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1208, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1210
 *                     survival_trans.append(get_trans_far(re.split(b"b|s|d|nn", individual_rule_string)[2]))
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CAComputeParse/CACompute.pyx":1211
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1211, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1211, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_2 = __pyx_t_6; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1211, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1211, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1211, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1211, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1211, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1211, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1211, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1212
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 */
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1212, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1212, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_15);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1212, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":1211
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1214
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 * 
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1214, __pyx_L837_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1214, __pyx_L837_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_15 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_15 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1214, __pyx_L837_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_d_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1214, __pyx_L837_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1214, __pyx_L837_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_b_s_d_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
                __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1214, __pyx_L837_error)
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1214, __pyx_L837_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1214, __pyx_L837_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1214, __pyx_L837_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L844_try_end;
            __pyx_L837_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1215
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 * 
 *             num, alt = 1, 1
 */
            __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_15) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_2, &__pyx_t_7) < 0) __PYX_ERR(0, 1215, __pyx_L839_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1215, __pyx_L839_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1215, __pyx_L839_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L838_exception_handled;
            }
            goto __pyx_L839_except_error;
            __pyx_L839_except_error:;

            /* "CAComputeParse/CACompute.pyx":1214
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 * 
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L838_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L844_try_end:;
          }
        }
        __pyx_L822:;

        /* "CAComputeParse/CACompute.pyx":1195
 *                     try: naive_lst.push_back(re.split(b"b|s|d|nn", individual_rule_string)[4])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[1]))
 */
      }
      __pyx_L604:;

      /* "CAComputeParse/CACompute.pyx":1217
 *                     except IndexError: naive_lst.push_back(b"-1")
 * 
 *             num, alt = 1, 1             # <<<<<<<<<<<<<<
 *             set_temp.clear()
 *             for i in extended:
 */
      __pyx_t_15 = 1;
      __pyx_t_25 = 1;
      __pyx_v_num = __pyx_t_15;
      __pyx_v_alt = __pyx_t_25;

      /* "CAComputeParse/CACompute.pyx":1218
 * 
 *             num, alt = 1, 1
 *             set_temp.clear()             # <<<<<<<<<<<<<<
 *             for i in extended:
 *                 for j in range(num, i + num):
 */
      __pyx_v_set_temp.clear();

      /* "CAComputeParse/CACompute.pyx":1219
 *             num, alt = 1, 1
 *             set_temp.clear()
 *             for i in extended:             # <<<<<<<<<<<<<<
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 */
      __pyx_t_35 = __pyx_v_extended.begin();
      for (;;) {
        if (!(__pyx_t_35 != __pyx_v_extended.end())) break;
        __pyx_t_25 = *__pyx_t_35;
        ++__pyx_t_35;
        __pyx_v_i = __pyx_t_25;

        /* "CAComputeParse/CACompute.pyx":1220
 *             set_temp.clear()
 *             for i in extended:
 *                 for j in range(num, i + num):             # <<<<<<<<<<<<<<
 *                     if alt > 0:
 *                         set_temp.insert(j)
 */
        __pyx_t_25 = (__pyx_v_i + __pyx_v_num);
        __pyx_t_15 = __pyx_t_25;
        for (__pyx_t_27 = __pyx_v_num; __pyx_t_27 < __pyx_t_15; __pyx_t_27+=1) {
          __pyx_v_j = __pyx_t_27;

          /* "CAComputeParse/CACompute.pyx":1221
 *             for i in extended:
 *                 for j in range(num, i + num):
 *                     if alt > 0:             # <<<<<<<<<<<<<<
 *                         set_temp.insert(j)
 *                     num += 1
 */
          __pyx_t_11 = ((__pyx_v_alt > 0) != 0);
          if (__pyx_t_11) {

            /* "CAComputeParse/CACompute.pyx":1222
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 *                         set_temp.insert(j)             # <<<<<<<<<<<<<<
 *                     num += 1
 *                 alt *= -1
 */
            (void)(__pyx_v_set_temp.insert(__pyx_v_j));

            /* "CAComputeParse/CACompute.pyx":1221
 *             for i in extended:
 *                 for j in range(num, i + num):
 *                     if alt > 0:             # <<<<<<<<<<<<<<
 *                         set_temp.insert(j)
 *                     num += 1
 */
          }

          /* "CAComputeParse/CACompute.pyx":1223
 *                     if alt > 0:
 *                         set_temp.insert(j)
 *                     num += 1             # <<<<<<<<<<<<<<
 *                 alt *= -1
 * 
 */
          __pyx_v_num = (__pyx_v_num + 1);
        }

        /* "CAComputeParse/CACompute.pyx":1224
 *                         set_temp.insert(j)
 *                     num += 1
 *                 alt *= -1             # <<<<<<<<<<<<<<
 * 
 *             activity_list.push_back(set_temp)
 */
        __pyx_v_alt = (__pyx_v_alt * -1L);

        /* "CAComputeParse/CACompute.pyx":1219
 *             num, alt = 1, 1
 *             set_temp.clear()
 *             for i in extended:             # <<<<<<<<<<<<<<
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 */
      }

      /* "CAComputeParse/CACompute.pyx":1226
 *                 alt *= -1
 * 
 *             activity_list.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *             file = open("log.log", "w")
 */
      try {
        __pyx_v_14CAComputeParse_9CACompute_activity_list.push_back(__pyx_v_set_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1226, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1228
 *             activity_list.push_back(set_temp)
 * 
 *             file = open("log.log", "w")             # <<<<<<<<<<<<<<
 *             file.write(str(activity_list) + " " + str(extended))
 *             file.close()
 */
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF_SET(__pyx_v_file, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "CAComputeParse/CACompute.pyx":1229
 * 
 *             file = open("log.log", "w")
 *             file.write(str(activity_list) + " " + str(extended))             # <<<<<<<<<<<<<<
 *             file.close()
 *         elif rule_space == b"Regenerating Generations":
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_file, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(__pyx_v_14CAComputeParse_9CACompute_activity_list); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__34); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __pyx_convert_vector_to_py_int(__pyx_v_extended); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "CAComputeParse/CACompute.pyx":1230
 *             file = open("log.log", "w")
 *             file.write(str(activity_list) + " " + str(extended))
 *             file.close()             # <<<<<<<<<<<<<<
 *         elif rule_space == b"Regenerating Generations":
 *             if bsconditions == b"Outer Totalistic":
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_file, __pyx_n_s_close); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "CAComputeParse/CACompute.pyx":951
 *                     try: naive_lst.push_back(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
      goto __pyx_L55;
    }

    /* "CAComputeParse/CACompute.pyx":1231
 *             file.write(str(activity_list) + " " + str(extended))
 *             file.close()
 *         elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":1232
 *             file.close()
 *         elif rule_space == b"Regenerating Generations":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1233
 *         elif rule_space == b"Regenerating Generations":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1233, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1233, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1233, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1233, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1234
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1234, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1236
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1237
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1237, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1237, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1237, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1237, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1237, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1237, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1237, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1237, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1238
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1238, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1238, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1238, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1238, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1239
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1239, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1240
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1238
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L856;
            }

            /* "CAComputeParse/CACompute.pyx":1242
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1242, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1242, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L856:;

            /* "CAComputeParse/CACompute.pyx":1237
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1243
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1243, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1245
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1246
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1246, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_2 = __pyx_t_7; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1246, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1246, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1246, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1246, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1246, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1246, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1246, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1247
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1247, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1247, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1247, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1247, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1248
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1248, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1249
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1247
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L861;
            }

            /* "CAComputeParse/CACompute.pyx":1251
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1251, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1251, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L861:;

            /* "CAComputeParse/CACompute.pyx":1246
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1252
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1252, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1254
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1255
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1255, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1255, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1255, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1255, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1255, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1255, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1255, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1255, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1255, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1255, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1255, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1255, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1256
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1256, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1256, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1256, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1256, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1257
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1257, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1258
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1256
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L866;
            }

            /* "CAComputeParse/CACompute.pyx":1260
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1260, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1260, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L866:;

            /* "CAComputeParse/CACompute.pyx":1255
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1261
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1261, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1263
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1264
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1264, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1264, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1264, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1264, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1264, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_2 = __pyx_t_7; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1264, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1264, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1264, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1264, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1264, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1264, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1264, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1265
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1265, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1265, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1265, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1265, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1266
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1267
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1265
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L871;
            }

            /* "CAComputeParse/CACompute.pyx":1269
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1269, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1269, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L871:;

            /* "CAComputeParse/CACompute.pyx":1264
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1270
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1270, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1272
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1272, __pyx_L874_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1272, __pyx_L874_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1272, __pyx_L874_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L874_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1272, __pyx_L874_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L881_try_end;
            __pyx_L874_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1273
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_2, &__pyx_t_6) < 0) __PYX_ERR(0, 1273, __pyx_L876_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1273, __pyx_L876_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1273, __pyx_L876_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L875_exception_handled;
            }
            goto __pyx_L876_except_error;
            __pyx_L876_except_error:;

            /* "CAComputeParse/CACompute.pyx":1272
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L875_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L881_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1233
 *         elif rule_space == b"Regenerating Generations":
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
          goto __pyx_L853;
        }

        /* "CAComputeParse/CACompute.pyx":1275
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1275, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1275, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1275, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1275, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1275, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1275, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1275, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1275, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1275, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1277
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1278
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1278, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1278, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1278, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1278, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1278, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1278, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1278, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1278, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1278, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1278, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1278, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1279
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1279, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1279, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1280
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1280, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1281
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1279
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L886;
            }

            /* "CAComputeParse/CACompute.pyx":1283
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1283, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1283, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L886:;

            /* "CAComputeParse/CACompute.pyx":1278
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1284
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1284, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1286
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1287
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1287, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1287, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1287, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1287, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1287, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1287, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1287, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1287, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1287, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1287, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1287, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1288
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1288, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1288, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1288, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1288, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1289
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1289, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1290
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1288
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L891;
            }

            /* "CAComputeParse/CACompute.pyx":1292
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1292, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1292, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L891:;

            /* "CAComputeParse/CACompute.pyx":1287
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1293
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1293, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1295
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1296
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1296, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1296, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1296, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1296, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1296, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1296, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1296, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1296, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1296, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1296, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1296, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1296, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1297
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1297, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1297, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1298
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1299
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1297
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L896;
            }

            /* "CAComputeParse/CACompute.pyx":1301
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1301, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1301, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L896:;

            /* "CAComputeParse/CACompute.pyx":1296
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1302
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1302, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1304
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1305
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1305, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1305, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1305, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1305, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1305, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1305, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1305, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1305, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1305, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1305, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1305, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1306
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1306, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1306, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1306, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1306, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1307
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1307, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1308
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1306
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L901;
            }

            /* "CAComputeParse/CACompute.pyx":1310
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1310, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1310, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L901:;

            /* "CAComputeParse/CACompute.pyx":1305
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1311
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1311, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1313
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1313, __pyx_L904_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1313, __pyx_L904_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1313, __pyx_L904_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1313, __pyx_L904_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              {
                __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1313, __pyx_L904_error)
                __Pyx_GOTREF(__pyx_t_5);
                if (__pyx_t_7) {
                  __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1313, __pyx_L904_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1313, __pyx_L904_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1313, __pyx_L904_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1313, __pyx_L904_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L911_try_end;
            __pyx_L904_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1314
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_6, &__pyx_t_5) < 0) __PYX_ERR(0, 1314, __pyx_L906_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L906_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1314, __pyx_L906_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L905_exception_handled;
            }
            goto __pyx_L906_except_error;
            __pyx_L906_except_error:;

            /* "CAComputeParse/CACompute.pyx":1313
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L905_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L911_try_end:;
          }
        }
        __pyx_L853:;

        /* "CAComputeParse/CACompute.pyx":1232
 *             file.close()
 *         elif rule_space == b"Regenerating Generations":
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1315
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1316
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1316, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1317
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1317, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1317, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1319
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1320
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1320, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1320, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1320, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1320, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1320, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1320, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1320, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1320, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_5);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1320, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1321
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1321, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1321, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1322
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1322, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1323
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1321
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L917;
            }

            /* "CAComputeParse/CACompute.pyx":1325
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1325, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1325, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L917:;

            /* "CAComputeParse/CACompute.pyx":1320
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CAComputeParse/CACompute.pyx":1326
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1326, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1328
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1329
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1329, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1329, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1329, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1329, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_6 = __pyx_t_5; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1329, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1329, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1329, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1329, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1329, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CAComputeParse/CACompute.pyx":1330
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1330, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1330, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1331
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1331, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1332
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1330
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L922;
            }

            /* "CAComputeParse/CACompute.pyx":1334
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1334, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1334, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L922:;

            /* "CAComputeParse/CACompute.pyx":1329
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1335
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1335, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1337
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1338
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1338, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1338, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1338, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1338, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1338, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_2 = __pyx_t_6; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1338, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1338, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1338, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1338, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1338, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1338, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1338, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1339
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1339, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1339, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1339, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1339, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1340
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1340, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1341
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1339
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L927;
            }

            /* "CAComputeParse/CACompute.pyx":1343
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1343, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1343, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L927:;

            /* "CAComputeParse/CACompute.pyx":1338
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1344
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1344, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1346
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1347
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1347, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1347, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1347, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1347, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1347, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1347, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1347, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1347, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1347, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1347, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1347, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1347, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1348
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1348, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1348, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1348, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1348, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1349
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1350
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1348
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L932;
            }

            /* "CAComputeParse/CACompute.pyx":1352
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1352, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1352, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L932:;

            /* "CAComputeParse/CACompute.pyx":1347
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1353
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1353, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1355
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1356
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1356, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1356, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1356, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1356, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1356, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_2 = __pyx_t_7; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1356, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1356, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1356, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1356, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1356, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1356, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1356, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1357
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1357, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1357, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1357, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1357, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1358
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1358, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1359
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1357
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L937;
            }

            /* "CAComputeParse/CACompute.pyx":1361
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1361, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1361, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L937:;

            /* "CAComputeParse/CACompute.pyx":1356
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1362
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1362, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1364
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1365
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1365, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1365, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1365, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1365, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1365, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_7 = __pyx_t_2; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1365, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1365, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1365, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1365, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1365, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1365, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1365, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1366
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1366, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1366, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1366, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1366, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1367
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1367, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1368
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1366
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L942;
            }

            /* "CAComputeParse/CACompute.pyx":1370
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1370, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1370, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L942:;

            /* "CAComputeParse/CACompute.pyx":1365
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1371
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1371, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1373
 *                     regen_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1374
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1374, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1374, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1374, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1374, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1374, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1374, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1374, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1374, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1374, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1374, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1374, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1374, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1375
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1375, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1375, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1375, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1375, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1376
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1376, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1377
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1375
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L947;
            }

            /* "CAComputeParse/CACompute.pyx":1379
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1379, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1379, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L947:;

            /* "CAComputeParse/CACompute.pyx":1374
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1380
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1380, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1382
 *                     other_regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1383
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1383, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1383, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1383, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_25, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1383, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1383, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_4 = __pyx_t_6; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1383, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1383, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1383, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1383, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1383, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1383, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_4);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1383, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1384
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1384, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1384, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1384, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1384, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1385
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1385, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1386
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1384
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L952;
            }

            /* "CAComputeParse/CACompute.pyx":1388
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1388, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1388, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L952:;

            /* "CAComputeParse/CACompute.pyx":1383
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1389
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1389, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1391
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1391, __pyx_L955_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1391, __pyx_L955_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1391, __pyx_L955_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L955_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1391, __pyx_L955_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L962_try_end;
            __pyx_L955_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1392
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(0, 1392, __pyx_L957_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1392, __pyx_L957_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1392, __pyx_L957_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L956_exception_handled;
            }
            goto __pyx_L957_except_error;
            __pyx_L957_except_error:;

            /* "CAComputeParse/CACompute.pyx":1391
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L956_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L962_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1316
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
          goto __pyx_L914;
        }

        /* "CAComputeParse/CACompute.pyx":1394
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1394, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1394, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1394, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1394, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1394, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1394, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1394, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1394, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1394, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1396
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1397
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_2};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1397, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1397, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1397, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1397, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1397, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1397, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1398
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1398, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1399
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1399, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1400
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1398
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L967;
            }

            /* "CAComputeParse/CACompute.pyx":1402
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1402, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L967:;

            /* "CAComputeParse/CACompute.pyx":1397
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1403
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1403, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1405
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1406
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_5};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__31, __pyx_t_5};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_3, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
            __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1406, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_7))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1406, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1406, __pyx_L1_error)
                #else
                __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_6);
                #endif
              }
            } else {
              __pyx_t_6 = __pyx_t_10(__pyx_t_7);
              if (unlikely(!__pyx_t_6)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1406, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_6);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1407
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_8, function);
              }
            }
            __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1407, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1408
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_6); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1408, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1409
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1407
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L972;
            }

            /* "CAComputeParse/CACompute.pyx":1411
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1411, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1411, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L972:;

            /* "CAComputeParse/CACompute.pyx":1406
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1412
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1412, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1414
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1415
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_8, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_25, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1415, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_3 = __pyx_t_7; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1415, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1415, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1415, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1415, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1415, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1415, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1415, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1416
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
              }
            }
            __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1416, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1417
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_6, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1418
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1416
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L977;
            }

            /* "CAComputeParse/CACompute.pyx":1420
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1420, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1420, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L977:;

            /* "CAComputeParse/CACompute.pyx":1415
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1421
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1421, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1423
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1424
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_8};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_8};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_8);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_25, __pyx_t_8);
            __pyx_t_8 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1424, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1424, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1424, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1424, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1424, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1424, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1424, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1424, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1425
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1425, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_7, function);
              }
            }
            __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1425, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1425, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1425, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1426
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1427
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1425
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L982;
            }

            /* "CAComputeParse/CACompute.pyx":1429
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1429, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1429, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L982:;

            /* "CAComputeParse/CACompute.pyx":1424
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1430
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1430, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1432
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1433
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_8) {
              __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8); __pyx_t_8 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_7, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b__31, __pyx_t_6};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1433, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1433, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1433, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1433, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1433, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1433, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_3);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1433, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1434
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1434, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1434, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1434, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1434, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1435
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1435, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1436
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1434
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L987;
            }

            /* "CAComputeParse/CACompute.pyx":1438
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1438, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1438, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L987:;

            /* "CAComputeParse/CACompute.pyx":1433
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CAComputeParse/CACompute.pyx":1439
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1439, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1441
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1442
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__31, __pyx_t_7};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_kp_b__31);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b__31);
            __Pyx_GIVEREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1442, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1442, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1442, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1442, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1442, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1442, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1442, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CAComputeParse/CACompute.pyx":1443
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1443, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_8 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1443, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1443, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1443, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1444
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1445
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1443
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L992;
            }

            /* "CAComputeParse/CACompute.pyx":1447
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1447, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1447, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L992:;

            /* "CAComputeParse/CACompute.pyx":1442
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1448
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1448, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1450
 *                     regen_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1451
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_25, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_8 = __pyx_t_2; __Pyx_INCREF(__pyx_t_8); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1451, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_10 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1451, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_8))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1451, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1451, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_8, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_8);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1451, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1452
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1452, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_6 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1452, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1452, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1452, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1453
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_6 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1453, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_23; __pyx_t_25 < __pyx_t_22; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1454
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1452
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L997;
            }

            /* "CAComputeParse/CACompute.pyx":1456
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1456, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L997:;

            /* "CAComputeParse/CACompute.pyx":1451
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1457
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1457, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1459
 *                     other_regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CAComputeParse/CACompute.pyx":1460
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__32, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 3+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(3+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__32);
            __Pyx_GIVEREF(__pyx_kp_b__32);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b__32);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_25, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1460, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_6 = __pyx_t_8; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1460, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1460, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1460, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1460, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1460, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1460, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1461
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1461, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1461, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_8, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1461, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1461, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1462
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__30) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__30);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_8); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1462, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_23 = __pyx_t_21;
              for (__pyx_t_25 = __pyx_t_22; __pyx_t_25 < __pyx_t_23; __pyx_t_25+=1) {
                __pyx_v_i = __pyx_t_25;

                /* "CAComputeParse/CACompute.pyx":1463
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CAComputeParse/CACompute.pyx":1461
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L1002;
            }

            /* "CAComputeParse/CACompute.pyx":1465
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1465, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1465, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_25));
            }
            __pyx_L1002:;

            /* "CAComputeParse/CACompute.pyx":1460
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1466
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_other_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1466, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1468
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1468, __pyx_L1005_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1005_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1468, __pyx_L1005_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1468, __pyx_L1005_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_6);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1468, __pyx_L1005_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1468, __pyx_L1005_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1005_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L1005_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1468, __pyx_L1005_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1012_try_end;
            __pyx_L1005_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1469
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(0, 1469, __pyx_L1007_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1469, __pyx_L1007_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1469, __pyx_L1007_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L1006_exception_handled;
            }
            goto __pyx_L1007_except_error;
            __pyx_L1007_except_error:;

            /* "CAComputeParse/CACompute.pyx":1468
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1006_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1012_try_end:;
          }
        }
        __pyx_L914:;

        /* "CAComputeParse/CACompute.pyx":1315
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1470
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1471
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1471, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
          }
        }
        __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1471, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1471, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1471, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1472
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1474
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:
 */
          __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1474, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
          __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1475
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1476
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1476, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1476, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1476, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1476, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1476, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1476, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1476, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1476, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1476, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1476, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1477
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1477, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1477, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1477, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1478
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1478, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1479
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1479, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1480
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1480, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
              __pyx_t_2 = 0;

              /* "CAComputeParse/CACompute.pyx":1478
 *                     for x in individual_rule_string.split(b"/")[2]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1476
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[2]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1481
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1481, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1483
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:
 */
          __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1483, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
          __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1484
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1485
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1485, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1485, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1485, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1485, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1485, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1486
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1486, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1486, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1486, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1487
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1487, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1488
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1488, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1488, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1489
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1489, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":1487
 *                     for x in individual_rule_string.split(b"/")[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1485
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1490
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1490, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1492
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:
 */
          __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1492, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
          __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1493
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1494
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1494, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1494, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1494, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
            __pyx_t_6 = __pyx_t_7; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1494, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1494, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1494, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1494, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1494, __pyx_L1_error)
                #else
                __pyx_t_7 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1494, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_7);
                #endif
              }
            } else {
              __pyx_t_7 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_7)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1494, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_7);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_7);
            __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1495
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1495, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1495, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1495, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1496
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1496, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1497
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1497, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1497, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1498
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1498, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
              __pyx_t_2 = 0;

              /* "CAComputeParse/CACompute.pyx":1496
 *                     for x in individual_rule_string.split(b"/")[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1494
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1499
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     regen_birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1499, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1501
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[5]:
 */
          __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1501, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
          __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1502
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[5]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1503
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1503, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1503, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1503, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1503, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1503, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_6))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1503, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1503, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1503, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1503, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_10(__pyx_t_6);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1503, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CAComputeParse/CACompute.pyx":1504
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[5]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1504, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1504, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1504, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1505
 *                     for x in individual_rule_string.split(b"/")[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1505, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1506
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1506, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1507
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1507, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":1505
 *                     for x in individual_rule_string.split(b"/")[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1503
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in individual_rule_string.split(b"/")[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1508
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     regen_survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1508, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1510
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1510, __pyx_L1028_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1510, __pyx_L1028_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1510, __pyx_L1028_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1510, __pyx_L1028_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1510, __pyx_L1028_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L1035_try_end;
            __pyx_L1028_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1511
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_6, &__pyx_t_2) < 0) __PYX_ERR(0, 1511, __pyx_L1030_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1511, __pyx_L1030_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1511, __pyx_L1030_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L1029_exception_handled;
            }
            goto __pyx_L1030_except_error;
            __pyx_L1030_except_error:;

            /* "CAComputeParse/CACompute.pyx":1510
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L1029_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L1035_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1471
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
          goto __pyx_L1015;
        }

        /* "CAComputeParse/CACompute.pyx":1513
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1513, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1513, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1513, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1513, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1515
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1515, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_XDECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1516
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1517
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1517, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1517, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1517, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1517, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1517, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1517, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1517, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1517, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1517, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1517, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1517, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1517, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1517, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1517, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1518
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1518, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1518, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1518, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1519
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1519, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1520
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_6, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1520, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1521
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1521, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
              __pyx_t_6 = 0;

              /* "CAComputeParse/CACompute.pyx":1519
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1517
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1522
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1522, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1524
 *                     birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1524, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1525
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1526
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1526, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1526, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1526, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1526, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1526, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1526, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1526, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1526, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1526, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1527
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1527, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1527, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1527, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1528
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1528, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1529
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1529, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1529, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1530
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1530, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":1528
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1526
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1531
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1531, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1533
 *                     survival_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1533, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1534
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1535
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1535, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1535, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1535, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1535, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1535, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1535, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1535, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1535, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1535, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1535, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1535, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1535, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1536
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1536, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1536, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1536, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

            /* "CAComputeParse/CACompute.pyx":1537
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1537, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1538
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_6, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1538, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_25, __pyx_t_15);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1538, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1539
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1539, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_6));
              __pyx_t_6 = 0;

              /* "CAComputeParse/CACompute.pyx":1537
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1535
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1540
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     regen_birth_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     current_trans = []
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1540, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1542
 *                     regen_birth_semi_1.push_back(temp_semi_1)
 * 
 *                     current_trans = []             # <<<<<<<<<<<<<<
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:
 */
          __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1542, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1543
 * 
 *                     current_trans = []
 *                     temp_semi_1.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:
 *                         current_trans.append(int(str(x)))
 */
          __pyx_v_temp_semi_1.clear();

          /* "CAComputeParse/CACompute.pyx":1544
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1544, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1544, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_15 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_15 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_15, 2+__pyx_t_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_15); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_15, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_15, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1544, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
            __pyx_t_2 = __pyx_t_8; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
            __pyx_t_10 = NULL;
          } else {
            __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1544, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          for (;;) {
            if (likely(!__pyx_t_10)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1544, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1544, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              } else {
                if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1544, __pyx_L1_error)
                #else
                __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1544, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_8);
                #endif
              }
            } else {
              __pyx_t_8 = __pyx_t_10(__pyx_t_2);
              if (unlikely(!__pyx_t_8)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 1544, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_8);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_8);
            __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1545
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:
 *                         current_trans.append(int(str(x)))             # <<<<<<<<<<<<<<
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 */
            __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_v_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1545, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1545, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_41 = __Pyx_PyList_Append(__pyx_v_current_trans, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1545, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "CAComputeParse/CACompute.pyx":1546
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            __pyx_t_13 = PyList_GET_SIZE(__pyx_v_current_trans); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1546, __pyx_L1_error)
            __pyx_t_11 = ((__pyx_t_13 == 2) != 0);
            if (__pyx_t_11) {

              /* "CAComputeParse/CACompute.pyx":1547
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))             # <<<<<<<<<<<<<<
 *                             current_trans = []
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 */
              __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_7, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_current_trans, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_48, 48, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1547, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_t_26 = std::pair<int,int> (__pyx_t_15, __pyx_t_25);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1547, __pyx_L1_error)
              }
              (void)(__pyx_v_temp_semi_1.insert(__pyx_t_26));

              /* "CAComputeParse/CACompute.pyx":1548
 *                         if len(current_trans) == 2:
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []             # <<<<<<<<<<<<<<
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 */
              __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1548, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF_SET(__pyx_v_current_trans, ((PyObject*)__pyx_t_7));
              __pyx_t_7 = 0;

              /* "CAComputeParse/CACompute.pyx":1546
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:             # <<<<<<<<<<<<<<
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 */
            }

            /* "CAComputeParse/CACompute.pyx":1544
 *                     current_trans = []
 *                     temp_semi_1.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]:             # <<<<<<<<<<<<<<
 *                         current_trans.append(int(str(x)))
 *                         if len(current_trans) == 2:
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1549
 *                             temp_semi_1.insert(pair[int, int] (current_trans[0] - 48, current_trans[1] - 48))
 *                             current_trans = []
 *                     regen_survival_semi_1.push_back(temp_semi_1)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          try {
            __pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1.push_back(__pyx_v_temp_semi_1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1549, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1551
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1551, __pyx_L1050_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1551, __pyx_L1050_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1551, __pyx_L1050_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1551, __pyx_L1050_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_2);
              } else
              #endif
              {
                __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1551, __pyx_L1050_error)
                __Pyx_GOTREF(__pyx_t_6);
                if (__pyx_t_7) {
                  __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1551, __pyx_L1050_error)
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1551, __pyx_L1050_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1551, __pyx_L1050_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1551, __pyx_L1050_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1057_try_end;
            __pyx_L1050_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1552
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_2, &__pyx_t_6) < 0) __PYX_ERR(0, 1552, __pyx_L1052_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1552, __pyx_L1052_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1552, __pyx_L1052_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              goto __pyx_L1051_exception_handled;
            }
            goto __pyx_L1052_except_error;
            __pyx_L1052_except_error:;

            /* "CAComputeParse/CACompute.pyx":1551
 *                     regen_survival_semi_1.push_back(temp_semi_1)
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1051_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1057_try_end:;
          }
        }
        __pyx_L1015:;

        /* "CAComputeParse/CACompute.pyx":1470
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1553
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1554
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1554, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_6 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1554, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1554, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1554, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1555
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1555, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1555, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1556
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1556, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1557
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1557, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1558
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1558, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1559
 *                     survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1559, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1561
 *                     regen_survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1561, __pyx_L1061_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_6, function);
                }
              }
              __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1561, __pyx_L1061_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1561, __pyx_L1061_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1561, __pyx_L1061_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1561, __pyx_L1061_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L1068_try_end;
            __pyx_L1061_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1562
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_2, &__pyx_t_8) < 0) __PYX_ERR(0, 1562, __pyx_L1063_except_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1562, __pyx_L1063_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1562, __pyx_L1063_except_error)
              }
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L1062_exception_handled;
            }
            goto __pyx_L1063_except_error;
            __pyx_L1063_except_error:;

            /* "CAComputeParse/CACompute.pyx":1561
 *                     regen_survival_trans.append(get_trans_moore(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L1062_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L1068_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1554
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_moore(individual_rule_string.split(b"/")[2]))
 */
          goto __pyx_L1060;
        }

        /* "CAComputeParse/CACompute.pyx":1564
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1564, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1564, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1564, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1564, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1564, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1564, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1564, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1564, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1564, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1565
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1565, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1566
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1565
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1565, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1567
 *                     birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1567, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":1568
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1568, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1568, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1568, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1568, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1568, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1568, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1568, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1568, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1568, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1567
 *                     birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1567, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1569
 *                     survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1569, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1570
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1570, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1570, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1570, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1570, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_6 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1569
 *                     survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_6); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1569, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "CAComputeParse/CACompute.pyx":1571
 *                     regen_birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1571, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);

          /* "CAComputeParse/CACompute.pyx":1572
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1572, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1572, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1572, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1572, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1572, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1572, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1572, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1572, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1572, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1571
 *                     regen_birth_trans.append(
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_6, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1571, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1574
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1574, __pyx_L1071_error)
              __Pyx_GOTREF(__pyx_t_6);
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1574, __pyx_L1071_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
              __pyx_t_6 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_6)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_6);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1574, __pyx_L1071_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
                PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1574, __pyx_L1071_error)
                __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              {
                __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1574, __pyx_L1071_error)
                __Pyx_GOTREF(__pyx_t_2);
                if (__pyx_t_6) {
                  __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1574, __pyx_L1071_error)
                __Pyx_GOTREF(__pyx_t_8);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1574, __pyx_L1071_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1574, __pyx_L1071_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1574, __pyx_L1071_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1078_try_end;
            __pyx_L1071_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1575
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_8, &__pyx_t_2) < 0) __PYX_ERR(0, 1575, __pyx_L1073_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1575, __pyx_L1073_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1575, __pyx_L1073_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L1072_exception_handled;
            }
            goto __pyx_L1073_except_error;
            __pyx_L1073_except_error:;

            /* "CAComputeParse/CACompute.pyx":1574
 *                         get_trans_moore(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1072_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1078_try_end:;
          }
        }
        __pyx_L1060:;

        /* "CAComputeParse/CACompute.pyx":1553
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1576
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1577
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 */
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1577, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1577, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1577, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1577, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1578
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1578, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1578, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1578, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1578, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1578, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1579
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1579, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1580
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_8 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1580, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1581
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_cross(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1581, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1583
 *                     regen_birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1583, __pyx_L1082_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_7 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                }
              }
              __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1583, __pyx_L1082_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1583, __pyx_L1082_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L1082_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1583, __pyx_L1082_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L1089_try_end;
            __pyx_L1082_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1584
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_2, &__pyx_t_7) < 0) __PYX_ERR(0, 1584, __pyx_L1084_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L1084_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1584, __pyx_L1084_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L1083_exception_handled;
            }
            goto __pyx_L1084_except_error;
            __pyx_L1084_except_error:;

            /* "CAComputeParse/CACompute.pyx":1583
 *                     regen_birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[4]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L1083_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L1089_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1577
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_cross(individual_rule_string.split(b"/")[2]))
 */
          goto __pyx_L1081;
        }

        /* "CAComputeParse/CACompute.pyx":1586
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1586, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1586, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_4, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1586, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_7, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1586, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1587
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1587, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "CAComputeParse/CACompute.pyx":1588
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1588, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1588, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1588, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1588, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1588, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1588, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1588, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1588, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1588, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1587
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1587, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1589
 *                     birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1589, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1590
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1590, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1590, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1590, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1590, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1590, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1590, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1590, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1590, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1590, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1589
 *                     birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1589, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1591
 *                     survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1591, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "CAComputeParse/CACompute.pyx":1592
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1592, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1592, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1592, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1592, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1592, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1591
 *                     survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1591, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1593
 *                     regen_birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1594
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1594, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1594, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1593
 *                     regen_birth_trans.append(
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1593, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1596
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1596, __pyx_L1092_error)
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1092_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1596, __pyx_L1092_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
                PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1596, __pyx_L1092_error)
                __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
                __Pyx_GOTREF(__pyx_t_7);
              } else
              #endif
              {
                __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1596, __pyx_L1092_error)
                __Pyx_GOTREF(__pyx_t_2);
                if (__pyx_t_8) {
                  __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1596, __pyx_L1092_error)
                __Pyx_GOTREF(__pyx_t_7);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1092_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L1092_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1596, __pyx_L1092_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1099_try_end;
            __pyx_L1092_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1597
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_7, &__pyx_t_2) < 0) __PYX_ERR(0, 1597, __pyx_L1094_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L1094_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1597, __pyx_L1094_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L1093_exception_handled;
            }
            goto __pyx_L1094_except_error;
            __pyx_L1094_except_error:;

            /* "CAComputeParse/CACompute.pyx":1596
 *                         get_trans_cross(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1093_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1099_try_end:;
          }
        }
        __pyx_L1081:;

        /* "CAComputeParse/CACompute.pyx":1576
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1598
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1599
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1599, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1599, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1599, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1599, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1600
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 */
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1600, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1600, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1600, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1600, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1600, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1601
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1601, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1602
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1602, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1603
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_8, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1603, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1604
 *                     survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1604, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1606
 *                     regen_survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1606, __pyx_L1103_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1606, __pyx_L1103_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1606, __pyx_L1103_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1606, __pyx_L1103_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1606, __pyx_L1103_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L1110_try_end;
            __pyx_L1103_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1607
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_7, &__pyx_t_4) < 0) __PYX_ERR(0, 1607, __pyx_L1105_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L1105_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1607, __pyx_L1105_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L1104_exception_handled;
            }
            goto __pyx_L1105_except_error;
            __pyx_L1105_except_error:;

            /* "CAComputeParse/CACompute.pyx":1606
 *                     regen_survival_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L1104_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L1110_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1599
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_von_neumann(individual_rule_string.split(b"/")[2]))
 */
          goto __pyx_L1102;
        }

        /* "CAComputeParse/CACompute.pyx":1609
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1609, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1609, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1609, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1609, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_8 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1609, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1609, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1610
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1610, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);

          /* "CAComputeParse/CACompute.pyx":1611
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1611, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1611, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1611, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1611, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1611, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1611, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1611, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1611, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1611, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1610
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1610, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1612
 *                     birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1612, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);

          /* "CAComputeParse/CACompute.pyx":1613
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1613, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1613, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1613, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_7) {
              __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1613, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1612
 *                     birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1612, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1614
 *                     survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1614, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);

          /* "CAComputeParse/CACompute.pyx":1615
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1615, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1615, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1615, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1615, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1614
 *                     survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_2); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1614, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1616
 *                     regen_birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1616, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);

          /* "CAComputeParse/CACompute.pyx":1617
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1617, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1617, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1617, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1617, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1616
 *                     regen_birth_trans.append(
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1616, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1619
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1619, __pyx_L1113_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1619, __pyx_L1113_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_8, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1619, __pyx_L1113_error)
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
                PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1619, __pyx_L1113_error)
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_GOTREF(__pyx_t_4);
              } else
              #endif
              {
                __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1619, __pyx_L1113_error)
                __Pyx_GOTREF(__pyx_t_7);
                if (__pyx_t_2) {
                  __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __pyx_t_2 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1619, __pyx_L1113_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              }
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_4, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1619, __pyx_L1113_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1619, __pyx_L1113_error)
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1619, __pyx_L1113_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1120_try_end;
            __pyx_L1113_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1620
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(0, 1620, __pyx_L1115_except_error)
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1620, __pyx_L1115_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1620, __pyx_L1115_except_error)
              }
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              goto __pyx_L1114_exception_handled;
            }
            goto __pyx_L1115_except_error;
            __pyx_L1115_except_error:;

            /* "CAComputeParse/CACompute.pyx":1619
 *                         get_trans_von_neumann(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1114_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1120_try_end:;
          }
        }
        __pyx_L1102:;

        /* "CAComputeParse/CACompute.pyx":1598
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L852;
      }

      /* "CAComputeParse/CACompute.pyx":1621
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1622
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1622, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_7 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1622, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1622, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1622, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_11) {

          /* "CAComputeParse/CACompute.pyx":1623
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 */
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_8 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_8)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_8);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1623, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1624
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1624, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1625
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1625, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1626
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[5]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_7 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1626, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1627
 *                     survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[3]))
 *                     regen_birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[4]))
 *                     regen_survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
            }
          }
          __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_2);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_4); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1627, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CAComputeParse/CACompute.pyx":1629
 *                     regen_survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_40);
            /*try:*/ {
              __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1629, __pyx_L1124_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_8 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
                __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
                if (likely(__pyx_t_8)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
                  __Pyx_INCREF(__pyx_t_8);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_7, function);
                }
              }
              __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1629, __pyx_L1124_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_4, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1629, __pyx_L1124_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1629, __pyx_L1124_error)
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1629, __pyx_L1124_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            goto __pyx_L1131_try_end;
            __pyx_L1124_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1630
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_4, &__pyx_t_8) < 0) __PYX_ERR(0, 1630, __pyx_L1126_except_error)
              __Pyx_GOTREF(__pyx_t_7);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_8);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1630, __pyx_L1126_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1630, __pyx_L1126_except_error)
              }
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              goto __pyx_L1125_exception_handled;
            }
            goto __pyx_L1126_except_error;
            __pyx_L1126_except_error:;

            /* "CAComputeParse/CACompute.pyx":1629
 *                     regen_survival_trans.append(get_trans_far(individual_rule_string.split(b"/")[5]))
 * 
 *                     try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            goto __pyx_L1_error;
            __pyx_L1125_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
            __pyx_L1131_try_end:;
          }

          /* "CAComputeParse/CACompute.pyx":1622
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 *                     birth_trans.append(get_trans_far(individual_rule_string.split(b"/")[2]))
 */
          goto __pyx_L1123;
        }

        /* "CAComputeParse/CACompute.pyx":1632
 *                     except IndexError: naive_lst.push_back(b"-1")
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 *                     birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1632, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1632, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1632, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1632, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_8);
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1632, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1632, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_8, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1632, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1632, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1632, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_v_14CAComputeParse_9CACompute_birth_state = __pyx_t_25;

          /* "CAComputeParse/CACompute.pyx":1633
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1634
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1634, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1634, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_4);
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_6) {
              __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1633
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 *                     birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1633, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1635
 *                     birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1635, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "CAComputeParse/CACompute.pyx":1636
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     regen_birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1636, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1636, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else
          #endif
          {
            __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1636, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1636, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1635
 *                     birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]))
 *                     survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1635, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1637
 *                     survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1637, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":1638
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 *                     regen_survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1638, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1638, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1637
 *                     survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]))
 *                     regen_birth_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1637, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "CAComputeParse/CACompute.pyx":1639
 *                     regen_birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1639, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);

          /* "CAComputeParse/CACompute.pyx":1640
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1640, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1640, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1640, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_25 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_25 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1640, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
            __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1640, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_6);
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1640, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_INCREF(__pyx_v_individual_rule_string);
            __Pyx_GIVEREF(__pyx_v_individual_rule_string);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1640, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1640, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_8 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1640, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CAComputeParse/CACompute.pyx":1639
 *                     regen_birth_trans.append(
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]))
 *                     regen_survival_trans.append(             # <<<<<<<<<<<<<<
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 */
          __pyx_t_41 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_41 == ((int)-1))) __PYX_ERR(0, 1639, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1642
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_40);
            __Pyx_XGOTREF(__pyx_t_39);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1642, __pyx_L1134_error)
              __Pyx_GOTREF(__pyx_t_7);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1642, __pyx_L1134_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              __pyx_t_7 = NULL;
              __pyx_t_25 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_25 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1642, __pyx_L1134_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_v_individual_rule_string};
                __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1642, __pyx_L1134_error)
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                __Pyx_GOTREF(__pyx_t_8);
              } else
              #endif
              {
                __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1642, __pyx_L1134_error)
                __Pyx_GOTREF(__pyx_t_4);
                if (__pyx_t_7) {
                  __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_INCREF(__pyx_v_individual_rule_string);
                __Pyx_GIVEREF(__pyx_v_individual_rule_string);
                PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
                __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1642, __pyx_L1134_error)
                __Pyx_GOTREF(__pyx_t_8);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_8, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1642, __pyx_L1134_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1642, __pyx_L1134_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1642, __pyx_L1134_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L1141_try_end;
            __pyx_L1134_error:;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "CAComputeParse/CACompute.pyx":1643
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *         elif rule_space == b"(B/M/S)*2":
 *             if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_25) {
              __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_8, &__pyx_t_4) < 0) __PYX_ERR(0, 1643, __pyx_L1136_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_8);
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1643, __pyx_L1136_except_error)
              try {
                __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 1643, __pyx_L1136_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L1135_exception_handled;
            }
            goto __pyx_L1136_except_error;
            __pyx_L1136_except_error:;

            /* "CAComputeParse/CACompute.pyx":1642
 *                         get_trans_far(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]))
 * 
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":
 */
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L1135_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_40);
            __Pyx_XGIVEREF(__pyx_t_39);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
            __pyx_L1141_try_end:;
          }
        }
        __pyx_L1123:;

        /* "CAComputeParse/CACompute.pyx":1621
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *             elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      }
      __pyx_L852:;

      /* "CAComputeParse/CACompute.pyx":1231
 *             file.write(str(activity_list) + " " + str(extended))
 *             file.close()
 *         elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
      goto __pyx_L55;
    }

    /* "CAComputeParse/CACompute.pyx":1644
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":             # <<<<<<<<<<<<<<
 *             if individual_rule_string.find(b"/") != -1:
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 */
    __pyx_t_11 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"(B/M/S)*2")) != 0);
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":1645
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":
 *             if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_find); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1645, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_b__29);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1645, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1645, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1645, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_11) {

        /* "CAComputeParse/CACompute.pyx":1646
 *         elif rule_space == b"(B/M/S)*2":
 *             if individual_rule_string.find(b"/") != -1:
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))             # <<<<<<<<<<<<<<
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))
 *                 survival_1.push_back(bms_parse(individual_rule_string.split(b"/")[2]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1646, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_birth_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1646, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1647
 *             if individual_rule_string.find(b"/") != -1:
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))             # <<<<<<<<<<<<<<
 *                 survival_1.push_back(bms_parse(individual_rule_string.split(b"/")[2]))
 *                 birth_2.push_back(bms_parse(individual_rule_string.split(b"/")[3]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_mutate_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1647, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1648
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))
 *                 survival_1.push_back(bms_parse(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                 birth_2.push_back(bms_parse(individual_rule_string.split(b"/")[3]))
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_survival_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1648, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1649
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))
 *                 survival_1.push_back(bms_parse(individual_rule_string.split(b"/")[2]))
 *                 birth_2.push_back(bms_parse(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1649, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_birth_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1649, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1650
 *                 survival_1.push_back(bms_parse(individual_rule_string.split(b"/")[2]))
 *                 birth_2.push_back(bms_parse(individual_rule_string.split(b"/")[3]))
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))             # <<<<<<<<<<<<<<
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))
 *                 try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1650, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_mutate_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1650, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1651
 *                 birth_2.push_back(bms_parse(individual_rule_string.split(b"/")[3]))
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 *                 try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                 except IndexError: naive_lst.push_back(b"-1")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_7 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__29);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_7, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_8); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1651, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_survival_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1651, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1652
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))
 *                 try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                 except IndexError: naive_lst.push_back(b"-1")
 *             else:
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_39, &__pyx_t_40);
          __Pyx_XGOTREF(__pyx_t_38);
          __Pyx_XGOTREF(__pyx_t_39);
          __Pyx_XGOTREF(__pyx_t_40);
          /*try:*/ {
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_individual_rule_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1652, __pyx_L1145_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_8 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__29) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__29);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1652, __pyx_L1145_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_8, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1652, __pyx_L1145_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1652, __pyx_L1145_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            try {
              __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1652, __pyx_L1145_error)
            }
          }
          __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          goto __pyx_L1152_try_end;
          __pyx_L1145_error:;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1653
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))
 *                 try: naive_lst.push_back(individual_rule_string.split(b"/")[6])
 *                 except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 *             else:
 *                 birth_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[1]))
 */
          __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
          if (__pyx_t_25) {
            __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_2) < 0) __PYX_ERR(0, 1653, __pyx_L1147_except_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1653, __pyx_L1147_except_error)
            try {
              __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1653, __pyx_L1147_except_error)
            }
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            goto __pyx_L1146_exception_handled;
          }
          goto __pyx_L1147_except_error;
          __pyx_L1147_except_error:;

          /* "CAComputeParse/CACompute.pyx":1652
 *                 mutate_2.push_back(bms_parse(individual_rule_string.split(b"/")[4]))
 *                 survival_2.push_back(bms_parse(individual_rule_string.split(b"/")[5]))
 *                 try: naive_lst.push_back(individual_rule_string.split(b"/")[6])             # <<<<<<<<<<<<<<
 *                 except IndexError: naive_lst.push_back(b"-1")
 *             else:
 */
          __Pyx_XGIVEREF(__pyx_t_38);
          __Pyx_XGIVEREF(__pyx_t_39);
          __Pyx_XGIVEREF(__pyx_t_40);
          __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
          goto __pyx_L1_error;
          __pyx_L1146_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_38);
          __Pyx_XGIVEREF(__pyx_t_39);
          __Pyx_XGIVEREF(__pyx_t_40);
          __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_39, __pyx_t_40);
          __pyx_L1152_try_end:;
        }

        /* "CAComputeParse/CACompute.pyx":1645
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":
 *             if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 *                 mutate_1.push_back(bms_parse(individual_rule_string.split(b"/")[1]))
 */
        goto __pyx_L1144;
      }

      /* "CAComputeParse/CACompute.pyx":1655
 *                 except IndexError: naive_lst.push_back(b"-1")
 *             else:
 *                 birth_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[1]))             # <<<<<<<<<<<<<<
 *                 mutate_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[2]))
 *                 survival_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[3]))
 */
      /*else*/ {
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1655, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1655, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        {
          __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (__pyx_t_7) {
            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1655, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1655, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_birth_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1655, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1656
 *             else:
 *                 birth_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[1]))
 *                 mutate_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[2]))             # <<<<<<<<<<<<<<
 *                 survival_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[3]))
 *                 birth_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[4]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1656, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_6);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1656, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_6);
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1656, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1656, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1656, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_mutate_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1656, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1657
 *                 birth_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[1]))
 *                 mutate_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[2]))
 *                 survival_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                 birth_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[4]))
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1657, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1657, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_3);
        } else
        #endif
        {
          __pyx_t_4 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1657, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1657, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1657, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_survival_1.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1657, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1658
 *                 mutate_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[2]))
 *                 survival_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[3]))
 *                 birth_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1658, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GOTREF(__pyx_t_7);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1658, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GOTREF(__pyx_t_7);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1658, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_3) {
            __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1658, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1658, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_birth_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1658, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1659
 *                 survival_1.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[3]))
 *                 birth_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[4]))
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))             # <<<<<<<<<<<<<<
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))
 *                 try: naive_lst.push_back(re.split(b"b|s|m|nn", individual_rule_string)[7])
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        {
          __pyx_t_3 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (__pyx_t_7) {
            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_mutate_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1659, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1660
 *                 birth_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[4]))
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 *                 try: naive_lst.push_back(re.split(b"b|s|m|nn", individual_rule_string)[7])
 *                 except IndexError: naive_lst.push_back(b"-1")
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_25 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_25 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_6 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1660, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_6);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
          __pyx_t_6 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1660, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_6);
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1660, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
          __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
          __Pyx_INCREF(__pyx_v_individual_rule_string);
          __Pyx_GIVEREF(__pyx_v_individual_rule_string);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_25, __pyx_v_individual_rule_string);
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1660, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_8, function);
          }
        }
        __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_42 = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        try {
          __pyx_v_14CAComputeParse_9CACompute_survival_2.push_back(__pyx_t_42);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1660, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1661
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))
 *                 try: naive_lst.push_back(re.split(b"b|s|m|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                 except IndexError: naive_lst.push_back(b"-1")
 * 
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_40, &__pyx_t_39, &__pyx_t_38);
          __Pyx_XGOTREF(__pyx_t_40);
          __Pyx_XGOTREF(__pyx_t_39);
          __Pyx_XGOTREF(__pyx_t_38);
          /*try:*/ {
            __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_re); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1661, __pyx_L1155_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1661, __pyx_L1155_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = NULL;
            __pyx_t_25 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_8)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_8);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
                __pyx_t_25 = 1;
              }
            }
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(__pyx_t_3)) {
              PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
              __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1661, __pyx_L1155_error)
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_GOTREF(__pyx_t_2);
            } else
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
              PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_kp_b_b_s_m_nn, __pyx_v_individual_rule_string};
              __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_25, 2+__pyx_t_25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1661, __pyx_L1155_error)
              __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
              __Pyx_GOTREF(__pyx_t_2);
            } else
            #endif
            {
              __pyx_t_6 = PyTuple_New(2+__pyx_t_25); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1661, __pyx_L1155_error)
              __Pyx_GOTREF(__pyx_t_6);
              if (__pyx_t_8) {
                __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
              }
              __Pyx_INCREF(__pyx_kp_b_b_s_m_nn);
              __Pyx_GIVEREF(__pyx_kp_b_b_s_m_nn);
              PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_25, __pyx_kp_b_b_s_m_nn);
              __Pyx_INCREF(__pyx_v_individual_rule_string);
              __Pyx_GIVEREF(__pyx_v_individual_rule_string);
              PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_25, __pyx_v_individual_rule_string);
              __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1661, __pyx_L1155_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1661, __pyx_L1155_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L1155_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            try {
              __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1661, __pyx_L1155_error)
            }
          }
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
          goto __pyx_L1162_try_end;
          __pyx_L1155_error:;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":1662
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))
 *                 try: naive_lst.push_back(re.split(b"b|s|m|nn", individual_rule_string)[7])
 *                 except IndexError: naive_lst.push_back(b"-1")             # <<<<<<<<<<<<<<
 * 
 *     for x in naive_lst:
 */
          __pyx_t_25 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
          if (__pyx_t_25) {
            __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_2, &__pyx_t_6) < 0) __PYX_ERR(0, 1662, __pyx_L1157_except_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_GOTREF(__pyx_t_6);
            __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L1157_except_error)
            try {
              __pyx_v_14CAComputeParse_9CACompute_naive_lst.push_back(__pyx_t_1);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1662, __pyx_L1157_except_error)
            }
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            goto __pyx_L1156_exception_handled;
          }
          goto __pyx_L1157_except_error;
          __pyx_L1157_except_error:;

          /* "CAComputeParse/CACompute.pyx":1661
 *                 mutate_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[5]))
 *                 survival_2.push_back(bms_parse(re.split(b"b|s|m|nn", individual_rule_string)[6]))
 *                 try: naive_lst.push_back(re.split(b"b|s|m|nn", individual_rule_string)[7])             # <<<<<<<<<<<<<<
 *                 except IndexError: naive_lst.push_back(b"-1")
 * 
 */
          __Pyx_XGIVEREF(__pyx_t_40);
          __Pyx_XGIVEREF(__pyx_t_39);
          __Pyx_XGIVEREF(__pyx_t_38);
          __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
          goto __pyx_L1_error;
          __pyx_L1156_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_40);
          __Pyx_XGIVEREF(__pyx_t_39);
          __Pyx_XGIVEREF(__pyx_t_38);
          __Pyx_ExceptionReset(__pyx_t_40, __pyx_t_39, __pyx_t_38);
          __pyx_L1162_try_end:;
        }
      }
      __pyx_L1144:;

      /* "CAComputeParse/CACompute.pyx":1644
 *                     try: naive_lst.push_back(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7])
 *                     except IndexError: naive_lst.push_back(b"-1")
 *         elif rule_space == b"(B/M/S)*2":             # <<<<<<<<<<<<<<
 *             if individual_rule_string.find(b"/") != -1:
 *                 birth_1.push_back(bms_parse(individual_rule_string.split(b"/")[0]))
 */
    }
    __pyx_L55:;

    /* "CAComputeParse/CACompute.pyx":254
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 *     for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *         individual_rule_string = individual_rule_string.lower()
 *         if rule_space == b"Single State":
 */
  }

  /* "CAComputeParse/CACompute.pyx":1664
 *                 except IndexError: naive_lst.push_back(b"-1")
 * 
 *     for x in naive_lst:             # <<<<<<<<<<<<<<
 *         if x != b"-1":
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 */
  __pyx_t_37 = __pyx_v_14CAComputeParse_9CACompute_naive_lst.begin();
  for (;;) {
    if (!(__pyx_t_37 != __pyx_v_14CAComputeParse_9CACompute_naive_lst.end())) break;
    __pyx_t_1 = *__pyx_t_37;
    ++__pyx_t_37;
    __pyx_t_6 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "CAComputeParse/CACompute.pyx":1665
 * 
 *     for x in naive_lst:
 *         if x != b"-1":             # <<<<<<<<<<<<<<
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))
 */
    __pyx_t_11 = (__Pyx_PyBytes_Equals(__pyx_v_x, __pyx_kp_b_1, Py_NE)); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 1665, __pyx_L1_error)
    if (__pyx_t_11) {

      /* "CAComputeParse/CACompute.pyx":1666
 *     for x in naive_lst:
 *         if x != b"-1":
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))             # <<<<<<<<<<<<<<
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))
 *             xy_lst.push_back(int(x.decode("utf-8")[-1]))
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_decode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_s_utf_8);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1666, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      try {
        __pyx_v_14CAComputeParse_9CACompute_corner_lst.push_back(__pyx_t_25);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1666, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1667
 *         if x != b"-1":
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))             # <<<<<<<<<<<<<<
 *             xy_lst.push_back(int(x.decode("utf-8")[-1]))
 *         else:
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_8, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_s_utf_8);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_t_2, 1, -1L, NULL, NULL, &__pyx_slice__35, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyString_Type)), __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_encode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_s_utf_8);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_6); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1667, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      try {
        __pyx_v_14CAComputeParse_9CACompute_direction_lst.push_back(__pyx_t_1);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1667, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1668
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))
 *             xy_lst.push_back(int(x.decode("utf-8")[-1]))             # <<<<<<<<<<<<<<
 *         else:
 *             corner_lst.push_back(-1)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_6 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_s_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_s_utf_8);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_25 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_25 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1668, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      try {
        __pyx_v_14CAComputeParse_9CACompute_xy_lst.push_back(__pyx_t_25);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1668, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1665
 * 
 *     for x in naive_lst:
 *         if x != b"-1":             # <<<<<<<<<<<<<<
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))
 */
      goto __pyx_L1167;
    }

    /* "CAComputeParse/CACompute.pyx":1670
 *             xy_lst.push_back(int(x.decode("utf-8")[-1]))
 *         else:
 *             corner_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *             direction_lst.push_back(b"")
 *             xy_lst.push_back(-1)
 */
    /*else*/ {
      try {
        __pyx_v_14CAComputeParse_9CACompute_corner_lst.push_back(-1);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1670, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1671
 *         else:
 *             corner_lst.push_back(-1)
 *             direction_lst.push_back(b"")             # <<<<<<<<<<<<<<
 *             xy_lst.push_back(-1)
 * 
 */
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1671, __pyx_L1_error)
      try {
        __pyx_v_14CAComputeParse_9CACompute_direction_lst.push_back(__pyx_t_1);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1671, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1672
 *             corner_lst.push_back(-1)
 *             direction_lst.push_back(b"")
 *             xy_lst.push_back(-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      try {
        __pyx_v_14CAComputeParse_9CACompute_xy_lst.push_back(-1);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1672, __pyx_L1_error)
      }
    }
    __pyx_L1167:;

    /* "CAComputeParse/CACompute.pyx":1664
 *                 except IndexError: naive_lst.push_back(b"-1")
 * 
 *     for x in naive_lst:             # <<<<<<<<<<<<<<
 *         if x != b"-1":
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 */
  }

  /* "CAComputeParse/CACompute.pyx":51
 *     pass
 * 
 * cpdef load(filename):             # <<<<<<<<<<<<<<
 *     global colour_palette, rule_name, rule_space, n_states, state_weights, neighbourhood, neighbourhood_weights,\
 *         alternating_period, birth, survival, forcing, killing, living, \
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_direction);
  __Pyx_XDECREF(__pyx_v_file);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_individual_rule_string);
  __Pyx_XDECREF(__pyx_v_current_trans);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load (wrapper)", 0);
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_load(__pyx_self, ((PyObject *)__pyx_v_filename));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_load(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("load", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_14CAComputeParse_9CACompute_load(__pyx_v_filename, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":1675
 * 
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):             # <<<<<<<<<<<<<<
 *     return neighbourhood[generations % alternating_period]
 * 
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations); /*proto*/
static std::vector<std::pair<int,int> >  __pyx_f_14CAComputeParse_9CACompute_get_neighbourhood(int __pyx_v_generations, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<std::pair<int,int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_neighbourhood", 0);

  /* "CAComputeParse/CACompute.pyx":1676
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):
 *     return neighbourhood[generations % alternating_period]             # <<<<<<<<<<<<<<
 * 
 * cpdef int get_n_states():
 */
  if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 1676, __pyx_L1_error)
  }
  __pyx_r = (__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
  goto __pyx_L0;

  /* "CAComputeParse/CACompute.pyx":1675
 * 
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):             # <<<<<<<<<<<<<<
 *     return neighbourhood[generations % alternating_period]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("CAComputeParse.CACompute.get_neighbourhood", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations) {
  int __pyx_v_generations;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_neighbourhood (wrapper)", 0);
  assert(__pyx_arg_generations); {
    __pyx_v_generations = __Pyx_PyInt_As_int(__pyx_arg_generations); if (unlikely((__pyx_v_generations == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1675, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("CAComputeParse.CACompute.get_neighbourhood", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_2get_neighbourhood(__pyx_self, ((int)__pyx_v_generations));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_2get_neighbourhood(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_generations) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_neighbourhood", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_f_14CAComputeParse_9CACompute_get_neighbourhood(__pyx_v_generations, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.get_neighbourhood", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":1678
 *     return neighbourhood[generations % alternating_period]
 * 
 * cpdef int get_n_states():             # <<<<<<<<<<<<<<
 *     return n_states
 * 
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_14CAComputeParse_9CACompute_get_n_states(CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_n_states", 0);

  /* "CAComputeParse/CACompute.pyx":1679
 * 
 * cpdef int get_n_states():
 *     return n_states             # <<<<<<<<<<<<<<
 * 
 * cpdef vector[vector[int]] get_colour_palette():
 */
  __pyx_r = __pyx_v_14CAComputeParse_9CACompute_n_states;
  goto __pyx_L0;

  /* "CAComputeParse/CACompute.pyx":1678
 *     return neighbourhood[generations % alternating_period]
 * 
 * cpdef int get_n_states():             # <<<<<<<<<<<<<<
 *     return n_states
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_n_states (wrapper)", 0);
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_4get_n_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_4get_n_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_n_states", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_14CAComputeParse_9CACompute_get_n_states(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1678, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.get_n_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":1681
 *     return n_states
 * 
 * cpdef vector[vector[int]] get_colour_palette():             # <<<<<<<<<<<<<<
 *     return colour_palette
 * 
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static std::vector<std::vector<int> >  __pyx_f_14CAComputeParse_9CACompute_get_colour_palette(CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<std::vector<int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_colour_palette", 0);

  /* "CAComputeParse/CACompute.pyx":1682
 * 
 * cpdef vector[vector[int]] get_colour_palette():
 *     return colour_palette             # <<<<<<<<<<<<<<
 * 
 * cpdef string get_rule_name():
 */
  __pyx_r = __pyx_v_14CAComputeParse_9CACompute_colour_palette;
  goto __pyx_L0;

  /* "CAComputeParse/CACompute.pyx":1681
 *     return n_states
 * 
 * cpdef vector[vector[int]] get_colour_palette():             # <<<<<<<<<<<<<<
 *     return colour_palette
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_colour_palette (wrapper)", 0);
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_6get_colour_palette(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_6get_colour_palette(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_colour_palette", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(__pyx_f_14CAComputeParse_9CACompute_get_colour_palette(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.get_colour_palette", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":1684
 *     return colour_palette
 * 
 * cpdef string get_rule_name():             # <<<<<<<<<<<<<<
 *     return rule_name
 * 
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static std::string __pyx_f_14CAComputeParse_9CACompute_get_rule_name(CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rule_name", 0);

  /* "CAComputeParse/CACompute.pyx":1685
 * 
 * cpdef string get_rule_name():
 *     return rule_name             # <<<<<<<<<<<<<<
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):
 */
  __pyx_r = __pyx_v_14CAComputeParse_9CACompute_rule_name;
  goto __pyx_L0;

  /* "CAComputeParse/CACompute.pyx":1684
 *     return colour_palette
 * 
 * cpdef string get_rule_name():             # <<<<<<<<<<<<<<
 *     return rule_name
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rule_name (wrapper)", 0);
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_8get_rule_name(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_8get_rule_name(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_rule_name", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_f_14CAComputeParse_9CACompute_get_rule_name(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.get_rule_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":1687
 *     return rule_name
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):             # <<<<<<<<<<<<<<
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0, \
 */

static int __pyx_f_14CAComputeParse_9CACompute_transition_func(std::vector<int>  __pyx_v_neighbours, int __pyx_v_generations) {
  int __pyx_v_n_living;
  int __pyx_v_n_destructive;
  int __pyx_v_n;
  int __pyx_v_n_birth;
  int __pyx_v_n_survival;
  int __pyx_v_idx;
  int __pyx_v_n_regen_birth;
  int __pyx_v_n_regen_survival;
  int __pyx_v_n_forcing;
  int __pyx_v_n_killing;
  int __pyx_v_n1;
  int __pyx_v_n2;
  int __pyx_v_n_edge;
  int __pyx_v_n_corner;
  int __pyx_v_n_edge_destructive;
  int __pyx_v_n_corner_destructive;
  std::pair<int,int>  __pyx_v_neighbour;
  std::pair<int,int>  __pyx_v_neighbour2;
  std::pair<int,int>  __pyx_v_alive_semi_1;
  std::pair<int,int>  __pyx_v_destructive_semi_1;
  std::vector<int> ::size_type __pyx_v_i;
  PyObject *__pyx_v_new_neighbours_living = NULL;
  PyObject *__pyx_v_new_neighbours_destructive = NULL;
  PyObject *__pyx_v_new_neighbours = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  std::vector<int> ::size_type __pyx_t_2;
  std::vector<int> ::size_type __pyx_t_3;
  std::vector<int> ::size_type __pyx_t_4;
  int __pyx_t_5;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_6;
  std::vector<std::pair<int,int> >  *__pyx_t_7;
  std::pair<int,int>  __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_11;
  std::vector<std::pair<int,int> >  *__pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  long __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  __Pyx_RefNannySetupContext("transition_func", 0);

  /* "CAComputeParse/CACompute.pyx":1688
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \             # <<<<<<<<<<<<<<
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0, \
 *         n_edge = 0, n_corner = 0, n_edge_destructive = 0, n_corner_destructive = 0
 */
  __pyx_v_n_living = 0;
  __pyx_v_n_destructive = 0;
  __pyx_v_n = 0;
  __pyx_v_n_birth = 0;
  __pyx_v_n_survival = 0;
  __pyx_v_n_regen_birth = 0;
  __pyx_v_n_regen_survival = 0;
  __pyx_v_n_forcing = 0;
  __pyx_v_n_killing = 0;
  __pyx_v_n1 = 0;
  __pyx_v_n2 = 0;
  __pyx_v_n_edge = 0;
  __pyx_v_n_corner = 0;
  __pyx_v_n_edge_destructive = 0;
  __pyx_v_n_corner_destructive = 0;

  /* "CAComputeParse/CACompute.pyx":1693
 *     cdef pair[int, int] neighbour, neighbour2, alive_semi_1, destructive_semi_1
 * 
 *     if rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
  if (__pyx_t_1) {

    /* "CAComputeParse/CACompute.pyx":1694
 * 
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CAComputeParse/CACompute.pyx":1695
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1696
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1697
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 *                 elif neighbours[i] == 2:
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1697, __pyx_L1_error)
          }
          __pyx_v_n_living = (__pyx_v_n_living + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]));

          /* "CAComputeParse/CACompute.pyx":1696
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 */
          goto __pyx_L7;
        }

        /* "CAComputeParse/CACompute.pyx":1698
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1699
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1699, __pyx_L1_error)
          }
          __pyx_v_n_destructive = (__pyx_v_n_destructive + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]));

          /* "CAComputeParse/CACompute.pyx":1698
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
        }
        __pyx_L7:;
      }

      /* "CAComputeParse/CACompute.pyx":1701
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1702
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1702, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1703
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1703, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1702
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_destructive) != (__pyx_v_14CAComputeParse_9CACompute_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1704
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif survival[generations % alternating_period].find(n_living) != \
 *                         survival[generations % alternating_period].end():
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1702
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1705
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1705, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1706
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1706, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1705
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1707
 *                 elif survival[generations % alternating_period].find(n_living) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1705
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1708
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1701
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1709
 *                     return 1
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1710
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1710, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1711
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1711, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1710
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_14CAComputeParse_9CACompute_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1712
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1710
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1713
 *                         living[generations % alternating_period].end():
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1709
 *                     return 1
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1715
 *                 return 2
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
      /*else*/ {

        /* "CAComputeParse/CACompute.pyx":1716
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1715, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1715
 *                 return 2
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1716, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1716
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_destructive) != (__pyx_v_14CAComputeParse_9CACompute_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L12_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1717
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1717, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1718
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1718, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1717
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L12_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1715
 *                 return 2
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1719
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1715
 *                 return 2
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
        }

        /* "CAComputeParse/CACompute.pyx":1720
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1694
 * 
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 */
    }

    /* "CAComputeParse/CACompute.pyx":1721
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CAComputeParse/CACompute.pyx":1722
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             n_living = 0
 */
      __pyx_v_n_birth = 0;

      /* "CAComputeParse/CACompute.pyx":1723
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             n_living = 0
 *             n_forcing = 0
 */
      __pyx_v_n_survival = 0;

      /* "CAComputeParse/CACompute.pyx":1724
 *             n_birth = 0
 *             n_survival = 0
 *             n_living = 0             # <<<<<<<<<<<<<<
 *             n_forcing = 0
 *             n_killing = 0
 */
      __pyx_v_n_living = 0;

      /* "CAComputeParse/CACompute.pyx":1725
 *             n_survival = 0
 *             n_living = 0
 *             n_forcing = 0             # <<<<<<<<<<<<<<
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_forcing = 0;

      /* "CAComputeParse/CACompute.pyx":1726
 *             n_living = 0
 *             n_forcing = 0
 *             n_killing = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0
 */
      __pyx_v_n_killing = 0;

      /* "CAComputeParse/CACompute.pyx":1727
 *             n_forcing = 0
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n1, n2 = 0, 0
 *                 idx = 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1727, __pyx_L1_error)
      }
      __pyx_t_7 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CAComputeParse/CACompute.pyx":1728
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_v_n1 = __pyx_t_9;
        __pyx_v_n2 = __pyx_t_10;

        /* "CAComputeParse/CACompute.pyx":1729
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 */
        __pyx_v_idx = 0;

        /* "CAComputeParse/CACompute.pyx":1730
 *                 n1, n2 = 0, 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1730, __pyx_L1_error)
        }
        __pyx_t_12 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CAComputeParse/CACompute.pyx":1731
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1731, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1732
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:             # <<<<<<<<<<<<<<
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1732, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1731
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 */
          __pyx_t_1 = (((__pyx_v_neighbours[((__pyx_v_14CAComputeParse_9CACompute_index_map[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_t_8])]) == 1) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1733
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 1733, __pyx_L1_error)
            }
            __pyx_v_n1 = (__pyx_v_n1 + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_idx]));

            /* "CAComputeParse/CACompute.pyx":1731
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 */
          }

          /* "CAComputeParse/CACompute.pyx":1734
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1734, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1735
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:             # <<<<<<<<<<<<<<
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 *                     idx += 1
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1735, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1734
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 */
          __pyx_t_1 = (((__pyx_v_neighbours[((__pyx_v_14CAComputeParse_9CACompute_index_map[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_t_8])]) == 2) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1736
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 1736, __pyx_L1_error)
            }
            __pyx_v_n2 = (__pyx_v_n2 + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_idx]));

            /* "CAComputeParse/CACompute.pyx":1734
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 */
          }

          /* "CAComputeParse/CACompute.pyx":1737
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CAComputeParse/CACompute.pyx":1730
 *                 n1, n2 = 0, 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 */
        }

        /* "CAComputeParse/CACompute.pyx":1739
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1739, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1740
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \
 *                         other_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1740, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1739
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1741
 *                 if other_birth[generations % alternating_period].find(n1) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n1) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CAComputeParse/CACompute.pyx":1739
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1742
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1742, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1743
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \
 *                         other_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1743, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1742
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1744
 *                 if other_survival[generations % alternating_period].find(n1) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 *                 if other_living[generations % alternating_period].find(n1) != \
 *                         other_living[generations % alternating_period].end():
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CAComputeParse/CACompute.pyx":1742
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1745
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1745, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1746
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \
 *                         other_living[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1746, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1745
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_other_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_14CAComputeParse_9CACompute_other_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1747
 *                 if other_living[generations % alternating_period].find(n1) != \
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1             # <<<<<<<<<<<<<<
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 *                         other_forcing[generations % alternating_period].end():
 */
          __pyx_v_n_living = (__pyx_v_n_living + 1);

          /* "CAComputeParse/CACompute.pyx":1745
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1748
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1748, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1749
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 *                         other_forcing[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1749, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1748
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_other_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n2) != (__pyx_v_14CAComputeParse_9CACompute_other_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1750
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1             # <<<<<<<<<<<<<<
 *                 if other_killing[generations % alternating_period].find(n2) != \
 *                         other_killing[generations % alternating_period].end():
 */
          __pyx_v_n_forcing = (__pyx_v_n_forcing + 1);

          /* "CAComputeParse/CACompute.pyx":1748
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1751
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1751, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1752
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \
 *                         other_killing[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_killing += 1
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1752, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1751
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_other_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n2) != (__pyx_v_14CAComputeParse_9CACompute_other_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1753
 *                 if other_killing[generations % alternating_period].find(n2) != \
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_v_n_killing = (__pyx_v_n_killing + 1);

          /* "CAComputeParse/CACompute.pyx":1751
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1727
 *             n_forcing = 0
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n1, n2 = 0, 0
 *                 idx = 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":1755
 *                     n_killing += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1756
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1756, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1757
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1757, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1756
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_killing) != (__pyx_v_14CAComputeParse_9CACompute_killing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1758
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1756
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1759
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1759, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1760
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1760, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1759
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1761
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1759
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1762
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1755
 *                     n_killing += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1764
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1765
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1765, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1766
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1766, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1765
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_14CAComputeParse_9CACompute_living[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1767
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1765
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1768
 *                         living[generations % alternating_period].end():
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1764
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1771
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
      /*else*/ {

        /* "CAComputeParse/CACompute.pyx":1772
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1771, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1771
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1772, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1772
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_forcing) != (__pyx_v_14CAComputeParse_9CACompute_forcing[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L29_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1773
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1773, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1774
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1774, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1773
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L29_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1771
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1775
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1771
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
        }

        /* "CAComputeParse/CACompute.pyx":1776
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1721
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    }

    /* "CAComputeParse/CACompute.pyx":1777
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CAComputeParse/CACompute.pyx":1778
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1779
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1779, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, -1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1779, __pyx_L1_error)
        }
        __pyx_t_5 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L34_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1780
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1780, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, 1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1780, __pyx_L1_error)
        }
        __pyx_t_5 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L34_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1781
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     if neighbours[i] == 1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1781, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1781, __pyx_L1_error)
        }
        __pyx_t_5 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L34_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1782
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):             # <<<<<<<<<<<<<<
 *                     if neighbours[i] == 1:
 *                         n_edge += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1782, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (-1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1782, __pyx_L1_error)
        }
        __pyx_t_5 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L34_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1779
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1783
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                         n_edge += 1
 *                     elif neighbours[i] == 2:
 */
          __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1784
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     if neighbours[i] == 1:
 *                         n_edge += 1             # <<<<<<<<<<<<<<
 *                     elif neighbours[i] == 2:
 *                         n_edge_destructive += 1
 */
            __pyx_v_n_edge = (__pyx_v_n_edge + 1);

            /* "CAComputeParse/CACompute.pyx":1783
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                         n_edge += 1
 *                     elif neighbours[i] == 2:
 */
            goto __pyx_L38;
          }

          /* "CAComputeParse/CACompute.pyx":1785
 *                     if neighbours[i] == 1:
 *                         n_edge += 1
 *                     elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                         n_edge_destructive += 1
 *                 else:
 */
          __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1786
 *                         n_edge += 1
 *                     elif neighbours[i] == 2:
 *                         n_edge_destructive += 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     if neighbours[i] == 1:
 */
            __pyx_v_n_edge_destructive = (__pyx_v_n_edge_destructive + 1);

            /* "CAComputeParse/CACompute.pyx":1785
 *                     if neighbours[i] == 1:
 *                         n_edge += 1
 *                     elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                         n_edge_destructive += 1
 *                 else:
 */
          }
          __pyx_L38:;

          /* "CAComputeParse/CACompute.pyx":1779
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
          goto __pyx_L33;
        }

        /* "CAComputeParse/CACompute.pyx":1788
 *                         n_edge_destructive += 1
 *                 else:
 *                     if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                         n_corner += 1
 *                     elif neighbours[i] == 2:
 */
        /*else*/ {
          __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1789
 *                 else:
 *                     if neighbours[i] == 1:
 *                         n_corner += 1             # <<<<<<<<<<<<<<
 *                     elif neighbours[i] == 2:
 *                         n_corner_destructive += 1
 */
            __pyx_v_n_corner = (__pyx_v_n_corner + 1);

            /* "CAComputeParse/CACompute.pyx":1788
 *                         n_edge_destructive += 1
 *                 else:
 *                     if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                         n_corner += 1
 *                     elif neighbours[i] == 2:
 */
            goto __pyx_L39;
          }

          /* "CAComputeParse/CACompute.pyx":1790
 *                     if neighbours[i] == 1:
 *                         n_corner += 1
 *                     elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                         n_corner_destructive += 1
 * 
 */
          __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
          if (__pyx_t_1) {

            /* "CAComputeParse/CACompute.pyx":1791
 *                         n_corner += 1
 *                     elif neighbours[i] == 2:
 *                         n_corner_destructive += 1             # <<<<<<<<<<<<<<
 * 
 *             alive_semi_1 = pair[int, int] (n_corner, n_edge)
 */
            __pyx_v_n_corner_destructive = (__pyx_v_n_corner_destructive + 1);

            /* "CAComputeParse/CACompute.pyx":1790
 *                     if neighbours[i] == 1:
 *                         n_corner += 1
 *                     elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                         n_corner_destructive += 1
 * 
 */
          }
          __pyx_L39:;
        }
        __pyx_L33:;
      }

      /* "CAComputeParse/CACompute.pyx":1793
 *                         n_corner_destructive += 1
 * 
 *             alive_semi_1 = pair[int, int] (n_corner, n_edge)             # <<<<<<<<<<<<<<
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:
 */
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner, __pyx_v_n_edge);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1793, __pyx_L1_error)
      }
      __pyx_v_alive_semi_1 = __pyx_t_8;

      /* "CAComputeParse/CACompute.pyx":1794
 * 
 *             alive_semi_1 = pair[int, int] (n_corner, n_edge)
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)             # <<<<<<<<<<<<<<
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 */
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner_destructive, __pyx_v_n_edge_destructive);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1794, __pyx_L1_error)
      }
      __pyx_v_destructive_semi_1 = __pyx_t_8;

      /* "CAComputeParse/CACompute.pyx":1795
 *             alive_semi_1 = pair[int, int] (n_corner, n_edge)
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         killing_semi_1[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1796
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1796, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1797
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         killing_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1797, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1796
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_killing_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_destructive_semi_1) != (__pyx_v_14CAComputeParse_9CACompute_killing_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1798
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         survival_semi_1[generations % alternating_period].end():
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1796
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1799
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1799, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1800
 *                     return 0
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         survival_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1800, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1799
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_alive_semi_1) != (__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1801
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1799
 *                         killing_semi_1[generations % alternating_period].end():
 *                     return 0
 *                 elif survival_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1802
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1795
 *             alive_semi_1 = pair[int, int] (n_corner, n_edge)
 *             destructive_semi_1 = pair[int, int] (n_corner_destructive, n_edge_destructive)
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         killing_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1804
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         living_semi_1[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1805
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         living_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1805, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1806
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         living_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 0
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1806, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1805
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         living_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_14CAComputeParse_9CACompute_living_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_alive_semi_1) != (__pyx_v_14CAComputeParse_9CACompute_living_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1807
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         living_semi_1[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1805
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         living_semi_1[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1808
 *                         living_semi_1[generations % alternating_period].end():
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1804
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         living_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1811
 * 
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 */
      /*else*/ {

        /* "CAComputeParse/CACompute.pyx":1812
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         forcing_semi_1[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         birth_semi_1[generations % alternating_period].end():
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1811, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1811
 * 
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1812, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1812
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         forcing_semi_1[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         birth_semi_1[generations % alternating_period].end():
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_forcing_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_destructive_semi_1) != (__pyx_v_14CAComputeParse_9CACompute_forcing_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L44_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1813
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1813, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1814
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         birth_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1814, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1813
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_alive_semi_1) != (__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L44_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1811
 * 
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 */
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1815
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1811
 * 
 *             else:
 *                 if forcing_semi_1[generations % alternating_period].find(destructive_semi_1) != \             # <<<<<<<<<<<<<<
 *                         forcing_semi_1[generations % alternating_period].end() and \
 *                         birth_semi_1[generations % alternating_period].find(alive_semi_1) != \
 */
        }

        /* "CAComputeParse/CACompute.pyx":1816
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1777
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 */
    }

    /* "CAComputeParse/CACompute.pyx":1817
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_1 = __pyx_t_5;
      goto __pyx_L46_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1818
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_1 = __pyx_t_5;
      goto __pyx_L46_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1819
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours_living = []
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_1 = __pyx_t_5;
      goto __pyx_L46_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1820
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *             new_neighbours_living = []
 *             new_neighbours_destructive = []
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
    __pyx_t_1 = __pyx_t_5;
    __pyx_L46_bool_binop_done:;

    /* "CAComputeParse/CACompute.pyx":1817
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    if (__pyx_t_1) {

      /* "CAComputeParse/CACompute.pyx":1821
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours_living = []             # <<<<<<<<<<<<<<
 *             new_neighbours_destructive = []
 *             for i in range(neighbours.size() - 1):
 */
      __pyx_t_13 = PyList_New(0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1821, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_v_new_neighbours_living = ((PyObject*)__pyx_t_13);
      __pyx_t_13 = 0;

      /* "CAComputeParse/CACompute.pyx":1822
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours_living = []
 *             new_neighbours_destructive = []             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 */
      __pyx_t_13 = PyList_New(0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_v_new_neighbours_destructive = ((PyObject*)__pyx_t_13);
      __pyx_t_13 = 0;

      /* "CAComputeParse/CACompute.pyx":1823
 *             new_neighbours_living = []
 *             new_neighbours_destructive = []
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbours[i] == 1:
 *                     new_neighbours_living.append(1)
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1824
 *             new_neighbours_destructive = []
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     new_neighbours_living.append(1)
 *                     new_neighbours_destructive.append(0)
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1825
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 *                     new_neighbours_living.append(1)             # <<<<<<<<<<<<<<
 *                     new_neighbours_destructive.append(0)
 *                 elif neighbours[i] == 2:
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_living, __pyx_int_1); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1825, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1826
 *                 if neighbours[i] == 1:
 *                     new_neighbours_living.append(1)
 *                     new_neighbours_destructive.append(0)             # <<<<<<<<<<<<<<
 *                 elif neighbours[i] == 2:
 *                     new_neighbours_living.append(0)
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_destructive, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1826, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1824
 *             new_neighbours_destructive = []
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     new_neighbours_living.append(1)
 *                     new_neighbours_destructive.append(0)
 */
          goto __pyx_L52;
        }

        /* "CAComputeParse/CACompute.pyx":1827
 *                     new_neighbours_living.append(1)
 *                     new_neighbours_destructive.append(0)
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     new_neighbours_living.append(0)
 *                     new_neighbours_destructive.append(1)
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1828
 *                     new_neighbours_destructive.append(0)
 *                 elif neighbours[i] == 2:
 *                     new_neighbours_living.append(0)             # <<<<<<<<<<<<<<
 *                     new_neighbours_destructive.append(1)
 *                 else:
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_living, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1828, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1829
 *                 elif neighbours[i] == 2:
 *                     new_neighbours_living.append(0)
 *                     new_neighbours_destructive.append(1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     new_neighbours_living.append(0)
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_destructive, __pyx_int_1); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1829, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1827
 *                     new_neighbours_living.append(1)
 *                     new_neighbours_destructive.append(0)
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     new_neighbours_living.append(0)
 *                     new_neighbours_destructive.append(1)
 */
          goto __pyx_L52;
        }

        /* "CAComputeParse/CACompute.pyx":1831
 *                     new_neighbours_destructive.append(1)
 *                 else:
 *                     new_neighbours_living.append(0)             # <<<<<<<<<<<<<<
 *                     new_neighbours_destructive.append(0)
 * 
 */
        /*else*/ {
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_living, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1831, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1832
 *                 else:
 *                     new_neighbours_living.append(0)
 *                     new_neighbours_destructive.append(0)             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours_destructive, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1832, __pyx_L1_error)
        }
        __pyx_L52:;
      }

      /* "CAComputeParse/CACompute.pyx":1834
 *                     new_neighbours_destructive.append(0)
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:
 *                     return 0
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1835
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 0
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:
 */
        __pyx_t_13 = PyList_AsTuple(__pyx_v_new_neighbours_destructive); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1835, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_killing_trans); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1835, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1835, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_16 = __Pyx_GetItemInt(__pyx_t_15, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1835, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_13, __pyx_t_16, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1835, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1836
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:
 *                     return 1
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1835
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 0
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:
 */
        }

        /* "CAComputeParse/CACompute.pyx":1837
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:
 *                     return 0
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        __pyx_t_16 = PyList_AsTuple(__pyx_v_new_neighbours_living); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1837, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1837, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1837, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_15 = __Pyx_GetItemInt(__pyx_t_13, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1837, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_16, __pyx_t_15, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1837, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__pyx_t_5 != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1838
 *                     return 0
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1837
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:
 *                     return 0
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        }

        /* "CAComputeParse/CACompute.pyx":1839
 *                 elif tuple(new_neighbours_living) in survival_trans[generations % alternating_period]:
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1834
 *                     new_neighbours_destructive.append(0)
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours_destructive) in killing_trans[generations % alternating_period]:
 *                     return 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":1840
 *                     return 1
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:
 *                     return 0
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":1841
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 0
 *                 return 2
 */
        __pyx_t_15 = PyList_AsTuple(__pyx_v_new_neighbours_living); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1841, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_living_trans); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1841, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1841, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_16, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1841, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_15, __pyx_t_13, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1841, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1842
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1841
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 0
 *                 return 2
 */
        }

        /* "CAComputeParse/CACompute.pyx":1843
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1840
 *                     return 1
 *                 return 2
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours_living) in living_trans[generations % alternating_period]:
 *                     return 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":1845
 *                 return 2
 *             else:
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \             # <<<<<<<<<<<<<<
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:
 *                     return 1
 */
      /*else*/ {
        __pyx_t_13 = PyList_AsTuple(__pyx_v_new_neighbours_destructive); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1845, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_forcing_trans); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1845, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1845, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_16 = __Pyx_GetItemInt(__pyx_t_15, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1845, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_13, __pyx_t_16, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1845, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_17 = (__pyx_t_1 != 0);
        if (__pyx_t_17) {
        } else {
          __pyx_t_5 = __pyx_t_17;
          goto __pyx_L57_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1846
 *             else:
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        __pyx_t_16 = PyList_AsTuple(__pyx_v_new_neighbours_living); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1846, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1846, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1846, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_15 = __Pyx_GetItemInt(__pyx_t_13, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1846, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_17 = (__Pyx_PySequence_ContainsTF(__pyx_t_16, __pyx_t_15, Py_EQ)); if (unlikely(__pyx_t_17 < 0)) __PYX_ERR(0, 1846, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__pyx_t_17 != 0);
        __pyx_t_5 = __pyx_t_1;
        __pyx_L57_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1845
 *                 return 2
 *             else:
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \             # <<<<<<<<<<<<<<
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:
 *                     return 1
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1847
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1845
 *                 return 2
 *             else:
 *                 if tuple(new_neighbours_destructive) in forcing_trans[generations % alternating_period] and \             # <<<<<<<<<<<<<<
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1848
 *                         tuple(new_neighbours_living) in birth_trans[generations % alternating_period]:
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1817
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    }

    /* "CAComputeParse/CACompute.pyx":1693
 *     cdef pair[int, int] neighbour, neighbour2, alive_semi_1, destructive_semi_1
 * 
 *     if rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CAComputeParse/CACompute.pyx":1849
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":1850
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1851
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1852
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1852, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1853
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1853, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1852
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CAComputeParse/CACompute.pyx":1855
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1855, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1856
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1856, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1855
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)])) != (__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1857
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1857, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1858
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1858, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1857
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1859
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1857
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CAComputeParse/CACompute.pyx":1860
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1860, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1855
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 */
      }

      /* "CAComputeParse/CACompute.pyx":1862
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1863
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1863, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1864
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1864, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1863
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1865
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1863
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1866
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1862
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1850
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
      goto __pyx_L59;
    }

    /* "CAComputeParse/CACompute.pyx":1867
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1868
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_birth = 0;

      /* "CAComputeParse/CACompute.pyx":1869
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_v_n_survival = 0;

      /* "CAComputeParse/CACompute.pyx":1870
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1870, __pyx_L1_error)
      }
      __pyx_t_7 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CAComputeParse/CACompute.pyx":1871
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CAComputeParse/CACompute.pyx":1872
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CAComputeParse/CACompute.pyx":1873
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1873, __pyx_L1_error)
        }
        __pyx_t_12 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CAComputeParse/CACompute.pyx":1874
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1874, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1875
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[             # <<<<<<<<<<<<<<
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1875, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1876
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1876, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1877
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1877, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1874
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_14CAComputeParse_9CACompute_index_map[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CAComputeParse/CACompute.pyx":1878
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CAComputeParse/CACompute.pyx":1873
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CAComputeParse/CACompute.pyx":1880
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1880, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1881
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1881, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1880
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1882
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CAComputeParse/CACompute.pyx":1880
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1883
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1883, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1884
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_survival += 1
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1884, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1883
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1885
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CAComputeParse/CACompute.pyx":1883
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1870
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":1887
 *                     n_survival += 1
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1887, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1888
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1888, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1887
 *                     n_survival += 1
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)])) != (__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1889
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1889, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1890
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1890, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1889
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1891
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1889
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1892
 *                     survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1887
 *                     n_survival += 1
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
      }

      /* "CAComputeParse/CACompute.pyx":1894
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1895
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1895, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1896
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1896, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1895
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1897
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1895
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1898
 *                     birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1894
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1867
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
      goto __pyx_L59;
    }

    /* "CAComputeParse/CACompute.pyx":1899
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1900
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 */
      __pyx_t_10 = 0;
      __pyx_t_9 = 0;
      __pyx_v_n_edge = __pyx_t_10;
      __pyx_v_n_corner = __pyx_t_9;

      /* "CAComputeParse/CACompute.pyx":1901
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1902
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1902, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, -1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1902, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L77_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1903
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1903, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, 1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1903, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L77_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1904
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1904, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1904, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L77_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1905
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):             # <<<<<<<<<<<<<<
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 *                 else:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1905, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (-1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1905, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        __pyx_t_5 = __pyx_t_1;
        __pyx_L77_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1902
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1906
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 *                 else:
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1906, __pyx_L1_error)
          }
          __pyx_v_n_edge = (__pyx_v_n_edge + ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])]));

          /* "CAComputeParse/CACompute.pyx":1902
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
          goto __pyx_L76;
        }

        /* "CAComputeParse/CACompute.pyx":1908
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 *                 else:
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1908, __pyx_L1_error)
          }
          __pyx_v_n_corner = (__pyx_v_n_corner + ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])]));
        }
        __pyx_L76:;
      }

      /* "CAComputeParse/CACompute.pyx":1910
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1911
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1911, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner, __pyx_v_n_edge);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1911, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1912
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1912, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1911
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1913
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1911
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1914
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1910
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1915
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1916
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1916, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner, __pyx_v_n_edge);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1916, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1917
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1917, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1916
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1918
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1916
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1919
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1915
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1899
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
      goto __pyx_L59;
    }

    /* "CAComputeParse/CACompute.pyx":1920
 *                     return 1
 *                 return 2
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L84_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1921
 *                 return 2
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L84_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1922
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L84_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":1923
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
    __pyx_t_5 = __pyx_t_1;
    __pyx_L84_bool_binop_done:;

    /* "CAComputeParse/CACompute.pyx":1920
 *                     return 1
 *                 return 2
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1924
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \
 */
      __pyx_t_15 = PyList_New(0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1924, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_v_new_neighbours = ((PyObject*)__pyx_t_15);
      __pyx_t_15 = 0;

      /* "CAComputeParse/CACompute.pyx":1925
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \
 *                     activity_list[generations % alternating_period].end():
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1926
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                     new_neighbours.append(1)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1926, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1927
 *             for i in range(neighbours.size() - 1):
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \
 *                     activity_list[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     new_neighbours.append(1)
 *                 else:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1927, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1926
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                     new_neighbours.append(1)
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find((__pyx_v_neighbours[__pyx_v_i])) != (__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1928
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \
 *                     activity_list[generations % alternating_period].end():
 *                     new_neighbours.append(1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     new_neighbours.append(0)
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours, __pyx_int_1); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1928, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":1926
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 if activity_list[generations % alternating_period].find(neighbours[i]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                     new_neighbours.append(1)
 */
          goto __pyx_L90;
        }

        /* "CAComputeParse/CACompute.pyx":1930
 *                     new_neighbours.append(1)
 *                 else:
 *                     new_neighbours.append(0)             # <<<<<<<<<<<<<<
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 */
        /*else*/ {
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1930, __pyx_L1_error)
        }
        __pyx_L90:;
      }

      /* "CAComputeParse/CACompute.pyx":1932
 *                     new_neighbours.append(0)
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1932, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1933
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1933, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":1932
 *                     new_neighbours.append(0)
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)])) != (__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1934
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        __pyx_t_15 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1934, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1934, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1934, __pyx_L1_error)
        }
        __pyx_t_9 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_16, __pyx_t_9, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1934, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_15, __pyx_t_13, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1934, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_1 = (__pyx_t_5 != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":1935
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *             else:
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1934
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        }

        /* "CAComputeParse/CACompute.pyx":1936
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1936, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1932
 *                     new_neighbours.append(0)
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 */
      }

      /* "CAComputeParse/CACompute.pyx":1938
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
      /*else*/ {
        __pyx_t_13 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1938, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1938, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1938, __pyx_L1_error)
        }
        __pyx_t_9 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_16 = __Pyx_GetItemInt(__pyx_t_15, __pyx_t_9, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1938, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_13, __pyx_t_16, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1938, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1939
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Single State":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1938
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":1940
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1920
 *                     return 1
 *                 return 2
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    }
    __pyx_L59:;

    /* "CAComputeParse/CACompute.pyx":1849
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CAComputeParse/CACompute.pyx":1941
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Single State")) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":1942
 *                 return 0
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1943
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1944
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1944, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1945
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1945, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1944
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CAComputeParse/CACompute.pyx":1947
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1948
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1948, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1949
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1949, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1948
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1950
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1948
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1951
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1947
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1953
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
      /*else*/ {
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1953, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1954
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1954, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1953
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1955
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1953
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1956
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":1942
 *                 return 0
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    }

    /* "CAComputeParse/CACompute.pyx":1957
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1958
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_birth = 0;

      /* "CAComputeParse/CACompute.pyx":1959
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_v_n_survival = 0;

      /* "CAComputeParse/CACompute.pyx":1960
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 1960, __pyx_L1_error)
      }
      __pyx_t_7 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CAComputeParse/CACompute.pyx":1961
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CAComputeParse/CACompute.pyx":1962
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CAComputeParse/CACompute.pyx":1963
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1963, __pyx_L1_error)
        }
        __pyx_t_12 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CAComputeParse/CACompute.pyx":1964
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1964, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1965
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[             # <<<<<<<<<<<<<<
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1965, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1966
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 1966, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1967
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1967, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":1964
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_14CAComputeParse_9CACompute_index_map[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CAComputeParse/CACompute.pyx":1968
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CAComputeParse/CACompute.pyx":1963
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CAComputeParse/CACompute.pyx":1970
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1970, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1971
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1971, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1970
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1972
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CAComputeParse/CACompute.pyx":1970
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1973
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1973, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1974
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_survival += 1
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1974, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1973
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1975
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CAComputeParse/CACompute.pyx":1973
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1960
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":1977
 *                     n_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1978
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1978, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1979
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1979, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1978
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1980
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1978
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1981
 *                     survival[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1977
 *                     n_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1983
 *                 return 0
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":1984
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1984, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1985
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1985, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":1984
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1986
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":1984
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":1987
 *                     birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1983
 *                 return 0
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1957
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
      goto __pyx_L94;
    }

    /* "CAComputeParse/CACompute.pyx":1988
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":1989
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_v_n_edge = __pyx_t_9;
      __pyx_v_n_corner = __pyx_t_10;

      /* "CAComputeParse/CACompute.pyx":1990
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":1991
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1991, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, -1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1991, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L112_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1992
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1992, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, 1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1992, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L112_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1993
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += neighbours[i]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1993, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1993, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L112_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":1994
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):             # <<<<<<<<<<<<<<
 *                     n_edge += neighbours[i]
 *                 else:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 1994, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (-1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1994, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        __pyx_t_5 = __pyx_t_1;
        __pyx_L112_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":1991
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":1995
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += neighbours[i]             # <<<<<<<<<<<<<<
 *                 else:
 *                     n_corner += neighbours[i]
 */
          __pyx_v_n_edge = (__pyx_v_n_edge + (__pyx_v_neighbours[__pyx_v_i]));

          /* "CAComputeParse/CACompute.pyx":1991
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
          goto __pyx_L111;
        }

        /* "CAComputeParse/CACompute.pyx":1997
 *                     n_edge += neighbours[i]
 *                 else:
 *                     n_corner += neighbours[i]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
        /*else*/ {
          __pyx_v_n_corner = (__pyx_v_n_corner + (__pyx_v_neighbours[__pyx_v_i]));
        }
        __pyx_L111:;
      }

      /* "CAComputeParse/CACompute.pyx":1999
 *                     n_corner += neighbours[i]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2000
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2000, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner, __pyx_v_n_edge);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2000, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2001
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2001, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2000
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2002
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2000
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2003
 *                     birth_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":1999
 *                     n_corner += neighbours[i]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     birth_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2004
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2005
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2005, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_corner, __pyx_v_n_edge);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2005, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2006
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2006, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2005
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2007
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2005
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \             # <<<<<<<<<<<<<<
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2008
 *                     survival_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2004
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_corner, n_edge)) != \
 *                     survival_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":1988
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
      goto __pyx_L94;
    }

    /* "CAComputeParse/CACompute.pyx":2009
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L119_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2010
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L119_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2011
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L119_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2012
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
    __pyx_t_5 = __pyx_t_1;
    __pyx_L119_bool_binop_done:;

    /* "CAComputeParse/CACompute.pyx":2009
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2013
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 new_neighbours.append(neighbours[i])
 */
      __pyx_t_16 = PyList_New(0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2013, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_v_new_neighbours = ((PyObject*)__pyx_t_16);
      __pyx_t_16 = 0;

      /* "CAComputeParse/CACompute.pyx":2014
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 new_neighbours.append(neighbours[i])
 * 
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":2015
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 new_neighbours.append(neighbours[i])             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
        __pyx_t_16 = __Pyx_PyInt_From_int((__pyx_v_neighbours[__pyx_v_i])); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2015, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours, __pyx_t_16); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 2015, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      }

      /* "CAComputeParse/CACompute.pyx":2017
 *                 new_neighbours.append(neighbours[i])
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2018
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        __pyx_t_16 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2018, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2018, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2018, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_15 = __Pyx_GetItemInt(__pyx_t_13, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2018, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_16, __pyx_t_15, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2018, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__pyx_t_5 != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2019
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2018
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":2020
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2017
 *                 new_neighbours.append(neighbours[i])
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2022
 *                 return 0
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
      /*else*/ {
        __pyx_t_15 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2022, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2022, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2022, __pyx_L1_error)
        }
        __pyx_t_10 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_16, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2022, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_15, __pyx_t_13, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 2022, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2023
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2022
 *                 return 0
 *             else:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":2024
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":2009
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    }
    __pyx_L94:;

    /* "CAComputeParse/CACompute.pyx":1941
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CAComputeParse/CACompute.pyx":2025
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":2026
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2027
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":2028
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2028, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2029
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2029, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2028
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CAComputeParse/CACompute.pyx":2031
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2032
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2032, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2033
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return birth_state
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2033, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2032
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2034
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return birth_state             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = __pyx_v_14CAComputeParse_9CACompute_birth_state;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2032
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        }

        /* "CAComputeParse/CACompute.pyx":2035
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2031
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2036
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2037
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2037, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2038
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2038, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2037
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2039
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2037
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2040
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2036
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2042
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
      /*else*/ {
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2042, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2043
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \
 *                         regen_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2043, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2042
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2044
 *                 if regen_birth[generations % alternating_period].find(n) != \
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 *                         regen_survival[generations % alternating_period].end():
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2042
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2045
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2045, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2046
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 *                         regen_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2046, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2045
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2047
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2045
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CAComputeParse/CACompute.pyx":2048
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2048, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":2026
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    }

    /* "CAComputeParse/CACompute.pyx":2049
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2050
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_t_10 = 0;
      __pyx_t_9 = 0;
      __pyx_t_19 = 0;
      __pyx_t_20 = 0;
      __pyx_v_n_birth = __pyx_t_10;
      __pyx_v_n_survival = __pyx_t_9;
      __pyx_v_n_regen_birth = __pyx_t_19;
      __pyx_v_n_regen_survival = __pyx_t_20;

      /* "CAComputeParse/CACompute.pyx":2051
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2051, __pyx_L1_error)
      }
      __pyx_t_7 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CAComputeParse/CACompute.pyx":2052
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CAComputeParse/CACompute.pyx":2053
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CAComputeParse/CACompute.pyx":2054
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2054, __pyx_L1_error)
        }
        __pyx_t_12 = &(__pyx_v_14CAComputeParse_9CACompute_original_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CAComputeParse/CACompute.pyx":2055
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2055, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":2056
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[             # <<<<<<<<<<<<<<
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2056, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":2057
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2057, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":2058
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2058, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":2055
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_14CAComputeParse_9CACompute_index_map[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CAComputeParse/CACompute.pyx":2059
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CAComputeParse/CACompute.pyx":2054
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CAComputeParse/CACompute.pyx":2060
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2060, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2061
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2061, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2060
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2062
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CAComputeParse/CACompute.pyx":2060
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2063
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2063, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2064
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2064, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2063
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2065
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 *                         other_regen_birth[generations % alternating_period].end():
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CAComputeParse/CACompute.pyx":2063
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2066
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2066, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2067
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 *                         other_regen_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2067, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2066
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2068
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 *                         other_regen_survival[generations % alternating_period].end():
 */
          __pyx_v_n_regen_birth = (__pyx_v_n_regen_birth + 1);

          /* "CAComputeParse/CACompute.pyx":2066
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2069
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2069, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2070
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 *                         other_regen_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     n_regen_survival += 1
 * 
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2070, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2069
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_other_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_14CAComputeParse_9CACompute_other_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2071
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
          __pyx_v_n_regen_survival = (__pyx_v_n_regen_survival + 1);

          /* "CAComputeParse/CACompute.pyx":2069
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2051
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CAComputeParse/CACompute.pyx":2073
 *                     n_regen_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2074
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2074, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2075
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return birth_state
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2075, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2074
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_14CAComputeParse_9CACompute_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2076
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 *                     return birth_state             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = __pyx_v_14CAComputeParse_9CACompute_birth_state;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2074
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        }

        /* "CAComputeParse/CACompute.pyx":2077
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2073
 *                     n_regen_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2078
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2079
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2079, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2080
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2080, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2079
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_14CAComputeParse_9CACompute_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2081
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2079
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2082
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2078
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2084
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
      /*else*/ {
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2084, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2085
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 *                         regen_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2085, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2084
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_regen_birth) != (__pyx_v_14CAComputeParse_9CACompute_regen_birth[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2086
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 *                         regen_survival[generations % alternating_period].end():
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2084
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2087
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2087, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2088
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 *                         regen_survival[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2088, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2087
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_n_regen_survival) != (__pyx_v_14CAComputeParse_9CACompute_regen_survival[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2089
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2087
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CAComputeParse/CACompute.pyx":2090
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2090, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":2049
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
    }

    /* "CAComputeParse/CACompute.pyx":2091
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Semi Totalistic")) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2092
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 */
      __pyx_t_20 = 0;
      __pyx_t_19 = 0;
      __pyx_v_n_edge = __pyx_t_20;
      __pyx_v_n_corner = __pyx_t_19;

      /* "CAComputeParse/CACompute.pyx":2093
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":2094
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2094, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, -1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2094, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L150_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":2095
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2095, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (0, 1);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2095, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L150_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":2096
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2096, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2096, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        if (!__pyx_t_1) {
        } else {
          __pyx_t_5 = __pyx_t_1;
          goto __pyx_L150_bool_binop_done;
        }

        /* "CAComputeParse/CACompute.pyx":2097
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):             # <<<<<<<<<<<<<<
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 *                 else:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2097, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (-1, 0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2097, __pyx_L1_error)
        }
        __pyx_t_1 = ((((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]) == __pyx_t_8) != 0);
        __pyx_t_5 = __pyx_t_1;
        __pyx_L150_bool_binop_done:;

        /* "CAComputeParse/CACompute.pyx":2094
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2098
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (-1, 0):
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 *                 else:
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2098, __pyx_L1_error)
          }
          __pyx_v_n_edge = (__pyx_v_n_edge + ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])]));

          /* "CAComputeParse/CACompute.pyx":2094
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 *                 if neighbourhood[generations % alternating_period][i] == pair[int, int] (0, -1) or \             # <<<<<<<<<<<<<<
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (0, 1) or \
 *                         neighbourhood[generations % alternating_period][i] == pair[int, int] (1, 0) or \
 */
          goto __pyx_L149;
        }

        /* "CAComputeParse/CACompute.pyx":2100
 *                     n_edge += state_weights[generations % alternating_period][neighbours[i]]
 *                 else:
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2100, __pyx_L1_error)
          }
          __pyx_v_n_corner = (__pyx_v_n_corner + ((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])]));
        }
        __pyx_L149:;
      }

      /* "CAComputeParse/CACompute.pyx":2102
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         birth_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2103
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return birth_state
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2103, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_edge, __pyx_v_n_corner);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2103, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2104
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         birth_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return birth_state
 *                 return 0
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2104, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2103
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return birth_state
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2105
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return birth_state             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = __pyx_v_14CAComputeParse_9CACompute_birth_state;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2103
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return birth_state
 */
        }

        /* "CAComputeParse/CACompute.pyx":2106
 *                         birth_semi_1[generations % alternating_period].end():
 *                     return birth_state
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2102
 *                     n_corner += state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         birth_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2107
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         survival_semi_1[generations % alternating_period].end():
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2108
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2108, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_edge, __pyx_v_n_corner);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2108, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2109
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         survival_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2109, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2108
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2110
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2108
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2111
 *                         survival_semi_1[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2107
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         survival_semi_1[generations % alternating_period].end():
 */
      }

      /* "CAComputeParse/CACompute.pyx":2113
 *                 return 2
 *             else:
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
      /*else*/ {
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2113, __pyx_L1_error)
        }
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_edge, __pyx_v_n_corner);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2113, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2114
 *             else:
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         regen_birth_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2114, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2113
 *                 return 2
 *             else:
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_regen_birth_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2115
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif regen_survival_semi_1[generations % alternating_period].find(
 *                         pair[int, int] (n_edge, n_corner)) != \
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2113
 *                 return 2
 *             else:
 *                 if regen_birth_semi_1[generations % alternating_period].find(pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        }

        /* "CAComputeParse/CACompute.pyx":2116
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(             # <<<<<<<<<<<<<<
 *                         pair[int, int] (n_edge, n_corner)) != \
 *                         regen_survival_semi_1[generations % alternating_period].end():
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2116, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2117
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(
 *                         pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         regen_survival_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        try {
          __pyx_t_8 = std::pair<int,int> (__pyx_v_n_edge, __pyx_v_n_corner);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2117, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2118
 *                 elif regen_survival_semi_1[generations % alternating_period].find(
 *                         pair[int, int] (n_edge, n_corner)) != \
 *                         regen_survival_semi_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2118, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2117
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(
 *                         pair[int, int] (n_edge, n_corner)) != \             # <<<<<<<<<<<<<<
 *                         regen_survival_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_regen_survival_semi_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2116
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(             # <<<<<<<<<<<<<<
 *                         pair[int, int] (n_edge, n_corner)) != \
 *                         regen_survival_semi_1[generations % alternating_period].end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2119
 *                         pair[int, int] (n_edge, n_corner)) != \
 *                         regen_survival_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2116
 *                         regen_birth_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival_semi_1[generations % alternating_period].find(             # <<<<<<<<<<<<<<
 *                         pair[int, int] (n_edge, n_corner)) != \
 *                         regen_survival_semi_1[generations % alternating_period].end():
 */
        }

        /* "CAComputeParse/CACompute.pyx":2120
 *                         regen_survival_semi_1[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2120, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":2091
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Semi Totalistic":             # <<<<<<<<<<<<<<
 *             n_edge, n_corner = 0, 0
 *             for i in range(neighbours.size() - 1):
 */
    }

    /* "CAComputeParse/CACompute.pyx":2121
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 1 Moore Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L158_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2122
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Cross Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L158_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2123
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Von Neumann Isotropic Non-Totalistic")) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_5 = __pyx_t_1;
      goto __pyx_L158_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2124
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":             # <<<<<<<<<<<<<<
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 */
    __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_bsconditions == ((char const *)"Range 2 Far Corners Isotropic Non-Totalistic")) != 0);
    __pyx_t_5 = __pyx_t_1;
    __pyx_L158_bool_binop_done:;

    /* "CAComputeParse/CACompute.pyx":2121
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2125
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if state_weights[generations % alternating_period][neighbours[i]] >= 1:
 */
      __pyx_t_13 = PyList_New(0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2125, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_v_new_neighbours = ((PyObject*)__pyx_t_13);
      __pyx_t_13 = 0;

      /* "CAComputeParse/CACompute.pyx":2126
 *                 bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if state_weights[generations % alternating_period][neighbours[i]] >= 1:
 *                     new_neighbours.append(1)
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CAComputeParse/CACompute.pyx":2127
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 if state_weights[generations % alternating_period][neighbours[i]] >= 1:             # <<<<<<<<<<<<<<
 *                     new_neighbours.append(1)
 *                 else:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2127, __pyx_L1_error)
        }
        __pyx_t_5 = ((((__pyx_v_14CAComputeParse_9CACompute_state_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])]) >= 1) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2128
 *             for i in range(neighbours.size() - 1):
 *                 if state_weights[generations % alternating_period][neighbours[i]] >= 1:
 *                     new_neighbours.append(1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     new_neighbours.append(0)
 */
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours, __pyx_int_1); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 2128, __pyx_L1_error)

          /* "CAComputeParse/CACompute.pyx":2127
 *             new_neighbours = []
 *             for i in range(neighbours.size() - 1):
 *                 if state_weights[generations % alternating_period][neighbours[i]] >= 1:             # <<<<<<<<<<<<<<
 *                     new_neighbours.append(1)
 *                 else:
 */
          goto __pyx_L164;
        }

        /* "CAComputeParse/CACompute.pyx":2130
 *                     new_neighbours.append(1)
 *                 else:
 *                     new_neighbours.append(0)             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
        /*else*/ {
          __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_new_neighbours, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 2130, __pyx_L1_error)
        }
        __pyx_L164:;
      }

      /* "CAComputeParse/CACompute.pyx":2132
 *                     new_neighbours.append(0)
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1
 */
      __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2133
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        __pyx_t_13 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_birth_trans); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2133, __pyx_L1_error)
        }
        __pyx_t_19 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_16 = __Pyx_GetItemInt(__pyx_t_15, __pyx_t_19, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2133, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_13, __pyx_t_16, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2133, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_1 = (__pyx_t_5 != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2134
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2133
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        }

        /* "CAComputeParse/CACompute.pyx":2135
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2132
 *                     new_neighbours.append(0)
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in birth_trans[generations % alternating_period]:
 *                     return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2136
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CAComputeParse/CACompute.pyx":2137
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        __pyx_t_16 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2137, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_survival_trans); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2137, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2137, __pyx_L1_error)
        }
        __pyx_t_19 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_15 = __Pyx_GetItemInt(__pyx_t_13, __pyx_t_19, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2137, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_16, __pyx_t_15, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 2137, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2138
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2137
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 2
 */
        }

        /* "CAComputeParse/CACompute.pyx":2139
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2136
 *                     return 1
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if tuple(new_neighbours) in survival_trans[generations % alternating_period]:
 *                     return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2141
 *                 return 2
 *             else:
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:
 */
      /*else*/ {
        __pyx_t_15 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_regen_birth_trans); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2141, __pyx_L1_error)
        }
        __pyx_t_19 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_16, __pyx_t_19, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_t_15, __pyx_t_13, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2141, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_1 = (__pyx_t_5 != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2142
 *             else:
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2141
 *                 return 2
 *             else:
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:
 */
        }

        /* "CAComputeParse/CACompute.pyx":2143
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        __pyx_t_13 = PyList_AsTuple(__pyx_v_new_neighbours); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_regen_survival_trans); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2143, __pyx_L1_error)
        }
        __pyx_t_19 = __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period);
        __pyx_t_16 = __Pyx_GetItemInt(__pyx_t_15, __pyx_t_19, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 2143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_13, __pyx_t_16, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 2143, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_5 = (__pyx_t_1 != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2144
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *     elif rule_space == b"(B/M/S)*2":
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2143
 *                 if tuple(new_neighbours) in regen_birth_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 */
        }

        /* "CAComputeParse/CACompute.pyx":2145
 *                 elif tuple(new_neighbours) in regen_survival_trans[generations % alternating_period]:
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *     elif rule_space == b"(B/M/S)*2":
 *         for i in range(neighbours.size() - 1):
 */
        __pyx_t_18 = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1);
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2145, __pyx_L1_error)
        }
        __pyx_r = __Pyx_mod_long(__pyx_t_18, __pyx_v_14CAComputeParse_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CAComputeParse/CACompute.pyx":2121
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Range 1 Moore Isotropic Non-Totalistic" or \             # <<<<<<<<<<<<<<
 *                 bsconditions == b"Range 2 Cross Isotropic Non-Totalistic" or \
 *                 bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic" or \
 */
    }

    /* "CAComputeParse/CACompute.pyx":2025
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CAComputeParse/CACompute.pyx":2146
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *     elif rule_space == b"(B/M/S)*2":             # <<<<<<<<<<<<<<
 *         for i in range(neighbours.size() - 1):
 *             if neighbours[i] == 1:
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"(B/M/S)*2")) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":2147
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *     elif rule_space == b"(B/M/S)*2":
 *         for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *             if neighbours[i] == 1:
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 */
    __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "CAComputeParse/CACompute.pyx":2148
 *     elif rule_space == b"(B/M/S)*2":
 *         for i in range(neighbours.size() - 1):
 *             if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 *             elif neighbours[i] == 2:
 */
      __pyx_t_5 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2149
 *         for i in range(neighbours.size() - 1):
 *             if neighbours[i] == 1:
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 *             elif neighbours[i] == 2:
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2149, __pyx_L1_error)
        }
        __pyx_v_n1 = (__pyx_v_n1 + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]));

        /* "CAComputeParse/CACompute.pyx":2148
 *     elif rule_space == b"(B/M/S)*2":
 *         for i in range(neighbours.size() - 1):
 *             if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 *             elif neighbours[i] == 2:
 */
        goto __pyx_L171;
      }

      /* "CAComputeParse/CACompute.pyx":2150
 *             if neighbours[i] == 1:
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 *             elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
      __pyx_t_5 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2151
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 *             elif neighbours[i] == 2:
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 * 
 *         if neighbours[neighbours.size() - 1] == 0:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2151, __pyx_L1_error)
        }
        __pyx_v_n2 = (__pyx_v_n2 + ((__pyx_v_14CAComputeParse_9CACompute_neighbourhood_weights[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)])[__pyx_v_i]));

        /* "CAComputeParse/CACompute.pyx":2150
 *             if neighbours[i] == 1:
 *                 n1 += neighbourhood_weights[generations % alternating_period][i]
 *             elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
      }
      __pyx_L171:;
    }

    /* "CAComputeParse/CACompute.pyx":2153
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]
 * 
 *         if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_1[generations % alternating_period].end():
 */
    __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2154
 * 
 *         if neighbours[neighbours.size() - 1] == 0:
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2154, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2154, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2155
 *         if neighbours[neighbours.size() - 1] == 0:
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 1
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2155, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2154
 * 
 *         if neighbours[neighbours.size() - 1] == 0:
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_birth_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2156
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_1[generations % alternating_period].end():
 *                 return 1             # <<<<<<<<<<<<<<
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_2[generations % alternating_period].end():
 */
        __pyx_r = 1;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2154
 * 
 *         if neighbours[neighbours.size() - 1] == 0:
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2157
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_2[generations % alternating_period].end():
 *                 return 2
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2157, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2157, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2158
 *                 return 1
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_2[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 2
 *             return 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2158, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2157
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_2[generations % alternating_period].end():
 *                 return 2
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_birth_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_birth_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2159
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_2[generations % alternating_period].end():
 *                 return 2             # <<<<<<<<<<<<<<
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2157
 *                     birth_1[generations % alternating_period].end():
 *                 return 1
 *             elif birth_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     birth_2[generations % alternating_period].end():
 *                 return 2
 */
      }

      /* "CAComputeParse/CACompute.pyx":2160
 *                     birth_2[generations % alternating_period].end():
 *                 return 2
 *             return 0             # <<<<<<<<<<<<<<
 *         elif neighbours[neighbours.size() - 1] == 1:
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 */
      __pyx_r = 0;
      goto __pyx_L0;

      /* "CAComputeParse/CACompute.pyx":2153
 *                 n2 += neighbourhood_weights[generations % alternating_period][i]
 * 
 *         if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *             if birth_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     birth_1[generations % alternating_period].end():
 */
    }

    /* "CAComputeParse/CACompute.pyx":2161
 *                 return 2
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_1[generations % alternating_period].end():
 */
    __pyx_t_5 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2162
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2162, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2162, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2163
 *         elif neighbours[neighbours.size() - 1] == 1:
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 1
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2163, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2162
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_survival_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2164
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_1[generations % alternating_period].end():
 *                 return 1             # <<<<<<<<<<<<<<
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_1[generations % alternating_period].end():
 */
        __pyx_r = 1;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2162
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2165
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_1[generations % alternating_period].end():
 *                 return 2
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2165, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2165, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2166
 *                 return 1
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_1[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 2
 *             return 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2166, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2165
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_1[generations % alternating_period].end():
 *                 return 2
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_mutate_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_mutate_1[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2167
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_1[generations % alternating_period].end():
 *                 return 2             # <<<<<<<<<<<<<<
 *             return 0
 *         else:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2165
 *                     survival_1[generations % alternating_period].end():
 *                 return 1
 *             elif mutate_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_1[generations % alternating_period].end():
 *                 return 2
 */
      }

      /* "CAComputeParse/CACompute.pyx":2168
 *                     mutate_1[generations % alternating_period].end():
 *                 return 2
 *             return 0             # <<<<<<<<<<<<<<
 *         else:
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 */
      __pyx_r = 0;
      goto __pyx_L0;

      /* "CAComputeParse/CACompute.pyx":2161
 *                 return 2
 *             return 0
 *         elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *             if survival_1[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_1[generations % alternating_period].end():
 */
    }

    /* "CAComputeParse/CACompute.pyx":2170
 *             return 0
 *         else:
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 */
    /*else*/ {
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2170, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2170, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2171
 *         else:
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_2[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 2
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2171, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2170
 *             return 0
 *         else:
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_survival_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_survival_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2172
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     survival_2[generations % alternating_period].end():
 *                 return 2             # <<<<<<<<<<<<<<
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_2[generations % alternating_period].end():
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2170
 *             return 0
 *         else:
 *             if survival_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 */
      }

      /* "CAComputeParse/CACompute.pyx":2173
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_2[generations % alternating_period].end():
 *                 return 1
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2173, __pyx_L1_error)
      }
      try {
        __pyx_t_8 = std::pair<int,int> (__pyx_v_n1, __pyx_v_n2);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2173, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2174
 *                 return 2
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_2[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                 return 1
 *             return 0
 */
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2174, __pyx_L1_error)
      }

      /* "CAComputeParse/CACompute.pyx":2173
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_2[generations % alternating_period].end():
 *                 return 1
 */
      __pyx_t_5 = (((__pyx_v_14CAComputeParse_9CACompute_mutate_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_t_8) != (__pyx_v_14CAComputeParse_9CACompute_mutate_2[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2175
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \
 *                     mutate_2[generations % alternating_period].end():
 *                 return 1             # <<<<<<<<<<<<<<
 *             return 0
 * 
 */
        __pyx_r = 1;
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2173
 *                     survival_2[generations % alternating_period].end():
 *                 return 2
 *             elif mutate_2[generations % alternating_period].find(pair[int, int] (n1, n2)) != \             # <<<<<<<<<<<<<<
 *                     mutate_2[generations % alternating_period].end():
 *                 return 1
 */
      }

      /* "CAComputeParse/CACompute.pyx":2176
 *                     mutate_2[generations % alternating_period].end():
 *                 return 1
 *             return 0             # <<<<<<<<<<<<<<
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 */
      __pyx_r = 0;
      goto __pyx_L0;
    }

    /* "CAComputeParse/CACompute.pyx":2146
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *     elif rule_space == b"(B/M/S)*2":             # <<<<<<<<<<<<<<
 *         for i in range(neighbours.size() - 1):
 *             if neighbours[i] == 1:
 */
  }
  __pyx_L3:;

  /* "CAComputeParse/CACompute.pyx":1687
 *     return rule_name
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):             # <<<<<<<<<<<<<<
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0, \
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_WriteUnraisable("CAComputeParse.CACompute.transition_func", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_new_neighbours_living);
  __Pyx_XDECREF(__pyx_v_new_neighbours_destructive);
  __Pyx_XDECREF(__pyx_v_new_neighbours);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":2178
 *             return 0
 * 
 * cdef int depend_on_neighbours(int state, int generations):             # <<<<<<<<<<<<<<
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\
 *              or rule_space == b"(B/M/S)*2":
 */

static int __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours(int __pyx_v_state, int __pyx_v_generations) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  long __pyx_t_3;
  __Pyx_RefNannySetupContext("depend_on_neighbours", 0);

  /* "CAComputeParse/CACompute.pyx":2179
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\             # <<<<<<<<<<<<<<
 *              or rule_space == b"(B/M/S)*2":
 *         return -1
 */
  __pyx_t_2 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Single State")) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }

  /* "CAComputeParse/CACompute.pyx":2180
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\
 *              or rule_space == b"(B/M/S)*2":             # <<<<<<<<<<<<<<
 *         return -1
 *     elif rule_space == b"Extended Generations":
 */
  __pyx_t_2 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"(B/M/S)*2")) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;

  /* "CAComputeParse/CACompute.pyx":2179
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\             # <<<<<<<<<<<<<<
 *              or rule_space == b"(B/M/S)*2":
 *         return -1
 */
  if (__pyx_t_1) {

    /* "CAComputeParse/CACompute.pyx":2181
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\
 *              or rule_space == b"(B/M/S)*2":
 *         return -1             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \
 */
    __pyx_r = -1;
    goto __pyx_L0;

    /* "CAComputeParse/CACompute.pyx":2179
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\             # <<<<<<<<<<<<<<
 *              or rule_space == b"(B/M/S)*2":
 *         return -1
 */
  }

  /* "CAComputeParse/CACompute.pyx":2182
 *              or rule_space == b"(B/M/S)*2":
 *         return -1
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 */
  __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
  if (__pyx_t_1) {

    /* "CAComputeParse/CACompute.pyx":2183
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      __PYX_ERR(0, 2183, __pyx_L1_error)
    }

    /* "CAComputeParse/CACompute.pyx":2184
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:             # <<<<<<<<<<<<<<
 *             return -1
 *         else:
 */
    if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      __PYX_ERR(0, 2184, __pyx_L1_error)
    }

    /* "CAComputeParse/CACompute.pyx":2183
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    __pyx_t_2 = (((__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).find(__pyx_v_state) != (__pyx_v_14CAComputeParse_9CACompute_activity_list[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).end()) != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L9_bool_binop_done;
    }

    /* "CAComputeParse/CACompute.pyx":2184
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:             # <<<<<<<<<<<<<<
 *             return -1
 *         else:
 */
    __pyx_t_2 = ((__pyx_v_state == 0) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L9_bool_binop_done:;

    /* "CAComputeParse/CACompute.pyx":2183
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    if (__pyx_t_1) {

      /* "CAComputeParse/CACompute.pyx":2185
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1             # <<<<<<<<<<<<<<
 *         else:
 *             return (state + 1) % n_states
 */
      __pyx_r = -1;
      goto __pyx_L0;

      /* "CAComputeParse/CACompute.pyx":2183
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    }

    /* "CAComputeParse/CACompute.pyx":2187
 *             return -1
 *         else:
 *             return (state + 1) % n_states             # <<<<<<<<<<<<<<
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 */
    /*else*/ {
      __pyx_t_3 = (__pyx_v_state + 1);
      if (unlikely(__pyx_v_14CAComputeParse_9CACompute_n_states == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(0, 2187, __pyx_L1_error)
      }
      __pyx_r = __Pyx_mod_long(__pyx_t_3, __pyx_v_14CAComputeParse_9CACompute_n_states);
      goto __pyx_L0;
    }

    /* "CAComputeParse/CACompute.pyx":2182
 *              or rule_space == b"(B/M/S)*2":
 *         return -1
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 */
  }

  /* "CAComputeParse/CACompute.pyx":2178
 *             return 0
 * 
 * cdef int depend_on_neighbours(int state, int generations):             # <<<<<<<<<<<<<<
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations"\
 *              or rule_space == b"(B/M/S)*2":
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("CAComputeParse.CACompute.depend_on_neighbours", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":2189
 *             return (state + 1) % n_states
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):             # <<<<<<<<<<<<<<
 *     if direction == b"o":
 *         if corner == 0:
 */

static bool __pyx_f_14CAComputeParse_9CACompute_compare_pairs(std::pair<int,int>  __pyx_v_a, std::pair<int,int>  __pyx_v_b) {
  bool __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("compare_pairs", 0);

  /* "CAComputeParse/CACompute.pyx":2190
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if direction == b"o":             # <<<<<<<<<<<<<<
 *         if corner == 0:
 *             if xy == 0:
 */
  __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_direction == ((char const *)"o")) != 0);
  if (__pyx_t_1) {

    /* "CAComputeParse/CACompute.pyx":2191
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if direction == b"o":
 *         if corner == 0:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.second == b.second:
 */
    switch (__pyx_v_14CAComputeParse_9CACompute_corner) {
      case 0:

      /* "CAComputeParse/CACompute.pyx":2192
 *     if direction == b"o":
 *         if corner == 0:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2193
 *         if corner == 0:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.second < b.second
 */
        __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2194
 *             if xy == 0:
 *                 if a.second == b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.second < b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2193
 *         if corner == 0:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.second < b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2195
 *                 if a.second == b.second:
 *                     return a.first < b.first
 *                 return a.second < b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first == b.first:
 */
        __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2192
 *     if direction == b"o":
 *         if corner == 0:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2197
 *                 return a.second < b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second < b.second
 *                 return a.first < b.first
 */
        __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2198
 *             elif xy == 1:
 *                 if a.first == b.first:
 *                     return a.second < b.second             # <<<<<<<<<<<<<<
 *                 return a.first < b.first
 * 
 */
          __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2197
 *                 return a.second < b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second < b.second
 *                 return a.first < b.first
 */
        }

        /* "CAComputeParse/CACompute.pyx":2199
 *                 if a.first == b.first:
 *                     return a.second < b.second
 *                 return a.first < b.first             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 1:
 */
        __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2196
 *                     return a.first < b.first
 *                 return a.second < b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first == b.first:
 *                     return a.second < b.second
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2191
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if direction == b"o":
 *         if corner == 0:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.second == b.second:
 */
      break;
      case 1:

      /* "CAComputeParse/CACompute.pyx":2202
 * 
 *         elif corner == 1:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2203
 *         elif corner == 1:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.second > b.second
 */
        __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2204
 *             if xy == 0:
 *                 if a.second == b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.second > b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2203
 *         elif corner == 1:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.second > b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2205
 *                 if a.second == b.second:
 *                     return a.first < b.first
 *                 return a.second > b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first == b.first:
 */
        __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2202
 * 
 *         elif corner == 1:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2207
 *                 return a.second > b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second > b.second
 *                 return a.first < b.first
 */
        __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2208
 *             elif xy == 1:
 *                 if a.first == b.first:
 *                     return a.second > b.second             # <<<<<<<<<<<<<<
 *                 return a.first < b.first
 * 
 */
          __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2207
 *                 return a.second > b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second > b.second
 *                 return a.first < b.first
 */
        }

        /* "CAComputeParse/CACompute.pyx":2209
 *                 if a.first == b.first:
 *                     return a.second > b.second
 *                 return a.first < b.first             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 2:
 */
        __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2206
 *                     return a.first < b.first
 *                 return a.second > b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first == b.first:
 *                     return a.second > b.second
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2201
 *                 return a.first < b.first
 * 
 *         elif corner == 1:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.second == b.second:
 */
      break;
      case 2:

      /* "CAComputeParse/CACompute.pyx":2212
 * 
 *         elif corner == 2:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first > b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2213
 *         elif corner == 2:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.second < b.second
 */
        __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2214
 *             if xy == 0:
 *                 if a.second == b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.second < b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2213
 *         elif corner == 2:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.second < b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2215
 *                 if a.second == b.second:
 *                     return a.first > b.first
 *                 return a.second < b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first == b.first:
 */
        __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2212
 * 
 *         elif corner == 2:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first > b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2217
 *                 return a.second < b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second < b.second
 *                 return a.first > b.first
 */
        __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2218
 *             elif xy == 1:
 *                 if a.first == b.first:
 *                     return a.second < b.second             # <<<<<<<<<<<<<<
 *                 return a.first > b.first
 * 
 */
          __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2217
 *                 return a.second < b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second < b.second
 *                 return a.first > b.first
 */
        }

        /* "CAComputeParse/CACompute.pyx":2219
 *                 if a.first == b.first:
 *                     return a.second < b.second
 *                 return a.first > b.first             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 3:
 */
        __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2216
 *                     return a.first > b.first
 *                 return a.second < b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first == b.first:
 *                     return a.second < b.second
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2211
 *                 return a.first < b.first
 * 
 *         elif corner == 2:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.second == b.second:
 */
      break;
      case 3:

      /* "CAComputeParse/CACompute.pyx":2222
 * 
 *         elif corner == 3:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first > b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2223
 *         elif corner == 3:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.second > b.second
 */
        __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2224
 *             if xy == 0:
 *                 if a.second == b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.second > b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2223
 *         elif corner == 3:
 *             if xy == 0:
 *                 if a.second == b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.second > b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2225
 *                 if a.second == b.second:
 *                     return a.first > b.first
 *                 return a.second > b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first == b.first:
 */
        __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2222
 * 
 *         elif corner == 3:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.second == b.second:
 *                     return a.first > b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2227
 *                 return a.second > b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second > b.second
 *                 return a.first > b.first
 */
        __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2228
 *             elif xy == 1:
 *                 if a.first == b.first:
 *                     return a.second > b.second             # <<<<<<<<<<<<<<
 *                 return a.first > b.first
 *     elif direction == b"d":
 */
          __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2227
 *                 return a.second > b.second
 *             elif xy == 1:
 *                 if a.first == b.first:             # <<<<<<<<<<<<<<
 *                     return a.second > b.second
 *                 return a.first > b.first
 */
        }

        /* "CAComputeParse/CACompute.pyx":2229
 *                 if a.first == b.first:
 *                     return a.second > b.second
 *                 return a.first > b.first             # <<<<<<<<<<<<<<
 *     elif direction == b"d":
 *         if corner == 0:
 */
        __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2226
 *                     return a.first > b.first
 *                 return a.second > b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first == b.first:
 *                     return a.second > b.second
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2221
 *                 return a.first > b.first
 * 
 *         elif corner == 3:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.second == b.second:
 */
      break;
      default: break;
    }

    /* "CAComputeParse/CACompute.pyx":2190
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if direction == b"o":             # <<<<<<<<<<<<<<
 *         if corner == 0:
 *             if xy == 0:
 */
    goto __pyx_L3;
  }

  /* "CAComputeParse/CACompute.pyx":2230
 *                     return a.second > b.second
 *                 return a.first > b.first
 *     elif direction == b"d":             # <<<<<<<<<<<<<<
 *         if corner == 0:
 *             if xy == 0:
 */
  __pyx_t_1 = ((__pyx_v_14CAComputeParse_9CACompute_direction == ((char const *)"d")) != 0);
  if (__pyx_t_1) {

    /* "CAComputeParse/CACompute.pyx":2231
 *                 return a.first > b.first
 *     elif direction == b"d":
 *         if corner == 0:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:
 */
    switch (__pyx_v_14CAComputeParse_9CACompute_corner) {
      case 0:

      /* "CAComputeParse/CACompute.pyx":2232
 *     elif direction == b"d":
 *         if corner == 0:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2233
 *         if corner == 0:
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first + a.second < b.first + b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first + __pyx_v_a.second) == (__pyx_v_b.first + __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2234
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.first + a.second < b.first + b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2233
 *         if corner == 0:
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first + a.second < b.first + b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2235
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 *                 return a.first + a.second < b.first + b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:
 */
        __pyx_r = ((__pyx_v_a.first + __pyx_v_a.second) < (__pyx_v_b.first + __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2232
 *     elif direction == b"d":
 *         if corner == 0:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2237
 *                 return a.first + a.second < b.first + b.second
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first + a.second < b.first + b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first + __pyx_v_a.second) == (__pyx_v_b.first + __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2238
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.first + a.second < b.first + b.second
 * 
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2237
 *                 return a.first + a.second < b.first + b.second
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first + a.second < b.first + b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2239
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first
 *                 return a.first + a.second < b.first + b.second             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 1:
 */
        __pyx_r = ((__pyx_v_a.first + __pyx_v_a.second) < (__pyx_v_b.first + __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2236
 *                     return a.first < b.first
 *                 return a.first + a.second < b.first + b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2231
 *                 return a.first > b.first
 *     elif direction == b"d":
 *         if corner == 0:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:
 */
      break;
      case 1:

      /* "CAComputeParse/CACompute.pyx":2242
 * 
 *         elif corner == 1:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2243
 *         elif corner == 1:
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first - a.second < b.first - b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first - __pyx_v_a.second) == (__pyx_v_b.first - __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2244
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.first - a.second < b.first - b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2243
 *         elif corner == 1:
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first - a.second < b.first - b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2245
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 *                 return a.first - a.second < b.first - b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:
 */
        __pyx_r = ((__pyx_v_a.first - __pyx_v_a.second) < (__pyx_v_b.first - __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2242
 * 
 *         elif corner == 1:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2247
 *                 return a.first - a.second < b.first - b.second
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first - a.second < b.first - b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first - __pyx_v_a.second) == (__pyx_v_b.first - __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2248
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.first - a.second < b.first - b.second
 * 
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2247
 *                 return a.first - a.second < b.first - b.second
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first - a.second < b.first - b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2249
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first
 *                 return a.first - a.second < b.first - b.second             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 2:
 */
        __pyx_r = ((__pyx_v_a.first - __pyx_v_a.second) < (__pyx_v_b.first - __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2246
 *                     return a.first < b.first
 *                 return a.first - a.second < b.first - b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2241
 *                 return a.first + a.second < b.first + b.second
 * 
 *         elif corner == 1:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:
 */
      break;
      case 2:

      /* "CAComputeParse/CACompute.pyx":2252
 * 
 *         elif corner == 2:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2253
 *         elif corner == 2:
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first - a.second > b.first - b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first - __pyx_v_a.second) == (__pyx_v_b.first - __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2254
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.first - a.second > b.first - b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2253
 *         elif corner == 2:
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first - a.second > b.first - b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2255
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 *                 return a.first - a.second > b.first - b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:
 */
        __pyx_r = ((__pyx_v_a.first - __pyx_v_a.second) > (__pyx_v_b.first - __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2252
 * 
 *         elif corner == 2:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2257
 *                 return a.first - a.second > b.first - b.second
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first - a.second > b.first - b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first - __pyx_v_a.second) == (__pyx_v_b.first - __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2258
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.first - a.second > b.first - b.second
 * 
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2257
 *                 return a.first - a.second > b.first - b.second
 *             elif xy == 1:
 *                 if a.first - a.second == b.first - b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first - a.second > b.first - b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2259
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first
 *                 return a.first - a.second > b.first - b.second             # <<<<<<<<<<<<<<
 * 
 *         elif corner == 3:
 */
        __pyx_r = ((__pyx_v_a.first - __pyx_v_a.second) > (__pyx_v_b.first - __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2256
 *                     return a.first < b.first
 *                 return a.first - a.second > b.first - b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first - a.second == b.first - b.second:
 *                     return a.first > b.first
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2251
 *                 return a.first - a.second < b.first - b.second
 * 
 *         elif corner == 2:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.first - a.second == b.first - b.second:
 */
      break;
      case 3:

      /* "CAComputeParse/CACompute.pyx":2262
 * 
 *         elif corner == 3:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 */
      switch (__pyx_v_14CAComputeParse_9CACompute_xy) {
        case 0:

        /* "CAComputeParse/CACompute.pyx":2263
 *         elif corner == 3:
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first + a.second > b.first + b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first + __pyx_v_a.second) == (__pyx_v_b.first + __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2264
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first             # <<<<<<<<<<<<<<
 *                 return a.first + a.second > b.first + b.second
 *             elif xy == 1:
 */
          __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2263
 *         elif corner == 3:
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first < b.first
 *                 return a.first + a.second > b.first + b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2265
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 *                 return a.first + a.second > b.first + b.second             # <<<<<<<<<<<<<<
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:
 */
        __pyx_r = ((__pyx_v_a.first + __pyx_v_a.second) > (__pyx_v_b.first + __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2262
 * 
 *         elif corner == 3:
 *             if xy == 0:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first < b.first
 */
        break;
        case 1:

        /* "CAComputeParse/CACompute.pyx":2267
 *                 return a.first + a.second > b.first + b.second
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first + a.second > b.first + b.second
 */
        __pyx_t_1 = (((__pyx_v_a.first + __pyx_v_a.second) == (__pyx_v_b.first + __pyx_v_b.second)) != 0);
        if (__pyx_t_1) {

          /* "CAComputeParse/CACompute.pyx":2268
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first             # <<<<<<<<<<<<<<
 *                 return a.first + a.second > b.first + b.second
 * 
 */
          __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
          goto __pyx_L0;

          /* "CAComputeParse/CACompute.pyx":2267
 *                 return a.first + a.second > b.first + b.second
 *             elif xy == 1:
 *                 if a.first + a.second == b.first + b.second:             # <<<<<<<<<<<<<<
 *                     return a.first > b.first
 *                 return a.first + a.second > b.first + b.second
 */
        }

        /* "CAComputeParse/CACompute.pyx":2269
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first
 *                 return a.first + a.second > b.first + b.second             # <<<<<<<<<<<<<<
 * 
 * cpdef set_bounds(int x, int y, string type1):
 */
        __pyx_r = ((__pyx_v_a.first + __pyx_v_a.second) > (__pyx_v_b.first + __pyx_v_b.second));
        goto __pyx_L0;

        /* "CAComputeParse/CACompute.pyx":2266
 *                     return a.first < b.first
 *                 return a.first + a.second > b.first + b.second
 *             elif xy == 1:             # <<<<<<<<<<<<<<
 *                 if a.first + a.second == b.first + b.second:
 *                     return a.first > b.first
 */
        break;
        default: break;
      }

      /* "CAComputeParse/CACompute.pyx":2261
 *                 return a.first - a.second > b.first - b.second
 * 
 *         elif corner == 3:             # <<<<<<<<<<<<<<
 *             if xy == 0:
 *                 if a.first + a.second == b.first + b.second:
 */
      break;
      default: break;
    }

    /* "CAComputeParse/CACompute.pyx":2230
 *                     return a.second > b.second
 *                 return a.first > b.first
 *     elif direction == b"d":             # <<<<<<<<<<<<<<
 *         if corner == 0:
 *             if xy == 0:
 */
  }
  __pyx_L3:;

  /* "CAComputeParse/CACompute.pyx":2189
 *             return (state + 1) % n_states
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):             # <<<<<<<<<<<<<<
 *     if direction == b"o":
 *         if corner == 0:
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":2271
 *                 return a.first + a.second > b.first + b.second
 * 
 * cpdef set_bounds(int x, int y, string type1):             # <<<<<<<<<<<<<<
 *     global x_bound, y_bound, bound_type
 *     x_bound, y_bound = x, y
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_11set_bounds(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_14CAComputeParse_9CACompute_set_bounds(int __pyx_v_x, int __pyx_v_y, std::string __pyx_v_type1, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_bounds", 0);

  /* "CAComputeParse/CACompute.pyx":2273
 * cpdef set_bounds(int x, int y, string type1):
 *     global x_bound, y_bound, bound_type
 *     x_bound, y_bound = x, y             # <<<<<<<<<<<<<<
 *     bound_type = type1
 * 
 */
  __pyx_t_1 = __pyx_v_x;
  __pyx_t_2 = __pyx_v_y;
  __pyx_v_14CAComputeParse_9CACompute_x_bound = __pyx_t_1;
  __pyx_v_14CAComputeParse_9CACompute_y_bound = __pyx_t_2;

  /* "CAComputeParse/CACompute.pyx":2274
 *     global x_bound, y_bound, bound_type
 *     x_bound, y_bound = x, y
 *     bound_type = type1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_14CAComputeParse_9CACompute_bound_type = __pyx_v_type1;

  /* "CAComputeParse/CACompute.pyx":2271
 *                 return a.first + a.second > b.first + b.second
 * 
 * cpdef set_bounds(int x, int y, string type1):             # <<<<<<<<<<<<<<
 *     global x_bound, y_bound, bound_type
 *     x_bound, y_bound = x, y
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_11set_bounds(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_11set_bounds(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  std::string __pyx_v_type1;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_bounds (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_type1,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_bounds", 1, 3, 3, 1); __PYX_ERR(0, 2271, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_type1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_bounds", 1, 3, 3, 2); __PYX_ERR(0, 2271, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_bounds") < 0)) __PYX_ERR(0, 2271, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_x = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L3_error)
    __pyx_v_type1 = __pyx_convert_string_from_py_std__in_string(values[2]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_bounds", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2271, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("CAComputeParse.CACompute.set_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_10set_bounds(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_type1);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_10set_bounds(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_x, int __pyx_v_y, std::string __pyx_v_type1) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("set_bounds", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_14CAComputeParse_9CACompute_set_bounds(__pyx_v_x, __pyx_v_y, __pyx_v_type1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.set_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CAComputeParse/CACompute.pyx":2277
 * 
 * 
 * cpdef compute(unordered_set[pair[int, int]] cells_changed, unordered_map[pair[int, int], int] dict_grid,             # <<<<<<<<<<<<<<
 *               int generations):
 * 
 */

static PyObject *__pyx_pw_14CAComputeParse_9CACompute_13compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_14CAComputeParse_9CACompute_compute(std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<int>  __pyx_v_neighbours;
  std::unordered_set<std::pair<int,int> >  __pyx_v_cells_to_check;
  CYTHON_UNUSED std::unordered_map<std::pair<int,int> ,std::vector<int> >  __pyx_v_copy_neighbour_cache;
  int __pyx_v_ans;
  std::pair<int,int>  __pyx_v_coordinates;
  std::pair<int,int>  __pyx_v_coordinates2;
  std::pair<int,int>  __pyx_v_neighbour;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_copy_grid;
  std::pair<int,int>  __pyx_v_coor;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::unordered_set<std::pair<int,int> > ::iterator __pyx_t_1;
  std::pair<int,int>  __pyx_t_2;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_3;
  std::vector<std::pair<int,int> >  *__pyx_t_4;
  int __pyx_t_5;
  long __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  std::pair<std::vector<int> ,int>  __pyx_t_16;
  std::pair<std::pair<int,int> ,int>  __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  PyObject *(*__pyx_t_19)(PyObject *);
  __Pyx_RefNannySetupContext("compute", 0);

  /* "CAComputeParse/CACompute.pyx":2283
 * 
 *     cdef vector[int] neighbours
 *     neighbours.reserve(neighbourhood[generations % alternating_period].size() + 1)             # <<<<<<<<<<<<<<
 * 
 *     cdef unordered_set[pair[int, int]] cells_to_check
 */
  if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 2283, __pyx_L1_error)
  }
  __pyx_v_neighbours.reserve(((__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]).size() + 1));

  /* "CAComputeParse/CACompute.pyx":2286
 * 
 *     cdef unordered_set[pair[int, int]] cells_to_check
 *     cdef unordered_map[pair[int, int], vector[int]] copy_neighbour_cache = neighbours_cache             # <<<<<<<<<<<<<<
 * 
 *     cdef int i, j
 */
  __pyx_v_copy_neighbour_cache = __pyx_v_14CAComputeParse_9CACompute_neighbours_cache;

  /* "CAComputeParse/CACompute.pyx":2293
 *     cdef pair[int, int] coordinates, coordinates2
 *     cdef pair[int, int] neighbour
 *     cdef unordered_map[pair[int, int], int] copy_grid = dict_grid             # <<<<<<<<<<<<<<
 * 
 *     for coor in cells_changed:
 */
  __pyx_v_copy_grid = __pyx_v_dict_grid;

  /* "CAComputeParse/CACompute.pyx":2295
 *     cdef unordered_map[pair[int, int], int] copy_grid = dict_grid
 * 
 *     for coor in cells_changed:             # <<<<<<<<<<<<<<
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 */
  __pyx_t_1 = __pyx_v_cells_changed.begin();
  for (;;) {
    if (!(__pyx_t_1 != __pyx_v_cells_changed.end())) break;
    __pyx_t_2 = *__pyx_t_1;
    ++__pyx_t_1;
    __pyx_v_coor = __pyx_t_2;

    /* "CAComputeParse/CACompute.pyx":2296
 * 
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 */
    if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      __PYX_ERR(0, 2296, __pyx_L1_error)
    }
    __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
    __pyx_t_3 = __pyx_t_4->begin();
    for (;;) {
      if (!(__pyx_t_3 != __pyx_t_4->end())) break;
      __pyx_t_2 = *__pyx_t_3;
      ++__pyx_t_3;
      __pyx_v_neighbour = __pyx_t_2;

      /* "CAComputeParse/CACompute.pyx":2297
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first             # <<<<<<<<<<<<<<
 *             coordinates.second = coor.second + neighbour.second
 *             cells_to_check.insert(coordinates)
 */
      __pyx_v_coordinates.first = (__pyx_v_coor.first + __pyx_v_neighbour.first);

      /* "CAComputeParse/CACompute.pyx":2298
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second             # <<<<<<<<<<<<<<
 *             cells_to_check.insert(coordinates)
 * 
 */
      __pyx_v_coordinates.second = (__pyx_v_coor.second + __pyx_v_neighbour.second);

      /* "CAComputeParse/CACompute.pyx":2299
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 *             cells_to_check.insert(coordinates)             # <<<<<<<<<<<<<<
 * 
 *         cells_to_check.insert(coor)
 */
      (void)(__pyx_v_cells_to_check.insert(__pyx_v_coordinates));

      /* "CAComputeParse/CACompute.pyx":2296
 * 
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 */
    }

    /* "CAComputeParse/CACompute.pyx":2301
 *             cells_to_check.insert(coordinates)
 * 
 *         cells_to_check.insert(coor)             # <<<<<<<<<<<<<<
 * 
 *     if alternating_period > 1:
 */
    (void)(__pyx_v_cells_to_check.insert(__pyx_v_coor));

    /* "CAComputeParse/CACompute.pyx":2295
 *     cdef unordered_map[pair[int, int], int] copy_grid = dict_grid
 * 
 *     for coor in cells_changed:             # <<<<<<<<<<<<<<
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 */
  }

  /* "CAComputeParse/CACompute.pyx":2303
 *         cells_to_check.insert(coor)
 * 
 *     if alternating_period > 1:             # <<<<<<<<<<<<<<
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_alternating_period > 1) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":2304
 * 
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:             # <<<<<<<<<<<<<<
 *             cells_changed.clear()
 *     else:
 */
    __pyx_t_6 = (__pyx_v_14CAComputeParse_9CACompute_alternating_period - 1);
    if (unlikely(__pyx_t_6 == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      __PYX_ERR(0, 2304, __pyx_L1_error)
    }
    __pyx_t_5 = ((__Pyx_mod_long(__pyx_v_generations, __pyx_t_6) == 0) != 0);
    if (__pyx_t_5) {

      /* "CAComputeParse/CACompute.pyx":2305
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()             # <<<<<<<<<<<<<<
 *     else:
 *         cells_changed.clear()
 */
      __pyx_v_cells_changed.clear();

      /* "CAComputeParse/CACompute.pyx":2304
 * 
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:             # <<<<<<<<<<<<<<
 *             cells_changed.clear()
 *     else:
 */
    }

    /* "CAComputeParse/CACompute.pyx":2303
 *         cells_to_check.insert(coor)
 * 
 *     if alternating_period > 1:             # <<<<<<<<<<<<<<
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()
 */
    goto __pyx_L7;
  }

  /* "CAComputeParse/CACompute.pyx":2307
 *             cells_changed.clear()
 *     else:
 *         cells_changed.clear()             # <<<<<<<<<<<<<<
 * 
 *     corner = corner_lst[generations % alternating_period]
 */
  /*else*/ {
    __pyx_v_cells_changed.clear();
  }
  __pyx_L7:;

  /* "CAComputeParse/CACompute.pyx":2309
 *         cells_changed.clear()
 * 
 *     corner = corner_lst[generations % alternating_period]             # <<<<<<<<<<<<<<
 *     direction = direction_lst[generations % alternating_period]
 *     xy = xy_lst[generations % alternating_period]
 */
  if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 2309, __pyx_L1_error)
  }
  __pyx_v_14CAComputeParse_9CACompute_corner = (__pyx_v_14CAComputeParse_9CACompute_corner_lst[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);

  /* "CAComputeParse/CACompute.pyx":2310
 * 
 *     corner = corner_lst[generations % alternating_period]
 *     direction = direction_lst[generations % alternating_period]             # <<<<<<<<<<<<<<
 *     xy = xy_lst[generations % alternating_period]
 * 
 */
  if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 2310, __pyx_L1_error)
  }
  __pyx_v_14CAComputeParse_9CACompute_direction = (__pyx_v_14CAComputeParse_9CACompute_direction_lst[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);

  /* "CAComputeParse/CACompute.pyx":2311
 *     corner = corner_lst[generations % alternating_period]
 *     direction = direction_lst[generations % alternating_period]
 *     xy = xy_lst[generations % alternating_period]             # <<<<<<<<<<<<<<
 * 
 *     if corner == -1:
 */
  if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    __PYX_ERR(0, 2311, __pyx_L1_error)
  }
  __pyx_v_14CAComputeParse_9CACompute_xy = (__pyx_v_14CAComputeParse_9CACompute_xy_lst[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);

  /* "CAComputeParse/CACompute.pyx":2313
 *     xy = xy_lst[generations % alternating_period]
 * 
 *     if corner == -1:             # <<<<<<<<<<<<<<
 *         for coordinates in cells_to_check:
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)
 */
  __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_corner == -1L) != 0);
  if (__pyx_t_5) {

    /* "CAComputeParse/CACompute.pyx":2314
 * 
 *     if corner == -1:
 *         for coordinates in cells_to_check:             # <<<<<<<<<<<<<<
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)
 * 
 */
    __pyx_t_1 = __pyx_v_cells_to_check.begin();
    for (;;) {
      if (!(__pyx_t_1 != __pyx_v_cells_to_check.end())) break;
      __pyx_t_2 = *__pyx_t_1;
      ++__pyx_t_1;
      __pyx_v_coordinates = __pyx_t_2;

      /* "CAComputeParse/CACompute.pyx":2315
 *     if corner == -1:
 *         for coordinates in cells_to_check:
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)             # <<<<<<<<<<<<<<
 * 
 *             neighbours.clear()
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_correct_coor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __pyx_convert_pair_to_py_int____int(__pyx_v_coordinates); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_14CAComputeParse_9CACompute_bound_type); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_x_bound); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_y_bound); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = NULL;
      __pyx_t_14 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_14 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[5] = {__pyx_t_13, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12};
        __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2315, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[5] = {__pyx_t_13, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12};
        __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2315, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      } else
      #endif
      {
        __pyx_t_15 = PyTuple_New(4+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        if (__pyx_t_13) {
          __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_13); __pyx_t_13 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_14, __pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_14, __pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_15, 2+__pyx_t_14, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_15, 3+__pyx_t_14, __pyx_t_12);
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_15, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2315, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_2 = __pyx_convert_pair_from_py_int__and_int(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2315, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_v_coordinates = __pyx_t_2;

      /* "CAComputeParse/CACompute.pyx":2317
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)
 * 
 *             neighbours.clear()             # <<<<<<<<<<<<<<
 *             ans = -1
 * 
 */
      __pyx_v_neighbours.clear();

      /* "CAComputeParse/CACompute.pyx":2318
 * 
 *             neighbours.clear()
 *             ans = -1             # <<<<<<<<<<<<<<
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 */
      __pyx_v_ans = -1;

      /* "CAComputeParse/CACompute.pyx":2320
 *             ans = -1
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates) == __pyx_v_copy_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2321
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2321, __pyx_L1_error)
        }
        try {
          __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2321, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2322
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_14CAComputeParse_9CACompute_depends_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2321
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2323
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2323, __pyx_L1_error)
          }
          __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours(0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

          /* "CAComputeParse/CACompute.pyx":2324
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2324, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2324, __pyx_L1_error)
          }
          (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2321
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
          goto __pyx_L13;
        }

        /* "CAComputeParse/CACompute.pyx":2326
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]             # <<<<<<<<<<<<<<
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2326, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2326, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L13:;

        /* "CAComputeParse/CACompute.pyx":2320
 *             ans = -1
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        goto __pyx_L12;
      }

      /* "CAComputeParse/CACompute.pyx":2328
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      /*else*/ {

        /* "CAComputeParse/CACompute.pyx":2329
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2329, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2328
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        try {
          __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2328, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2329
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_14CAComputeParse_9CACompute_depends_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2328
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2331
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2331, __pyx_L1_error)
          }
          __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours((__pyx_v_copy_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

          /* "CAComputeParse/CACompute.pyx":2332
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2332, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2332, __pyx_L1_error)
          }
          (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2328
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
          goto __pyx_L14;
        }

        /* "CAComputeParse/CACompute.pyx":2334
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *             if ans == -1:
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2334, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2334, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L14:;
      }
      __pyx_L12:;

      /* "CAComputeParse/CACompute.pyx":2336
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 */
      __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2338
 *             if ans == -1:
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,
 *                                                                     coordinates.second + neighbour.second),
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2338, __pyx_L1_error)
        }
        __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_3 = __pyx_t_4->begin();
        for (;;) {
          if (!(__pyx_t_3 != __pyx_t_4->end())) break;
          __pyx_t_2 = *__pyx_t_3;
          ++__pyx_t_3;
          __pyx_v_neighbour = __pyx_t_2;

          /* "CAComputeParse/CACompute.pyx":2339
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                                     coordinates.second + neighbour.second),
 *                                                     bound_type, x_bound, y_bound)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_correct_coor); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2339, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);

          /* "CAComputeParse/CACompute.pyx":2340
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,
 *                                                                     coordinates.second + neighbour.second),             # <<<<<<<<<<<<<<
 *                                                     bound_type, x_bound, y_bound)
 * 
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2339, __pyx_L1_error)
          }

          /* "CAComputeParse/CACompute.pyx":2339
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                                     coordinates.second + neighbour.second),
 *                                                     bound_type, x_bound, y_bound)
 */
          __pyx_t_15 = __pyx_convert_pair_to_py_int____int(__pyx_t_2); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2339, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);

          /* "CAComputeParse/CACompute.pyx":2341
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,
 *                                                                     coordinates.second + neighbour.second),
 *                                                     bound_type, x_bound, y_bound)             # <<<<<<<<<<<<<<
 * 
 *                         neighbours_cache.erase(coordinates2)
 */
          __pyx_t_12 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_14CAComputeParse_9CACompute_bound_type); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2341, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_x_bound); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2341, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_y_bound); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2341, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_9 = NULL;
          __pyx_t_14 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
            __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
            if (likely(__pyx_t_9)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
              __Pyx_INCREF(__pyx_t_9);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_8, function);
              __pyx_t_14 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[5] = {__pyx_t_9, __pyx_t_15, __pyx_t_12, __pyx_t_11, __pyx_t_10};
            __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2339, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
            PyObject *__pyx_temp[5] = {__pyx_t_9, __pyx_t_15, __pyx_t_12, __pyx_t_11, __pyx_t_10};
            __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 4+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2339, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(4+__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2339, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_9) {
              __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_9); __pyx_t_9 = NULL;
            }
            __Pyx_GIVEREF(__pyx_t_15);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_14, __pyx_t_15);
            __Pyx_GIVEREF(__pyx_t_12);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_14, __pyx_t_12);
            __Pyx_GIVEREF(__pyx_t_11);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_14, __pyx_t_11);
            __Pyx_GIVEREF(__pyx_t_10);
            PyTuple_SET_ITEM(__pyx_t_13, 3+__pyx_t_14, __pyx_t_10);
            __pyx_t_15 = 0;
            __pyx_t_12 = 0;
            __pyx_t_11 = 0;
            __pyx_t_10 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_13, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2339, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "CAComputeParse/CACompute.pyx":2339
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                                     coordinates.second + neighbour.second),
 *                                                     bound_type, x_bound, y_bound)
 */
          __pyx_t_2 = __pyx_convert_pair_from_py_int__and_int(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2339, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_coordinates2 = __pyx_t_2;

          /* "CAComputeParse/CACompute.pyx":2343
 *                                                     bound_type, x_bound, y_bound)
 * 
 *                         neighbours_cache.erase(coordinates2)             # <<<<<<<<<<<<<<
 * 
 *                         if copy_grid.find(coordinates2) != copy_grid.end():
 */
          (void)(__pyx_v_14CAComputeParse_9CACompute_neighbours_cache.erase(__pyx_v_coordinates2));

          /* "CAComputeParse/CACompute.pyx":2345
 *                         neighbours_cache.erase(coordinates2)
 * 
 *                         if copy_grid.find(coordinates2) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                             neighbours.push_back(copy_grid[coordinates2])
 *                         else:
 */
          __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates2) != __pyx_v_copy_grid.end()) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2346
 * 
 *                         if copy_grid.find(coordinates2) != copy_grid.end():
 *                             neighbours.push_back(copy_grid[coordinates2])             # <<<<<<<<<<<<<<
 *                         else:
 *                             neighbours.push_back(0)
 */
            try {
              __pyx_v_neighbours.push_back((__pyx_v_copy_grid[__pyx_v_coordinates2]));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2346, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2345
 *                         neighbours_cache.erase(coordinates2)
 * 
 *                         if copy_grid.find(coordinates2) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                             neighbours.push_back(copy_grid[coordinates2])
 *                         else:
 */
            goto __pyx_L18;
          }

          /* "CAComputeParse/CACompute.pyx":2348
 *                             neighbours.push_back(copy_grid[coordinates2])
 *                         else:
 *                             neighbours.push_back(0)             # <<<<<<<<<<<<<<
 * 
 *                     neighbours_cache[coordinates] = neighbours
 */
          /*else*/ {
            try {
              __pyx_v_neighbours.push_back(0);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2348, __pyx_L1_error)
            }
          }
          __pyx_L18:;

          /* "CAComputeParse/CACompute.pyx":2338
 *             if ans == -1:
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = correct_coor(pair[int, int] (coordinates.first + neighbour.first,
 *                                                                     coordinates.second + neighbour.second),
 */
        }

        /* "CAComputeParse/CACompute.pyx":2350
 *                             neighbours.push_back(0)
 * 
 *                     neighbours_cache[coordinates] = neighbours             # <<<<<<<<<<<<<<
 *                 else:
 *                     neighbours = copy_neighbour_cache[coordinates]
 */
        (__pyx_v_14CAComputeParse_9CACompute_neighbours_cache[__pyx_v_coordinates]) = __pyx_v_neighbours;

        /* "CAComputeParse/CACompute.pyx":2336
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 if True:
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 */
      }

      /* "CAComputeParse/CACompute.pyx":2354
 *                     neighbours = copy_neighbour_cache[coordinates]
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 */
      __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates) != __pyx_v_copy_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2355
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
        try {
          __pyx_v_neighbours.push_back((__pyx_v_copy_grid[__pyx_v_coordinates]));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2355, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2357
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2357, __pyx_L1_error)
        }
        try {
          __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2357, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2358
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_transition_func_cache.find(__pyx_t_16) == __pyx_v_14CAComputeParse_9CACompute_transition_func_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2356
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2359
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2360
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2360, __pyx_L1_error)
            }
            __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_transition_func(__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

            /* "CAComputeParse/CACompute.pyx":2362
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2362, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2362, __pyx_L1_error)
            }
            (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]) = __pyx_v_ans;

            /* "CAComputeParse/CACompute.pyx":2359
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CAComputeParse/CACompute.pyx":2356
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L20;
        }

        /* "CAComputeParse/CACompute.pyx":2364
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2365
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans == 0:
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2365, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2365, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2364
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]);
          }
        }
        __pyx_L20:;

        /* "CAComputeParse/CACompute.pyx":2367
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans == 0) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2368
 * 
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:
 */
          (void)(__pyx_v_dict_grid.erase(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2369
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2367
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
          goto __pyx_L23;
        }

        /* "CAComputeParse/CACompute.pyx":2370
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != (__pyx_v_copy_grid[__pyx_v_coordinates])) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2371
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *             else:
 */
          (__pyx_v_dict_grid[__pyx_v_coordinates]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2372
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *             else:
 *                 neighbours.push_back(0)
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2370
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        }
        __pyx_L23:;

        /* "CAComputeParse/CACompute.pyx":2354
 *                     neighbours = copy_neighbour_cache[coordinates]
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 */
        goto __pyx_L19;
      }

      /* "CAComputeParse/CACompute.pyx":2374
 *                     cells_changed.insert(coordinates)
 *             else:
 *                 neighbours.push_back(0)             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
      /*else*/ {
        try {
          __pyx_v_neighbours.push_back(0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2374, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2376
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2376, __pyx_L1_error)
        }
        try {
          __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2376, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2377
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_transition_func_cache.find(__pyx_t_16) == __pyx_v_14CAComputeParse_9CACompute_transition_func_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2375
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2378
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2379
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2379, __pyx_L1_error)
            }
            __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_transition_func(__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

            /* "CAComputeParse/CACompute.pyx":2381
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2381, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2381, __pyx_L1_error)
            }
            (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]) = __pyx_v_ans;

            /* "CAComputeParse/CACompute.pyx":2378
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CAComputeParse/CACompute.pyx":2375
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L24;
        }

        /* "CAComputeParse/CACompute.pyx":2383
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2384
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans != 0:
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2384, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2384, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2383
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]);
          }
        }
        __pyx_L24:;

        /* "CAComputeParse/CACompute.pyx":2386
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != 0) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2387
 * 
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *     else:
 */
          try {
            __pyx_t_17 = std::pair<std::pair<int,int> ,int> (__pyx_v_coordinates, __pyx_v_ans);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2387, __pyx_L1_error)
          }
          (void)(__pyx_v_dict_grid.insert(__pyx_t_17));

          /* "CAComputeParse/CACompute.pyx":2388
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *     else:
 *         for coordinates in naive_gen(150, 150, corner, direction, xy):
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2386
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        }
      }
      __pyx_L19:;

      /* "CAComputeParse/CACompute.pyx":2314
 * 
 *     if corner == -1:
 *         for coordinates in cells_to_check:             # <<<<<<<<<<<<<<
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)
 * 
 */
    }

    /* "CAComputeParse/CACompute.pyx":2313
 *     xy = xy_lst[generations % alternating_period]
 * 
 *     if corner == -1:             # <<<<<<<<<<<<<<
 *         for coordinates in cells_to_check:
 *             coordinates = correct_coor(coordinates, bound_type, x_bound, y_bound)
 */
    goto __pyx_L9;
  }

  /* "CAComputeParse/CACompute.pyx":2390
 *                     cells_changed.insert(coordinates)
 *     else:
 *         for coordinates in naive_gen(150, 150, corner, direction, xy):             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_naive_gen); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_corner); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_10 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_14CAComputeParse_9CACompute_direction); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_14CAComputeParse_9CACompute_xy); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = NULL;
    __pyx_t_14 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_14 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[6] = {__pyx_t_12, __pyx_int_150, __pyx_int_150, __pyx_t_13, __pyx_t_10, __pyx_t_11};
      __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 5+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
      PyObject *__pyx_temp[6] = {__pyx_t_12, __pyx_int_150, __pyx_int_150, __pyx_t_13, __pyx_t_10, __pyx_t_11};
      __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_14, 5+__pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    } else
    #endif
    {
      __pyx_t_15 = PyTuple_New(5+__pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      if (__pyx_t_12) {
        __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_12); __pyx_t_12 = NULL;
      }
      __Pyx_INCREF(__pyx_int_150);
      __Pyx_GIVEREF(__pyx_int_150);
      PyTuple_SET_ITEM(__pyx_t_15, 0+__pyx_t_14, __pyx_int_150);
      __Pyx_INCREF(__pyx_int_150);
      __Pyx_GIVEREF(__pyx_int_150);
      PyTuple_SET_ITEM(__pyx_t_15, 1+__pyx_t_14, __pyx_int_150);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_15, 2+__pyx_t_14, __pyx_t_13);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_15, 3+__pyx_t_14, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_15, 4+__pyx_t_14, __pyx_t_11);
      __pyx_t_13 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_15, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
      __pyx_t_8 = __pyx_t_7; __Pyx_INCREF(__pyx_t_8); __pyx_t_18 = 0;
      __pyx_t_19 = NULL;
    } else {
      __pyx_t_18 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_19 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 2390, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    for (;;) {
      if (likely(!__pyx_t_19)) {
        if (likely(PyList_CheckExact(__pyx_t_8))) {
          if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_7 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_18); __Pyx_INCREF(__pyx_t_7); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 2390, __pyx_L1_error)
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2390, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          #endif
        } else {
          if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_18); __Pyx_INCREF(__pyx_t_7); __pyx_t_18++; if (unlikely(0 < 0)) __PYX_ERR(0, 2390, __pyx_L1_error)
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_8, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2390, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          #endif
        }
      } else {
        __pyx_t_7 = __pyx_t_19(__pyx_t_8);
        if (unlikely(!__pyx_t_7)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2390, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_7);
      }
      __pyx_t_2 = __pyx_convert_pair_from_py_int__and_int(__pyx_t_7); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2390, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_v_coordinates = __pyx_t_2;

      /* "CAComputeParse/CACompute.pyx":2391
 *     else:
 *         for coordinates in naive_gen(150, 150, corner, direction, xy):
 *             neighbours.clear()             # <<<<<<<<<<<<<<
 *             ans = -1
 * 
 */
      __pyx_v_neighbours.clear();

      /* "CAComputeParse/CACompute.pyx":2392
 *         for coordinates in naive_gen(150, 150, corner, direction, xy):
 *             neighbours.clear()
 *             ans = -1             # <<<<<<<<<<<<<<
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 */
      __pyx_v_ans = -1;

      /* "CAComputeParse/CACompute.pyx":2394
 *             ans = -1
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates) == __pyx_v_dict_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2395
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2395, __pyx_L1_error)
        }
        try {
          __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2395, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2396
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_14CAComputeParse_9CACompute_depends_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2395
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2397
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2397, __pyx_L1_error)
          }
          __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours(0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

          /* "CAComputeParse/CACompute.pyx":2398
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2398, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2398, __pyx_L1_error)
          }
          (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2395
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
          goto __pyx_L31;
        }

        /* "CAComputeParse/CACompute.pyx":2400
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]             # <<<<<<<<<<<<<<
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2400, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> (0, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2400, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L31:;

        /* "CAComputeParse/CACompute.pyx":2394
 *             ans = -1
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        goto __pyx_L30;
      }

      /* "CAComputeParse/CACompute.pyx":2402
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      /*else*/ {

        /* "CAComputeParse/CACompute.pyx":2403
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2403, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2402
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        try {
          __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2402, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2403
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_14CAComputeParse_9CACompute_depends_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2402
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2405
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2405, __pyx_L1_error)
          }
          __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_depend_on_neighbours((__pyx_v_dict_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

          /* "CAComputeParse/CACompute.pyx":2406
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2406, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2406, __pyx_L1_error)
          }
          (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2402
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
          goto __pyx_L32;
        }

        /* "CAComputeParse/CACompute.pyx":2408
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *             if ans == -1:
 */
        /*else*/ {
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2408, __pyx_L1_error)
          }
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2408, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L32:;
      }
      __pyx_L30:;

      /* "CAComputeParse/CACompute.pyx":2410
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2411
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2411, __pyx_L1_error)
        }
        __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
        __pyx_t_3 = __pyx_t_4->begin();
        for (;;) {
          if (!(__pyx_t_3 != __pyx_t_4->end())) break;
          __pyx_t_2 = *__pyx_t_3;
          ++__pyx_t_3;
          __pyx_v_neighbour = __pyx_t_2;

          /* "CAComputeParse/CACompute.pyx":2412
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2412, __pyx_L1_error)
          }
          __pyx_v_coordinates2 = __pyx_t_2;

          /* "CAComputeParse/CACompute.pyx":2414
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 */
          __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates2) != __pyx_v_dict_grid.end()) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2415
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():
 *                         neighbours.push_back(dict_grid[coordinates2])             # <<<<<<<<<<<<<<
 *                     else:
 *                         neighbours.push_back(0)
 */
            try {
              __pyx_v_neighbours.push_back((__pyx_v_dict_grid[__pyx_v_coordinates2]));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2415, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2414
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 */
            goto __pyx_L36;
          }

          /* "CAComputeParse/CACompute.pyx":2417
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 *                         neighbours.push_back(0)             # <<<<<<<<<<<<<<
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():
 */
          /*else*/ {
            try {
              __pyx_v_neighbours.push_back(0);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2417, __pyx_L1_error)
            }
          }
          __pyx_L36:;

          /* "CAComputeParse/CACompute.pyx":2411
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        }

        /* "CAComputeParse/CACompute.pyx":2410
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      }

      /* "CAComputeParse/CACompute.pyx":2419
 *                         neighbours.push_back(0)
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 */
      __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates) != __pyx_v_dict_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CAComputeParse/CACompute.pyx":2420
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
        try {
          __pyx_v_neighbours.push_back((__pyx_v_dict_grid[__pyx_v_coordinates]));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2420, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2422
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2422, __pyx_L1_error)
        }
        try {
          __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2422, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2423
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_transition_func_cache.find(__pyx_t_16) == __pyx_v_14CAComputeParse_9CACompute_transition_func_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2421
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2424
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2425
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2425, __pyx_L1_error)
            }
            __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_transition_func(__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

            /* "CAComputeParse/CACompute.pyx":2427
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2427, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2427, __pyx_L1_error)
            }
            (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]) = __pyx_v_ans;

            /* "CAComputeParse/CACompute.pyx":2424
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CAComputeParse/CACompute.pyx":2421
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L38;
        }

        /* "CAComputeParse/CACompute.pyx":2429
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2430
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans == 0:
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2430, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2430, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2429
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]);
          }
        }
        __pyx_L38:;

        /* "CAComputeParse/CACompute.pyx":2432
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans == 0) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2433
 * 
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 */
          (void)(__pyx_v_dict_grid.erase(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2434
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2435
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2435, __pyx_L1_error)
          }
          __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
          __pyx_t_3 = __pyx_t_4->begin();
          for (;;) {
            if (!(__pyx_t_3 != __pyx_t_4->end())) break;
            __pyx_t_2 = *__pyx_t_3;
            ++__pyx_t_3;
            __pyx_v_neighbour = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2436
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)
 */
            try {
              __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2436, __pyx_L1_error)
            }
            __pyx_v_coordinates2 = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2438
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)             # <<<<<<<<<<<<<<
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 */
            (void)(__pyx_v_cells_to_check.insert(__pyx_v_coordinates2));

            /* "CAComputeParse/CACompute.pyx":2435
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          }

          /* "CAComputeParse/CACompute.pyx":2432
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
          goto __pyx_L41;
        }

        /* "CAComputeParse/CACompute.pyx":2439
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)
 *                 elif ans != dict_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != (__pyx_v_dict_grid[__pyx_v_coordinates])) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2440
 *                         cells_to_check.insert(coordinates2)
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 */
          (__pyx_v_dict_grid[__pyx_v_coordinates]) = __pyx_v_ans;

          /* "CAComputeParse/CACompute.pyx":2441
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2442
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2442, __pyx_L1_error)
          }
          __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
          __pyx_t_3 = __pyx_t_4->begin();
          for (;;) {
            if (!(__pyx_t_3 != __pyx_t_4->end())) break;
            __pyx_t_2 = *__pyx_t_3;
            ++__pyx_t_3;
            __pyx_v_neighbour = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2443
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)
 */
            try {
              __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2443, __pyx_L1_error)
            }
            __pyx_v_coordinates2 = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2445
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)             # <<<<<<<<<<<<<<
 *             else:
 *                 neighbours.push_back(0)
 */
            (void)(__pyx_v_cells_to_check.insert(__pyx_v_coordinates2));

            /* "CAComputeParse/CACompute.pyx":2442
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          }

          /* "CAComputeParse/CACompute.pyx":2439
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)
 *                 elif ans != dict_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        }
        __pyx_L41:;

        /* "CAComputeParse/CACompute.pyx":2419
 *                         neighbours.push_back(0)
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 */
        goto __pyx_L37;
      }

      /* "CAComputeParse/CACompute.pyx":2447
 *                         cells_to_check.insert(coordinates2)
 *             else:
 *                 neighbours.push_back(0)             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
      /*else*/ {
        try {
          __pyx_v_neighbours.push_back(0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2447, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2449
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2449, __pyx_L1_error)
        }
        try {
          __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2449, __pyx_L1_error)
        }

        /* "CAComputeParse/CACompute.pyx":2450
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_14CAComputeParse_9CACompute_transition_func_cache.find(__pyx_t_16) == __pyx_v_14CAComputeParse_9CACompute_transition_func_cache.end()) != 0);

        /* "CAComputeParse/CACompute.pyx":2448
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2451
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2452
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2452, __pyx_L1_error)
            }
            __pyx_v_ans = __pyx_f_14CAComputeParse_9CACompute_transition_func(__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));

            /* "CAComputeParse/CACompute.pyx":2454
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2454, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2454, __pyx_L1_error)
            }
            (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]) = __pyx_v_ans;

            /* "CAComputeParse/CACompute.pyx":2451
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CAComputeParse/CACompute.pyx":2448
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L46;
        }

        /* "CAComputeParse/CACompute.pyx":2456
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CAComputeParse/CACompute.pyx":2457
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans != 0:
 */
            if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
              PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
              __PYX_ERR(0, 2457, __pyx_L1_error)
            }
            try {
              __pyx_t_16 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, __Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2457, __pyx_L1_error)
            }

            /* "CAComputeParse/CACompute.pyx":2456
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_14CAComputeParse_9CACompute_transition_func_cache[__pyx_t_16]);
          }
        }
        __pyx_L46:;

        /* "CAComputeParse/CACompute.pyx":2459
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != 0) != 0);
        if (__pyx_t_5) {

          /* "CAComputeParse/CACompute.pyx":2460
 * 
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 */
          try {
            __pyx_t_17 = std::pair<std::pair<int,int> ,int> (__pyx_v_coordinates, __pyx_v_ans);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 2460, __pyx_L1_error)
          }
          (void)(__pyx_v_dict_grid.insert(__pyx_t_17));

          /* "CAComputeParse/CACompute.pyx":2461
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CAComputeParse/CACompute.pyx":2462
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          if (unlikely(__pyx_v_14CAComputeParse_9CACompute_alternating_period == 0)) {
            PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
            __PYX_ERR(0, 2462, __pyx_L1_error)
          }
          __pyx_t_4 = &(__pyx_v_14CAComputeParse_9CACompute_neighbourhood[__Pyx_mod_int(__pyx_v_generations, __pyx_v_14CAComputeParse_9CACompute_alternating_period)]);
          __pyx_t_3 = __pyx_t_4->begin();
          for (;;) {
            if (!(__pyx_t_3 != __pyx_t_4->end())) break;
            __pyx_t_2 = *__pyx_t_3;
            ++__pyx_t_3;
            __pyx_v_neighbour = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2463
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)
 */
            try {
              __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 2463, __pyx_L1_error)
            }
            __pyx_v_coordinates2 = __pyx_t_2;

            /* "CAComputeParse/CACompute.pyx":2465
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 *                         cells_to_check.insert(coordinates2)             # <<<<<<<<<<<<<<
 * 
 *     return cells_changed, dict_grid
 */
            (void)(__pyx_v_cells_to_check.insert(__pyx_v_coordinates2));

            /* "CAComputeParse/CACompute.pyx":2462
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 *                     for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                         coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                        coordinates.second + neighbour.second)
 */
          }

          /* "CAComputeParse/CACompute.pyx":2459
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        }
      }
      __pyx_L37:;

      /* "CAComputeParse/CACompute.pyx":2390
 *                     cells_changed.insert(coordinates)
 *     else:
 *         for coordinates in naive_gen(150, 150, corner, direction, xy):             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __pyx_L9:;

  /* "CAComputeParse/CACompute.pyx":2467
 *                         cells_to_check.insert(coordinates2)
 * 
 *     return cells_changed, dict_grid             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_8 = __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_v_cells_changed); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(__pyx_v_dict_grid); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_15 = PyTuple_New(2); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_7);
  __pyx_t_8 = 0;
  __pyx_t_7 = 0;
  __pyx_r = __pyx_t_15;
  __pyx_t_15 = 0;
  goto __pyx_L0;

  /* "CAComputeParse/CACompute.pyx":2277
 * 
 * 
 * cpdef compute(unordered_set[pair[int, int]] cells_changed, unordered_map[pair[int, int], int] dict_grid,             # <<<<<<<<<<<<<<
 *               int generations):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("CAComputeParse.CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_13compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_14CAComputeParse_9CACompute_13compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid;
  int __pyx_v_generations;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cells_changed,&__pyx_n_s_dict_grid,&__pyx_n_s_generations,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cells_changed)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dict_grid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 3, 3, 1); __PYX_ERR(0, 2277, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_generations)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 3, 3, 2); __PYX_ERR(0, 2277, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute") < 0)) __PYX_ERR(0, 2277, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_cells_changed = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2277, __pyx_L3_error)
    __pyx_v_dict_grid = __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2277, __pyx_L3_error)
    __pyx_v_generations = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_generations == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2278, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2277, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("CAComputeParse.CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_14CAComputeParse_9CACompute_12compute(__pyx_self, __pyx_v_cells_changed, __pyx_v_dict_grid, __pyx_v_generations);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_14CAComputeParse_9CACompute_12compute(CYTHON_UNUSED PyObject *__pyx_self, std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("compute", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_14CAComputeParse_9CACompute_compute(__pyx_v_cells_changed, __pyx_v_dict_grid, __pyx_v_generations, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CAComputeParse.CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)NULL))) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.from_py":145
 * 
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)
 */

static std::pair<int,int>  __pyx_convert_pair_from_py_int__and_int(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  std::pair<int,int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_from_py_int__and_int", 0);

  /* "pair.from_py":146
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:
 *     x, y = o             # <<<<<<<<<<<<<<
 *     return pair[X,Y](<X>x, <Y>y)
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_o))) || (PyList_CheckExact(__pyx_v_o))) {
    PyObject* sequence = __pyx_v_o;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(1, 146, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_3 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_4(__pyx_t_3), 2) < 0) __PYX_ERR(1, 146, __pyx_L1_error)
    __pyx_t_4 = NULL;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(1, 146, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pair.from_py":147
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_x); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 147, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_v_y); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 147, __pyx_L1_error)
  __pyx_r = std::pair<int,int> (((int)__pyx_t_5), ((int)__pyx_t_6));
  goto __pyx_L0;

  /* "pair.from_py":145
 * 
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.from_py.__pyx_convert_pair_from_py_int__and_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "set.from_py":108
 * 
 * @cname("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef set[X] s
 *     for item in o:
 */

static std::unordered_set<std::pair<int,int> >  __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *__pyx_v_o) {
  std::unordered_set<std::pair<int,int> >  __pyx_v_s;
  PyObject *__pyx_v_item = NULL;
  std::unordered_set<std::pair<int,int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::pair<int,int>  __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "set.from_py":110
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef set[X] s
 *     for item in o:             # <<<<<<<<<<<<<<
 *         s.insert(<X>item)
 *     return s
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 110, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 110, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 110, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 110, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 110, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 110, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "set.from_py":111
 *     cdef set[X] s
 *     for item in o:
 *         s.insert(<X>item)             # <<<<<<<<<<<<<<
 *     return s
 * 
 */
    __pyx_t_5 = __pyx_convert_pair_from_py_int__and_int(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 111, __pyx_L1_error)
    __pyx_v_s.insert(((std::pair<int,int> )__pyx_t_5));

    /* "set.from_py":110
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef set[X] s
 *     for item in o:             # <<<<<<<<<<<<<<
 *         s.insert(<X>item)
 *     return s
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "set.from_py":112
 *     for item in o:
 *         s.insert(<X>item)
 *     return s             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "set.from_py":108
 * 
 * @cname("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef set[X] s
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("set.from_py.__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "map.from_py":174
 * 
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef dict d = o
 *     cdef map[X,Y] m
 */

static std::unordered_map<std::pair<int,int> ,int>  __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_d = 0;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_m;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  std::pair<int,int>  __pyx_t_8;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int", 0);

  /* "map.from_py":175
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:
 *     cdef dict d = o             # <<<<<<<<<<<<<<
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_o))||((__pyx_v_o) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_o)->tp_name), 0))) __PYX_ERR(1, 175, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_o;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_d = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "map.from_py":177
 *     cdef dict d = o
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():             # <<<<<<<<<<<<<<
 *         m.insert(pair[X,Y](<X>key, <Y>value))
 *     return m
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_d == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "iteritems");
    __PYX_ERR(1, 177, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_d, 1, __pyx_n_s_iteritems, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(1, 177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "map.from_py":178
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():
 *         m.insert(pair[X,Y](<X>key, <Y>value))             # <<<<<<<<<<<<<<
 *     return m
 * 
 */
    __pyx_t_8 = __pyx_convert_pair_from_py_int__and_int(__pyx_v_key); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 178, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 178, __pyx_L1_error)
    __pyx_v_m.insert(std::pair<std::pair<int,int> ,int> (((std::pair<int,int> )__pyx_t_8), ((int)__pyx_t_7)));
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "map.from_py":179
 *     for key, value in d.iteritems():
 *         m.insert(pair[X,Y](<X>key, <Y>value))
 *     return m             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_m;
  goto __pyx_L0;

  /* "map.from_py":174
 * 
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef dict d = o
 *     cdef map[X,Y] m
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("map.from_py.__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_string")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<std::string>  __pyx_convert_vector_from_py_std_3a__3a_string(PyObject *__pyx_v_o) {
  std::vector<std::string>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::string>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_string", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_string_from_py_std__in_string(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::string)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_string")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.to_py":158
 * 
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return p.first, p.second
 * 
 */

static PyObject *__pyx_convert_pair_to_py_int____int(std::pair<int,int>  const &__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_to_py_int____int", 0);

  /* "pair.to_py":159
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):
 *     return p.first, p.second             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pair.to_py":158
 * 
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return p.first, p.second
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.to_py.__pyx_convert_pair_to_py_int____int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const std::vector<std::pair<int,int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_pair_to_py_int____int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<std::pair<int,int> >  __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *__pyx_v_o) {
  std::vector<std::pair<int,int> >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::pair<int,int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::pair<int,int>  __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_pair_from_py_int__and_int(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::pair<int,int> )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<std::vector<std::pair<int,int> > >  __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(PyObject *__pyx_v_o) {
  std::vector<std::vector<std::pair<int,int> > >  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::vector<std::pair<int,int> > >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::vector<std::pair<int,int> >  __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_vector_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::vector<std::pair<int,int> > )__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_vector_3c_std_3a__3a_pair_3c_int_2c_int_3e____3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_int")
 * cdef object __pyx_convert_unordered_set_to_py_int(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

static PyObject *__pyx_convert_unordered_set_to_py_int(std::unordered_set<int>  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::unordered_set<int> ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_set_to_py_int", 0);

  /* "set.to_py":130
 * @cname("__pyx_convert_unordered_set_to_py_int")
 * cdef object __pyx_convert_unordered_set_to_py_int(const cpp_set[X]& s):
 *     o = set()             # <<<<<<<<<<<<<<
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "set.to_py":131
 * cdef object __pyx_convert_unordered_set_to_py_int(const cpp_set[X]& s):
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "set.to_py":132
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_iter != __pyx_v_s.end()) != 0);
    if (!__pyx_t_2) break;

    /* "set.to_py":133
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = __Pyx_PyInt_From_int((*__pyx_v_iter)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PySet_Add(__pyx_v_o, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "set.to_py":134
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "set.to_py":135
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_int")
 * cdef object __pyx_convert_unordered_set_to_py_int(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("set.to_py.__pyx_convert_unordered_set_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(const std::vector<std::unordered_set<int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_unordered_set_to_py_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_unordered_set_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

static PyObject *__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(std::unordered_set<std::pair<int,int> >  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::unordered_set<std::pair<int,int> > ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "set.to_py":130
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):
 *     o = set()             # <<<<<<<<<<<<<<
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "set.to_py":131
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "set.to_py":132
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_iter != __pyx_v_s.end()) != 0);
    if (!__pyx_t_2) break;

    /* "set.to_py":133
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = __pyx_convert_pair_to_py_int____int((*__pyx_v_iter)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PySet_Add(__pyx_v_o, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "set.to_py":134
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "set.to_py":135
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("set.to_py.__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

static PyObject *__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(std::unordered_map<std::pair<int,int> ,int>  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::unordered_map<std::pair<int,int> ,int> ::value_type const *__pyx_v_key_value;
  std::unordered_map<std::pair<int,int> ,int> ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int", 0);

  /* "map.to_py":202
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):
 *     o = {}             # <<<<<<<<<<<<<<
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "map.to_py":204
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "map.to_py":205
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_iter != __pyx_v_s.end()) != 0);
    if (!__pyx_t_2) break;

    /* "map.to_py":206
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)             # <<<<<<<<<<<<<<
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 */
    __pyx_v_key_value = (&(*__pyx_v_iter));

    /* "map.to_py":207
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_key_value->second); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __pyx_convert_pair_to_py_int____int(__pyx_v_key_value->first); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(PyDict_SetItem(__pyx_v_o, __pyx_t_3, __pyx_t_1) < 0)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "map.to_py":208
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "map.to_py":209
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("map.to_py.__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {"load", (PyCFunction)__pyx_pw_14CAComputeParse_9CACompute_1load, METH_O, 0},
  {"get_neighbourhood", (PyCFunction)__pyx_pw_14CAComputeParse_9CACompute_3get_neighbourhood, METH_O, 0},
  {"get_n_states", (PyCFunction)__pyx_pw_14CAComputeParse_9CACompute_5get_n_states, METH_NOARGS, 0},
  {"get_colour_palette", (PyCFunction)__pyx_pw_14CAComputeParse_9CACompute_7get_colour_palette, METH_NOARGS, 0},
  {"get_rule_name", (PyCFunction)__pyx_pw_14CAComputeParse_9CACompute_9get_rule_name, METH_NOARGS, 0},
  {"set_bounds", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_14CAComputeParse_9CACompute_11set_bounds, METH_VARARGS|METH_KEYWORDS, 0},
  {"compute", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_14CAComputeParse_9CACompute_13compute, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_CACompute(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_CACompute},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "CACompute",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_b_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 0, 0},
  {&__pyx_kp_b_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 0, 0},
  {&__pyx_kp_b_B_S_Conditions_2, __pyx_k_B_S_Conditions_2, sizeof(__pyx_k_B_S_Conditions_2), 0, 0, 0, 0},
  {&__pyx_n_s_CAComputeParse_BMS, __pyx_k_CAComputeParse_BMS, sizeof(__pyx_k_CAComputeParse_BMS), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_Bounds, __pyx_k_CAComputeParse_Bounds, sizeof(__pyx_k_CAComputeParse_Bounds), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_Naive_Generate, __pyx_k_CAComputeParse_Naive_Generate, sizeof(__pyx_k_CAComputeParse_Naive_Generate), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_R1_INT_Moore, __pyx_k_CAComputeParse_R1_INT_Moore, sizeof(__pyx_k_CAComputeParse_R1_INT_Moore), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_R2_INT_Cross, __pyx_k_CAComputeParse_R2_INT_Cross, sizeof(__pyx_k_CAComputeParse_R2_INT_Cross), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_R2_INT_FarCorners, __pyx_k_CAComputeParse_R2_INT_FarCorners, sizeof(__pyx_k_CAComputeParse_R2_INT_FarCorners), 0, 0, 1, 1},
  {&__pyx_n_s_CAComputeParse_R2_INT_Von_Neuman, __pyx_k_CAComputeParse_R2_INT_Von_Neuman, sizeof(__pyx_k_CAComputeParse_R2_INT_Von_Neuman), 0, 0, 1, 1},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_kp_b_Name_2, __pyx_k_Name_2, sizeof(__pyx_k_Name_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Neighbourhood_Range_2, __pyx_k_Neighbourhood_Range_2, sizeof(__pyx_k_Neighbourhood_Range_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Outer_Totalistic, __pyx_k_Outer_Totalistic, sizeof(__pyx_k_Outer_Totalistic), 0, 0, 0, 0},
  {&__pyx_kp_b_Rulespace_2, __pyx_k_Rulespace_2, sizeof(__pyx_k_Rulespace_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Rulestring_2, __pyx_k_Rulestring_2, sizeof(__pyx_k_Rulestring_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Single_State, __pyx_k_Single_State, sizeof(__pyx_k_Single_State), 0, 0, 0, 0},
  {&__pyx_kp_b_State_Weights_2, __pyx_k_State_Weights_2, sizeof(__pyx_k_State_Weights_2), 0, 0, 0, 0},
  {&__pyx_kp_b__2, __pyx_k__2, sizeof(__pyx_k__2), 0, 0, 0, 0},
  {&__pyx_kp_b__29, __pyx_k__29, sizeof(__pyx_k__29), 0, 0, 0, 0},
  {&__pyx_kp_b__30, __pyx_k__30, sizeof(__pyx_k__30), 0, 0, 0, 0},
  {&__pyx_kp_b__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 0, 0, 0},
  {&__pyx_kp_b__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 0, 0, 0},
  {&__pyx_kp_s__34, __pyx_k__34, sizeof(__pyx_k__34), 0, 0, 1, 0},
  {&__pyx_kp_b__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 0, 0},
  {&__pyx_kp_b__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 0, 0},
  {&__pyx_kp_b__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 0, 0, 0},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_kp_b_b_s_d_nn, __pyx_k_b_s_d_nn, sizeof(__pyx_k_b_s_d_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_f_k_l_nn, __pyx_k_b_s_f_k_l_nn, sizeof(__pyx_k_b_s_f_k_l_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_m_nn, __pyx_k_b_s_m_nn, sizeof(__pyx_k_b_s_m_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_nn, __pyx_k_b_s_nn, sizeof(__pyx_k_b_s_nn), 0, 0, 0, 0},
  {&__pyx_n_s_birth_trans, __pyx_k_birth_trans, sizeof(__pyx_k_birth_trans), 0, 0, 1, 1},
  {&__pyx_n_s_bms_parse, __pyx_k_bms_parse, sizeof(__pyx_k_bms_parse), 0, 0, 1, 1},
  {&__pyx_kp_b_bsd, __pyx_k_bsd, sizeof(__pyx_k_bsd), 0, 0, 0, 0},
  {&__pyx_n_s_cells_changed, __pyx_k_cells_changed, sizeof(__pyx_k_cells_changed), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_correct_coor, __pyx_k_correct_coor, sizeof(__pyx_k_correct_coor), 0, 0, 1, 1},
  {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
  {&__pyx_n_s_dict_grid, __pyx_k_dict_grid, sizeof(__pyx_k_dict_grid), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_find, __pyx_k_find, sizeof(__pyx_k_find), 0, 0, 1, 1},
  {&__pyx_n_s_findall, __pyx_k_findall, sizeof(__pyx_k_findall), 0, 0, 1, 1},
  {&__pyx_n_s_forcing_trans, __pyx_k_forcing_trans, sizeof(__pyx_k_forcing_trans), 0, 0, 1, 1},
  {&__pyx_n_s_generations, __pyx_k_generations, sizeof(__pyx_k_generations), 0, 0, 1, 1},
  {&__pyx_n_s_get_trans_cross, __pyx_k_get_trans_cross, sizeof(__pyx_k_get_trans_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_trans_far, __pyx_k_get_trans_far, sizeof(__pyx_k_get_trans_far), 0, 0, 1, 1},
  {&__pyx_n_s_get_trans_moore, __pyx_k_get_trans_moore, sizeof(__pyx_k_get_trans_moore), 0, 0, 1, 1},
  {&__pyx_n_s_get_trans_von_neumann, __pyx_k_get_trans_von_neumann, sizeof(__pyx_k_get_trans_von_neumann), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_iteritems, __pyx_k_iteritems, sizeof(__pyx_k_iteritems), 0, 0, 1, 1},
  {&__pyx_n_s_killing_trans, __pyx_k_killing_trans, sizeof(__pyx_k_killing_trans), 0, 0, 1, 1},
  {&__pyx_n_s_living_trans, __pyx_k_living_trans, sizeof(__pyx_k_living_trans), 0, 0, 1, 1},
  {&__pyx_kp_s_log_log, __pyx_k_log_log, sizeof(__pyx_k_log_log), 0, 0, 1, 0},
  {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_naive_gen, __pyx_k_naive_gen, sizeof(__pyx_k_naive_gen), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_b_o, __pyx_k_o, sizeof(__pyx_k_o), 0, 0, 0, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_regen_birth_trans, __pyx_k_regen_birth_trans, sizeof(__pyx_k_regen_birth_trans), 0, 0, 1, 1},
  {&__pyx_n_s_regen_survival_trans, __pyx_k_regen_survival_trans, sizeof(__pyx_k_regen_survival_trans), 0, 0, 1, 1},
  {&__pyx_n_s_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 0, 1, 1},
  {&__pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_k_rg_l_b_s_rb_rs_nn, sizeof(__pyx_k_rg_l_b_s_rb_rs_nn), 0, 0, 0, 0},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_sub, __pyx_k_sub, sizeof(__pyx_k_sub), 0, 0, 1, 1},
  {&__pyx_n_s_survival_trans, __pyx_k_survival_trans, sizeof(__pyx_k_survival_trans), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_type1, __pyx_k_type1, sizeof(__pyx_k_type1), 0, 0, 1, 1},
  {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(0, 144, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 204, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 278, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "CAComputeParse/CACompute.pyx":183
 * 
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_kp_b_Name_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "CAComputeParse/CACompute.pyx":185
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))             # <<<<<<<<<<<<<<
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 */
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_kp_b_Neighbourhood_Range_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "CAComputeParse/CACompute.pyx":187
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_kp_b_State_Weights_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "CAComputeParse/CACompute.pyx":194
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_kp_b_Rulespace_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "CAComputeParse/CACompute.pyx":196
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_kp_b_B_S_Conditions_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "CAComputeParse/CACompute.pyx":198
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")             # <<<<<<<<<<<<<<
 * 
 *     alternating_period = state_weights.size()
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_kp_b_Rulestring_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "CAComputeParse/CACompute.pyx":241
 * 
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 */
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_neg_1); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_0); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_1); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "CAComputeParse/CACompute.pyx":242
 *     if bsconditions == b"Range 1 Moore Isotropic Non-Totalistic":
 *         neighbourhood = [[(1, -1), (1, 0), (1, 1), (0, 1),
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_int_neg_1, __pyx_int_1); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);
  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_int_neg_1, __pyx_int_0); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_int_neg_1, __pyx_int_neg_1); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);
  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_neg_1); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "CAComputeParse/CACompute.pyx":244
 *                           (-1, 1), (-1, 0), (-1, -1), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Cross Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, 0), (0, 2), (-2, 0), (0, -2),             # <<<<<<<<<<<<<<
 *                           (1, 0), (0, 1), (-1, 0), (0, -1)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Von Neumann Isotropic Non-Totalistic":
 */
  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_int_2, __pyx_int_0); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_2); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_int_neg_2, __pyx_int_0); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_neg_2); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "CAComputeParse/CACompute.pyx":251
 *                           (2, 0), (0, 2), (-2, 0), (0, -2)] for x in range(alternating_period)]
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),             # <<<<<<<<<<<<<<
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]
 * 
 */
  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_int_2, __pyx_int_neg_2); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_int_2, __pyx_int_2); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "CAComputeParse/CACompute.pyx":252
 *     elif bsconditions == b"Range 2 Far Corners Isotropic Non-Totalistic":
 *         neighbourhood = [[(2, -2), (1, 0), (2, 2), (0, 1),
 *                           (-2, 2), (-1, 0), (-2, -2), (0, -1)] for x in range(alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *     for individual_rule_string in rule_string:
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_int_neg_2, __pyx_int_2); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_int_neg_2, __pyx_int_neg_2); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "CAComputeParse/CACompute.pyx":1228
 *             activity_list.push_back(set_temp)
 * 
 *             file = open("log.log", "w")             # <<<<<<<<<<<<<<
 *             file.write(str(activity_list) + " " + str(extended))
 *             file.close()
 */
  __pyx_tuple__33 = PyTuple_Pack(2, __pyx_kp_s_log_log, __pyx_n_s_w); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "CAComputeParse/CACompute.pyx":1667
 *         if x != b"-1":
 *             corner_lst.push_back(int(x.decode("utf-8")[0]))
 *             direction_lst.push_back(str(x.decode("utf-8")[1:-1]).encode("utf-8"))             # <<<<<<<<<<<<<<
 *             xy_lst.push_back(int(x.decode("utf-8")[-1]))
 *         else:
 */
  __pyx_slice__35 = PySlice_New(__pyx_int_1, __pyx_int_neg_1, Py_None); if (unlikely(!__pyx_slice__35)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__35);
  __Pyx_GIVEREF(__pyx_slice__35);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_48 = PyInt_FromLong(48); if (unlikely(!__pyx_int_48)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_150 = PyInt_FromLong(150); if (unlikely(!__pyx_int_150)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_2 = PyInt_FromLong(-2); if (unlikely(!__pyx_int_neg_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initCACompute(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initCACompute(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_CACompute(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_CACompute(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_CACompute(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'CACompute' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_CACompute(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("CACompute", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_CAComputeParse__CACompute) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "CAComputeParse.CACompute")) {
      if (unlikely(PyDict_SetItemString(modules, "CAComputeParse.CACompute", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "CAComputeParse/CACompute.pyx":3
 * # distutils: language=c++
 * 
 * import re             # <<<<<<<<<<<<<<
 * from libcpp.vector cimport vector
 * from libcpp.pair cimport pair
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_re, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_re, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "CAComputeParse/CACompute.pyx":12
 * from libcpp.unordered_set cimport unordered_set
 * 
 * from CAComputeParse.R1_INT_Moore import get_trans_moore             # <<<<<<<<<<<<<<
 * from CAComputeParse.R2_INT_Cross import get_trans_cross
 * from CAComputeParse.R2_INT_Von_Neumann import get_trans_von_neumann
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_get_trans_moore);
  __Pyx_GIVEREF(__pyx_n_s_get_trans_moore);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_get_trans_moore);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_CAComputeParse_R1_INT_Moore, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_get_trans_moore); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_trans_moore, __pyx_t_1) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "CAComputeParse/CACompute.pyx":13
 * 
 * from CAComputeParse.R1_INT_Moore import get_trans_moore
 * from CAComputeParse.R2_INT_Cross import get_trans_cross             # <<<<<<<<<<<<<<
 * from CAComputeParse.R2_INT_Von_Neumann import get_trans_von_neumann
 * from CAComputeParse.R2_INT_FarCorners import get_trans_far
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_get_trans_cross);
  __Pyx_GIVEREF(__pyx_n_s_get_trans_cross);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_get_trans_cross);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_CAComputeParse_R2_INT_Cross, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_get_trans_cross); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_trans_cross, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "CAComputeParse/CACompute.pyx":14
 * from CAComputeParse.R1_INT_Moore import get_trans_moore
 * from CAComputeParse.R2_INT_Cross import get_trans_cross
 * from CAComputeParse.R2_INT_Von_Neumann import get_trans_von_neumann             # <<<<<<<<<<<<<<
 * from CAComputeParse.R2_INT_FarCorners import get_trans_far
 * from CAComputeParse.Naive_Generate import naive_gen
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_get_trans_von_neumann);
  __Pyx_GIVEREF(__pyx_n_s_get_trans_von_neumann);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_get_trans_von_neumann);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_CAComputeParse_R2_INT_Von_Neuman, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_get_trans_von_neumann); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_trans_von_neumann, __pyx_t_1) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "CAComputeParse/CACompute.pyx":15
 * from CAComputeParse.R2_INT_Cross import get_trans_cross
 * from CAComputeParse.R2_INT_Von_Neumann import get_trans_von_neumann
 * from CAComputeParse.R2_INT_FarCorners import get_trans_far             # <<<<<<<<<<<<<<
 * from CAComputeParse.Naive_Generate import naive_gen
 * from CAComputeParse.BMS import bms_parse
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_get_trans_far);
  __Pyx_GIVEREF(__pyx_n_s_get_trans_far);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_get_trans_far);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_CAComputeParse_R2_INT_FarCorners, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_get_trans_far); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_trans_far, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "CAComputeParse/CACompute.pyx":16
 * from CAComputeParse.R2_INT_Von_Neumann import get_trans_von_neumann
 * from CAComputeParse.R2_INT_FarCorners import get_trans_far
 * from CAComputeParse.Naive_Generate import naive_gen             # <<<<<<<<<<<<<<
 * from CAComputeParse.BMS import bms_parse
 * from CAComputeParse.Bounds import correct_coor
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_naive_gen);
  __Pyx_GIVEREF(__pyx_n_s_naive_gen);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_naive_gen);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_CAComputeParse_Naive_Generate, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_naive_gen); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_naive_gen, __pyx_t_1) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "CAComputeParse/CACompute.pyx":17
 * from CAComputeParse.R2_INT_FarCorners import get_trans_far
 * from CAComputeParse.Naive_Generate import naive_gen
 * from CAComputeParse.BMS import bms_parse             # <<<<<<<<<<<<<<
 * from CAComputeParse.Bounds import correct_coor
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_bms_parse);
  __Pyx_GIVEREF(__pyx_n_s_bms_parse);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_bms_parse);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_CAComputeParse_BMS, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_bms_parse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_bms_parse, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "CAComputeParse/CACompute.pyx":18
 * from CAComputeParse.Naive_Generate import naive_gen
 * from CAComputeParse.BMS import bms_parse
 * from CAComputeParse.Bounds import correct_coor             # <<<<<<<<<<<<<<
 * 
 * cdef unordered_map[pair[int, int], vector[int]] neighbours_cache
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_correct_coor);
  __Pyx_GIVEREF(__pyx_n_s_correct_coor);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_correct_coor);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_CAComputeParse_Bounds, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_correct_coor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_correct_coor, __pyx_t_1) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "CAComputeParse/CACompute.pyx":46
 * 
 * birth_trans, survival_trans, forcing_trans, killing_trans, living_trans, \
 *     regen_birth_trans, regen_survival_trans = [], [], [], [], [], [], []             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "compute.cpp":
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_birth_trans, __pyx_t_2) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_survival_trans, __pyx_t_1) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_forcing_trans, __pyx_t_3) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_killing_trans, __pyx_t_4) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_living_trans, __pyx_t_5) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_regen_birth_trans, __pyx_t_6) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_regen_survival_trans, __pyx_t_7) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "CAComputeParse/CACompute.pyx":1
 * # distutils: language=c++             # <<<<<<<<<<<<<<
 * 
 * import re
 */
  __pyx_t_7 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init CAComputeParse.CACompute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init CAComputeParse.CACompute");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a != b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_TRUE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_TRUE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a != (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* SliceObject */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* None */
static CYTHON_INLINE int __Pyx_mod_int(int a, int b) {
    int r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* None */
static CYTHON_INLINE long __Pyx_mod_long(long a, long b) {
    long r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) ((size_t) 0 - (size_t) 1), const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
