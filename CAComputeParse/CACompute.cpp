/* Generated by Cython 0.29.13 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "compute.cpp"
        ],
        "language": "c++",
        "name": "CACompute",
        "sources": [
            "CACompute.pyx"
        ]
    },
    "module_name": "CACompute"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_13"
#define CYTHON_HEX_VERSION 0x001D0DF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__CACompute
#define __PYX_HAVE_API__CACompute
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <utility>
#include <map>
#include <string.h>
#include <string>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include "compute.cpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "CACompute.pyx",
  "stringsource",
};

/*--- Type declarations ---*/

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.pair' */

/* Module declarations from 'libcpp.map' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.algorithm' */

/* Module declarations from 'libcpp.unordered_map' */

/* Module declarations from 'libcpp.unordered_set' */

/* Module declarations from 'CACompute' */
static std::vector<std::vector<int> >  __pyx_v_9CACompute_colour_palette;
static std::string __pyx_v_9CACompute_rule_name;
static std::string __pyx_v_9CACompute_rule_space;
static std::string __pyx_v_9CACompute_bsconditions;
static int __pyx_v_9CACompute_n_states;
static std::vector<std::unordered_map<std::pair<int,int> ,int> >  __pyx_v_9CACompute_index_map;
static std::vector<std::vector<int> >  __pyx_v_9CACompute_state_weights;
static std::vector<std::vector<std::pair<int,int> > >  __pyx_v_9CACompute_neighbourhood;
static std::vector<std::vector<std::pair<int,int> > >  __pyx_v_9CACompute_original_neighbourhood;
static std::vector<std::vector<int> >  __pyx_v_9CACompute_neighbourhood_weights;
static int __pyx_v_9CACompute_alternating_period;
static int __pyx_v_9CACompute_birth_state;
static int __pyx_v_9CACompute_naive;
static std::vector<int>  __pyx_v_9CACompute_naive_lst;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_forcing;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_killing;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_living;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_regen_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_regen_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_activity_list;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_regen_birth;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_regen_survival;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_forcing;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_killing;
static std::vector<std::unordered_set<int> >  __pyx_v_9CACompute_other_living;
static std::unordered_map<std::pair<int,int> ,int>  __pyx_v_9CACompute_depends_cache;
static std::map<std::pair<std::vector<int> ,int> ,int>  __pyx_v_9CACompute_transition_func_cache;
static PyObject *__pyx_f_9CACompute_load(PyObject *, int __pyx_skip_dispatch); /*proto*/
static std::vector<std::pair<int,int> >  __pyx_f_9CACompute_get_neighbourhood(int, int __pyx_skip_dispatch); /*proto*/
static int __pyx_f_9CACompute_get_n_states(int __pyx_skip_dispatch); /*proto*/
static std::vector<std::vector<int> >  __pyx_f_9CACompute_get_colour_palette(int __pyx_skip_dispatch); /*proto*/
static std::string __pyx_f_9CACompute_get_rule_name(int __pyx_skip_dispatch); /*proto*/
static int __pyx_f_9CACompute_transition_func(std::vector<int> , int); /*proto*/
static int __pyx_f_9CACompute_depend_on_neighbours(int, int); /*proto*/
static bool __pyx_f_9CACompute_compare_pairs(std::pair<int,int> , std::pair<int,int> ); /*proto*/
static PyObject *__pyx_f_9CACompute_compute(std::unordered_set<std::pair<int,int> > , std::unordered_map<std::pair<int,int> ,int> , std::unordered_map<std::pair<int,int> ,int> , int, int __pyx_skip_dispatch); /*proto*/
static std::pair<int,int>  __pyx_convert_pair_from_py_int__and_int(PyObject *); /*proto*/
static std::unordered_set<std::pair<int,int> >  __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *); /*proto*/
static std::unordered_map<std::pair<int,int> ,int>  __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(PyObject *); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static std::vector<std::string>  __pyx_convert_vector_from_py_std_3a__3a_string(PyObject *); /*proto*/
static PyObject *__pyx_convert_pair_to_py_int____int(std::pair<int,int>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const std::vector<std::pair<int,int> >  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &); /*proto*/
static PyObject *__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(std::unordered_set<std::pair<int,int> >  const &); /*proto*/
static PyObject *__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(std::unordered_map<std::pair<int,int> ,int>  const &); /*proto*/
#define __Pyx_MODULE_NAME "CACompute"
extern int __pyx_module_is_main_CACompute;
int __pyx_module_is_main_CACompute = 0;

/* Implementation of 'CACompute' */
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_IndexError;
static const char __pyx_k_[] = "";
static const char __pyx_k_r[] = "r";
static const char __pyx_k__2[] = "\n";
static const char __pyx_k__3[] = "#";
static const char __pyx_k__4[] = ",";
static const char __pyx_k__5[] = "[() ]";
static const char __pyx_k__9[] = "|";
static const char __pyx_k_re[] = "re";
static const char __pyx_k__13[] = "/";
static const char __pyx_k__14[] = "-";
static const char __pyx_k__15[] = "\\((.*?)\\)";
static const char __pyx_k__16[] = "\\(.*?\\)";
static const char __pyx_k_bsd[] = "[bsd]";
static const char __pyx_k_sub[] = "sub";
static const char __pyx_k_Name[] = "Name:";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_find[] = "find";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_Name_2[] = "Name: ";
static const char __pyx_k_b_s_nn[] = "b|s|nn";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_findall[] = "findall";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_b_s_d_nn[] = "b|s|d|nn";
static const char __pyx_k_Rulespace[] = "Rulespace:";
static const char __pyx_k_copy_grid[] = "copy_grid";
static const char __pyx_k_dict_grid[] = "dict_grid";
static const char __pyx_k_iteritems[] = "iteritems";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_Rulestring[] = "Rulestring:";
static const char __pyx_k_Rulespace_2[] = "Rulespace: ";
static const char __pyx_k_generations[] = "generations";
static const char __pyx_k_Rulestring_2[] = "Rulestring: ";
static const char __pyx_k_b_s_f_k_l_nn[] = "b|s|f|k|l|nn";
static const char __pyx_k_Neighbourhood[] = "Neighbourhood:";
static const char __pyx_k_State_Weights[] = "State Weights:";
static const char __pyx_k_cells_changed[] = "cells_changed";
static const char __pyx_k_B_S_Conditions[] = "B/S Conditions:";
static const char __pyx_k_Colour_Palette[] = "Colour Palette:";
static const char __pyx_k_State_Weights_2[] = "State Weights: ";
static const char __pyx_k_B_S_Conditions_2[] = "B/S Conditions: ";
static const char __pyx_k_rg_l_b_s_rb_rs_nn[] = "rg|l|b|s|rb|rs|nn";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_Neighbourhood_Range[] = "Neighbourhood Range:";
static const char __pyx_k_Neighbourhood_Range_2[] = "Neighbourhood Range: ";
static PyObject *__pyx_kp_b_;
static PyObject *__pyx_kp_b_B_S_Conditions_2;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_kp_b_Name_2;
static PyObject *__pyx_kp_b_Neighbourhood_Range_2;
static PyObject *__pyx_kp_b_Rulespace_2;
static PyObject *__pyx_kp_b_Rulestring_2;
static PyObject *__pyx_kp_b_State_Weights_2;
static PyObject *__pyx_kp_b__13;
static PyObject *__pyx_kp_b__14;
static PyObject *__pyx_kp_b__15;
static PyObject *__pyx_kp_b__16;
static PyObject *__pyx_kp_b__2;
static PyObject *__pyx_kp_b__4;
static PyObject *__pyx_kp_b__5;
static PyObject *__pyx_kp_b__9;
static PyObject *__pyx_kp_b_b_s_d_nn;
static PyObject *__pyx_kp_b_b_s_f_k_l_nn;
static PyObject *__pyx_kp_b_b_s_nn;
static PyObject *__pyx_kp_b_bsd;
static PyObject *__pyx_n_s_cells_changed;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_copy_grid;
static PyObject *__pyx_n_s_dict_grid;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_find;
static PyObject *__pyx_n_s_findall;
static PyObject *__pyx_n_s_generations;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_iteritems;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_u_r;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_re;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_replace;
static PyObject *__pyx_kp_b_rg_l_b_s_rb_rs_nn;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_sub;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_kp_u_utf_8;
static PyObject *__pyx_pf_9CACompute_load(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename); /* proto */
static PyObject *__pyx_pf_9CACompute_2get_neighbourhood(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_generations); /* proto */
static PyObject *__pyx_pf_9CACompute_4get_n_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9CACompute_6get_colour_palette(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9CACompute_8get_rule_name(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_9CACompute_10compute(CYTHON_UNUSED PyObject *__pyx_self, std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_copy_grid, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations); /* proto */
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
/* Late includes */

/* "CACompute.pyx":31
 *     pass
 * 
 * cpdef load(filename):             # <<<<<<<<<<<<<<
 *     global colour_palette, rule_name, rule_space, n_states, state_weights, neighbourhood, neighbourhood_weights,\
 *         alternating_period, birth, survival, forcing, killing, living, \
 */

static PyObject *__pyx_pw_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename); /*proto*/
static PyObject *__pyx_f_9CACompute_load(PyObject *__pyx_v_filename, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::string __pyx_v_rule;
  int __pyx_v_neighbourhood_count;
  std::vector<std::vector<int> >  __pyx_v_current_neighbourhood_weights;
  std::vector<std::vector<std::vector<int> > >  __pyx_v_unflattened_neighbourhood_weights;
  std::unordered_set<std::pair<int,int> >  __pyx_v_set_neighbourhood;
  std::pair<int,int>  __pyx_v_neighbour;
  std::pair<int,int>  __pyx_v_neighbour2;
  bool __pyx_v_parsing_neighbourhood;
  int __pyx_v_colour_palette_count;
  std::vector<int>  __pyx_v_temp;
  bool __pyx_v_parsing_colour_palette;
  std::string __pyx_v_section;
  std::vector<std::string>  __pyx_v_rule_string;
  int __pyx_v_neighbourhood_range;
  int __pyx_v_i;
  int __pyx_v_j;
  std::vector<std::vector<int> >  __pyx_v_weights;
  std::vector<std::pair<int,int> >  __pyx_v_pair_temp;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_map_temp;
  std::vector<int>  __pyx_v_k;
  int __pyx_v_num;
  int __pyx_v_alt;
  std::unordered_set<int>  __pyx_v_set_temp;
  std::vector<int>  __pyx_v_extended;
  PyObject *__pyx_v_file = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  std::string __pyx_v_individual_rule_string;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  Py_ssize_t __pyx_t_15;
  PyObject *(*__pyx_t_16)(PyObject *);
  std::vector<std::string>  __pyx_t_17;
  std::vector<std::vector<std::vector<int> > > ::iterator __pyx_t_18;
  std::vector<std::vector<int> >  __pyx_t_19;
  long __pyx_t_20;
  long __pyx_t_21;
  long __pyx_t_22;
  long __pyx_t_23;
  int __pyx_t_24;
  std::pair<int,int>  __pyx_t_25;
  int __pyx_t_26;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_27;
  std::vector<std::pair<int,int> >  *__pyx_t_28;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_29;
  std::vector<std::pair<int,int> >  *__pyx_t_30;
  int __pyx_t_31;
  std::vector<std::vector<int> > ::iterator __pyx_t_32;
  std::vector<int>  __pyx_t_33;
  std::vector<int> ::iterator __pyx_t_34;
  std::vector<std::string> ::iterator __pyx_t_35;
  PyObject *__pyx_t_36 = NULL;
  PyObject *__pyx_t_37 = NULL;
  PyObject *__pyx_t_38 = NULL;
  PyObject *__pyx_t_39 = NULL;
  PyObject *__pyx_t_40 = NULL;
  __Pyx_RefNannySetupContext("load", 0);

  /* "CACompute.pyx":37
 *         original_neighbourhood, index_map, other_forcing, other_killing, other_living, naive, naive_lst
 * 
 *     colour_palette.clear()             # <<<<<<<<<<<<<<
 *     rule_name = b""
 *     rule_space = b""
 */
  __pyx_v_9CACompute_colour_palette.clear();

  /* "CACompute.pyx":38
 * 
 *     colour_palette.clear()
 *     rule_name = b""             # <<<<<<<<<<<<<<
 *     rule_space = b""
 *     bsconditions = b""
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 38, __pyx_L1_error)
  __pyx_v_9CACompute_rule_name = __pyx_t_1;

  /* "CACompute.pyx":39
 *     colour_palette.clear()
 *     rule_name = b""
 *     rule_space = b""             # <<<<<<<<<<<<<<
 *     bsconditions = b""
 *     n_states = 0
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 39, __pyx_L1_error)
  __pyx_v_9CACompute_rule_space = __pyx_t_1;

  /* "CACompute.pyx":40
 *     rule_name = b""
 *     rule_space = b""
 *     bsconditions = b""             # <<<<<<<<<<<<<<
 *     n_states = 0
 *     state_weights.clear()
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b_); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_v_9CACompute_bsconditions = __pyx_t_1;

  /* "CACompute.pyx":41
 *     rule_space = b""
 *     bsconditions = b""
 *     n_states = 0             # <<<<<<<<<<<<<<
 *     state_weights.clear()
 *     neighbourhood.clear()
 */
  __pyx_v_9CACompute_n_states = 0;

  /* "CACompute.pyx":42
 *     bsconditions = b""
 *     n_states = 0
 *     state_weights.clear()             # <<<<<<<<<<<<<<
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()
 */
  __pyx_v_9CACompute_state_weights.clear();

  /* "CACompute.pyx":43
 *     n_states = 0
 *     state_weights.clear()
 *     neighbourhood.clear()             # <<<<<<<<<<<<<<
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()
 */
  __pyx_v_9CACompute_neighbourhood.clear();

  /* "CACompute.pyx":44
 *     state_weights.clear()
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()             # <<<<<<<<<<<<<<
 *     original_neighbourhood.clear()
 *     alternating_period = 0
 */
  __pyx_v_9CACompute_neighbourhood_weights.clear();

  /* "CACompute.pyx":45
 *     neighbourhood.clear()
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()             # <<<<<<<<<<<<<<
 *     alternating_period = 0
 *     birth_state = 0
 */
  __pyx_v_9CACompute_original_neighbourhood.clear();

  /* "CACompute.pyx":46
 *     neighbourhood_weights.clear()
 *     original_neighbourhood.clear()
 *     alternating_period = 0             # <<<<<<<<<<<<<<
 *     birth_state = 0
 *     naive = -1
 */
  __pyx_v_9CACompute_alternating_period = 0;

  /* "CACompute.pyx":47
 *     original_neighbourhood.clear()
 *     alternating_period = 0
 *     birth_state = 0             # <<<<<<<<<<<<<<
 *     naive = -1
 *     birth.clear()
 */
  __pyx_v_9CACompute_birth_state = 0;

  /* "CACompute.pyx":48
 *     alternating_period = 0
 *     birth_state = 0
 *     naive = -1             # <<<<<<<<<<<<<<
 *     birth.clear()
 *     survival.clear()
 */
  __pyx_v_9CACompute_naive = -1;

  /* "CACompute.pyx":49
 *     birth_state = 0
 *     naive = -1
 *     birth.clear()             # <<<<<<<<<<<<<<
 *     survival.clear()
 *     forcing.clear()
 */
  __pyx_v_9CACompute_birth.clear();

  /* "CACompute.pyx":50
 *     naive = -1
 *     birth.clear()
 *     survival.clear()             # <<<<<<<<<<<<<<
 *     forcing.clear()
 *     killing.clear()
 */
  __pyx_v_9CACompute_survival.clear();

  /* "CACompute.pyx":51
 *     birth.clear()
 *     survival.clear()
 *     forcing.clear()             # <<<<<<<<<<<<<<
 *     killing.clear()
 *     living.clear()
 */
  __pyx_v_9CACompute_forcing.clear();

  /* "CACompute.pyx":52
 *     survival.clear()
 *     forcing.clear()
 *     killing.clear()             # <<<<<<<<<<<<<<
 *     living.clear()
 *     index_map.clear()
 */
  __pyx_v_9CACompute_killing.clear();

  /* "CACompute.pyx":53
 *     forcing.clear()
 *     killing.clear()
 *     living.clear()             # <<<<<<<<<<<<<<
 *     index_map.clear()
 *     activity_list.clear()
 */
  __pyx_v_9CACompute_living.clear();

  /* "CACompute.pyx":54
 *     killing.clear()
 *     living.clear()
 *     index_map.clear()             # <<<<<<<<<<<<<<
 *     activity_list.clear()
 *     regen_birth.clear()
 */
  __pyx_v_9CACompute_index_map.clear();

  /* "CACompute.pyx":55
 *     living.clear()
 *     index_map.clear()
 *     activity_list.clear()             # <<<<<<<<<<<<<<
 *     regen_birth.clear()
 *     regen_survival.clear()
 */
  __pyx_v_9CACompute_activity_list.clear();

  /* "CACompute.pyx":56
 *     index_map.clear()
 *     activity_list.clear()
 *     regen_birth.clear()             # <<<<<<<<<<<<<<
 *     regen_survival.clear()
 *     other_birth.clear()
 */
  __pyx_v_9CACompute_regen_birth.clear();

  /* "CACompute.pyx":57
 *     activity_list.clear()
 *     regen_birth.clear()
 *     regen_survival.clear()             # <<<<<<<<<<<<<<
 *     other_birth.clear()
 *     other_survival.clear()
 */
  __pyx_v_9CACompute_regen_survival.clear();

  /* "CACompute.pyx":58
 *     regen_birth.clear()
 *     regen_survival.clear()
 *     other_birth.clear()             # <<<<<<<<<<<<<<
 *     other_survival.clear()
 *     other_forcing.clear()
 */
  __pyx_v_9CACompute_other_birth.clear();

  /* "CACompute.pyx":59
 *     regen_survival.clear()
 *     other_birth.clear()
 *     other_survival.clear()             # <<<<<<<<<<<<<<
 *     other_forcing.clear()
 *     other_killing.clear()
 */
  __pyx_v_9CACompute_other_survival.clear();

  /* "CACompute.pyx":60
 *     other_birth.clear()
 *     other_survival.clear()
 *     other_forcing.clear()             # <<<<<<<<<<<<<<
 *     other_killing.clear()
 *     other_living.clear()
 */
  __pyx_v_9CACompute_other_forcing.clear();

  /* "CACompute.pyx":61
 *     other_survival.clear()
 *     other_forcing.clear()
 *     other_killing.clear()             # <<<<<<<<<<<<<<
 *     other_living.clear()
 *     other_regen_birth.clear()
 */
  __pyx_v_9CACompute_other_killing.clear();

  /* "CACompute.pyx":62
 *     other_forcing.clear()
 *     other_killing.clear()
 *     other_living.clear()             # <<<<<<<<<<<<<<
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()
 */
  __pyx_v_9CACompute_other_living.clear();

  /* "CACompute.pyx":63
 *     other_killing.clear()
 *     other_living.clear()
 *     other_regen_birth.clear()             # <<<<<<<<<<<<<<
 *     other_regen_survival.clear()
 *     naive_lst.clear()
 */
  __pyx_v_9CACompute_other_regen_birth.clear();

  /* "CACompute.pyx":64
 *     other_living.clear()
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()             # <<<<<<<<<<<<<<
 *     naive_lst.clear()
 * 
 */
  __pyx_v_9CACompute_other_regen_survival.clear();

  /* "CACompute.pyx":65
 *     other_regen_birth.clear()
 *     other_regen_survival.clear()
 *     naive_lst.clear()             # <<<<<<<<<<<<<<
 * 
 *     cdef string rule
 */
  __pyx_v_9CACompute_naive_lst.clear();

  /* "CACompute.pyx":69
 *     cdef string rule
 * 
 *     cdef int neighbourhood_count = 0             # <<<<<<<<<<<<<<
 *     cdef vector[vector[int]] current_neighbourhood_weights
 *     cdef vector[vector[vector[int]]] unflattened_neighbourhood_weights
 */
  __pyx_v_neighbourhood_count = 0;

  /* "CACompute.pyx":74
 *     cdef unordered_set[pair[int, int]] set_neighbourhood
 *     cdef pair[int, int] neighbour, neighbour2
 *     cdef bool parsing_neighbourhood = False             # <<<<<<<<<<<<<<
 * 
 *     cdef int colour_palette_count = 0
 */
  __pyx_v_parsing_neighbourhood = 0;

  /* "CACompute.pyx":76
 *     cdef bool parsing_neighbourhood = False
 * 
 *     cdef int colour_palette_count = 0             # <<<<<<<<<<<<<<
 *     cdef vector[int] temp
 *     cdef bool parsing_colour_palette = False
 */
  __pyx_v_colour_palette_count = 0;

  /* "CACompute.pyx":78
 *     cdef int colour_palette_count = 0
 *     cdef vector[int] temp
 *     cdef bool parsing_colour_palette = False             # <<<<<<<<<<<<<<
 * 
 *     cdef string section
 */
  __pyx_v_parsing_colour_palette = 0;

  /* "CACompute.pyx":83
 *     cdef vector[string] rule_string
 * 
 *     cdef int neighbourhood_range = 0             # <<<<<<<<<<<<<<
 * 
 *     cdef int i, j
 */
  __pyx_v_neighbourhood_range = 0;

  /* "CACompute.pyx":96
 *     cdef vector[int] extended
 * 
 *     file = open(filename, "r")             # <<<<<<<<<<<<<<
 *     rule = file.read().encode("utf-8")
 * 
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_filename);
  __Pyx_GIVEREF(__pyx_v_filename);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_filename);
  __Pyx_INCREF(__pyx_n_u_r);
  __Pyx_GIVEREF(__pyx_n_u_r);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_n_u_r);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_file = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "CACompute.pyx":97
 * 
 *     file = open(filename, "r")
 *     rule = file.read().encode("utf-8")             # <<<<<<<<<<<<<<
 * 
 *     for section in rule.split(b"\n"):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_file, __pyx_n_s_read); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_encode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_u_utf_8) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_u_utf_8);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_rule = __pyx_t_1;

  /* "CACompute.pyx":99
 *     rule = file.read().encode("utf-8")
 * 
 *     for section in rule.split(b"\n"):             # <<<<<<<<<<<<<<
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 */
  __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_rule); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__2) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 99, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 99, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 99, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 99, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_7(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 99, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 99, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_section = __pyx_t_1;

    /* "CACompute.pyx":100
 * 
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 */
    __pyx_t_9 = ((__pyx_v_section.find(__pyx_k_Neighbourhood) != -1L) != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_9 = ((__pyx_v_section.find(__pyx_k__3) != -1L) != 0);
    __pyx_t_8 = __pyx_t_9;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_8) {

      /* "CACompute.pyx":101
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0             # <<<<<<<<<<<<<<
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()
 */
      __pyx_v_neighbourhood_count = 0;

      /* "CACompute.pyx":102
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True             # <<<<<<<<<<<<<<
 *             current_neighbourhood_weights.clear()
 *             continue
 */
      __pyx_v_parsing_neighbourhood = 1;

      /* "CACompute.pyx":103
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()             # <<<<<<<<<<<<<<
 *             continue
 *         elif parsing_neighbourhood:
 */
      __pyx_v_current_neighbourhood_weights.clear();

      /* "CACompute.pyx":104
 *             parsing_neighbourhood = True
 *             current_neighbourhood_weights.clear()
 *             continue             # <<<<<<<<<<<<<<
 *         elif parsing_neighbourhood:
 *             temp.clear()
 */
      goto __pyx_L3_continue;

      /* "CACompute.pyx":100
 * 
 *     for section in rule.split(b"\n"):
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_count = 0
 *             parsing_neighbourhood = True
 */
    }

    /* "CACompute.pyx":105
 *             current_neighbourhood_weights.clear()
 *             continue
 *         elif parsing_neighbourhood:             # <<<<<<<<<<<<<<
 *             temp.clear()
 *             for x in section.split(b","):
 */
    __pyx_t_8 = (__pyx_v_parsing_neighbourhood != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":106
 *             continue
 *         elif parsing_neighbourhood:
 *             temp.clear()             # <<<<<<<<<<<<<<
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))
 */
      __pyx_v_temp.clear();

      /* "CACompute.pyx":107
 *         elif parsing_neighbourhood:
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 */
      __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
        __pyx_t_5 = __pyx_t_3; __Pyx_INCREF(__pyx_t_5); __pyx_t_10 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_10 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 107, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_11 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 107, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 107, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 107, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_11(__pyx_t_5);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 107, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "CACompute.pyx":108
 *             temp.clear()
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))             # <<<<<<<<<<<<<<
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 */
        __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        try {
          __pyx_v_temp.push_back(__pyx_t_12);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 108, __pyx_L1_error)
        }

        /* "CACompute.pyx":107
 *         elif parsing_neighbourhood:
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "CACompute.pyx":109
 *             for x in section.split(b","):
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)             # <<<<<<<<<<<<<<
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 */
      try {
        __pyx_v_current_neighbourhood_weights.push_back(__pyx_v_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 109, __pyx_L1_error)
      }

      /* "CACompute.pyx":110
 *                 temp.push_back(int(x))
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1             # <<<<<<<<<<<<<<
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False
 */
      __pyx_v_neighbourhood_count = (__pyx_v_neighbourhood_count + 1);

      /* "CACompute.pyx":111
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:             # <<<<<<<<<<<<<<
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 */
      __pyx_t_8 = ((__pyx_v_neighbourhood_count == ((__pyx_v_neighbourhood_range * 2) + 1)) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":112
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False             # <<<<<<<<<<<<<<
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 *             continue
 */
        __pyx_v_parsing_neighbourhood = 0;

        /* "CACompute.pyx":113
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
        try {
          __pyx_v_unflattened_neighbourhood_weights.push_back(__pyx_v_current_neighbourhood_weights);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 113, __pyx_L1_error)
        }

        /* "CACompute.pyx":111
 *             current_neighbourhood_weights.push_back(temp)
 *             neighbourhood_count += 1
 *             if neighbourhood_count == neighbourhood_range * 2 + 1:             # <<<<<<<<<<<<<<
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 */
      }

      /* "CACompute.pyx":114
 *                 parsing_neighbourhood = False
 *                 unflattened_neighbourhood_weights.push_back(current_neighbourhood_weights)
 *             continue             # <<<<<<<<<<<<<<
 * 
 *         if section.find(b"Colour Palette:") != -1:
 */
      goto __pyx_L3_continue;

      /* "CACompute.pyx":105
 *             current_neighbourhood_weights.clear()
 *             continue
 *         elif parsing_neighbourhood:             # <<<<<<<<<<<<<<
 *             temp.clear()
 *             for x in section.split(b","):
 */
    }

    /* "CACompute.pyx":116
 *             continue
 * 
 *         if section.find(b"Colour Palette:") != -1:             # <<<<<<<<<<<<<<
 *             parsing_colour_palette = True
 *             continue
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_Colour_Palette) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":117
 * 
 *         if section.find(b"Colour Palette:") != -1:
 *             parsing_colour_palette = True             # <<<<<<<<<<<<<<
 *             continue
 *         elif parsing_colour_palette:
 */
      __pyx_v_parsing_colour_palette = 1;

      /* "CACompute.pyx":118
 *         if section.find(b"Colour Palette:") != -1:
 *             parsing_colour_palette = True
 *             continue             # <<<<<<<<<<<<<<
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:
 */
      goto __pyx_L3_continue;

      /* "CACompute.pyx":116
 *             continue
 * 
 *         if section.find(b"Colour Palette:") != -1:             # <<<<<<<<<<<<<<
 *             parsing_colour_palette = True
 *             continue
 */
    }

    /* "CACompute.pyx":119
 *             parsing_colour_palette = True
 *             continue
 *         elif parsing_colour_palette:             # <<<<<<<<<<<<<<
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 */
    __pyx_t_8 = (__pyx_v_parsing_colour_palette != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":120
 *             continue
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:             # <<<<<<<<<<<<<<
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 */
      __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_None) != -1L) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":121
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *                 continue
 */
        __pyx_v_9CACompute_colour_palette.clear();

        /* "CACompute.pyx":122
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
        __pyx_v_parsing_colour_palette = 0;

        /* "CACompute.pyx":123
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             temp.clear()
 */
        goto __pyx_L3_continue;

        /* "CACompute.pyx":120
 *             continue
 *         elif parsing_colour_palette:
 *             if section.find(b"None") != -1:             # <<<<<<<<<<<<<<
 *                 colour_palette.clear()
 *                 parsing_colour_palette = False
 */
      }

      /* "CACompute.pyx":125
 *                 continue
 * 
 *             temp.clear()             # <<<<<<<<<<<<<<
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 */
      __pyx_v_temp.clear();

      /* "CACompute.pyx":126
 * 
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 */
      __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_10 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_10 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_11 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 126, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 126, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 126, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_11(__pyx_t_4);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 126, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "CACompute.pyx":127
 *             temp.clear()
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))             # <<<<<<<<<<<<<<
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 127, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 127, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_12 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_13, function);
            __pyx_t_12 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_13)) {
          PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__5, __pyx_kp_b_, __pyx_v_x};
          __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 127, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GOTREF(__pyx_t_5);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
          PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__5, __pyx_kp_b_, __pyx_v_x};
          __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 127, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GOTREF(__pyx_t_5);
        } else
        #endif
        {
          __pyx_t_14 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          if (__pyx_t_3) {
            __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3); __pyx_t_3 = NULL;
          }
          __Pyx_INCREF(__pyx_kp_b__5);
          __Pyx_GIVEREF(__pyx_kp_b__5);
          PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b__5);
          __Pyx_INCREF(__pyx_kp_b_);
          __Pyx_GIVEREF(__pyx_kp_b_);
          PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_kp_b_);
          __Pyx_INCREF(__pyx_v_x);
          __Pyx_GIVEREF(__pyx_v_x);
          PyTuple_SET_ITEM(__pyx_t_14, 2+__pyx_t_12, __pyx_v_x);
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_14, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 127, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        }
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 127, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 127, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        try {
          __pyx_v_temp.push_back(__pyx_t_12);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 127, __pyx_L1_error)
        }

        /* "CACompute.pyx":126
 * 
 *             temp.clear()
 *             for x in section.split(b","):             # <<<<<<<<<<<<<<
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "CACompute.pyx":128
 *             for x in section.split(b","):
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)             # <<<<<<<<<<<<<<
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:
 */
      try {
        __pyx_v_9CACompute_colour_palette.push_back(__pyx_v_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 128, __pyx_L1_error)
      }

      /* "CACompute.pyx":129
 *                 temp.push_back(int(re.sub(b"[() ]", b"", x)))
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1             # <<<<<<<<<<<<<<
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False
 */
      __pyx_v_colour_palette_count = (__pyx_v_colour_palette_count + 1);

      /* "CACompute.pyx":130
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *             continue
 */
      __pyx_t_8 = ((__pyx_v_colour_palette_count == __pyx_v_9CACompute_n_states) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":131
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False             # <<<<<<<<<<<<<<
 *             continue
 * 
 */
        __pyx_v_parsing_colour_palette = 0;

        /* "CACompute.pyx":130
 *             colour_palette.push_back(temp)
 *             colour_palette_count += 1
 *             if colour_palette_count == n_states:             # <<<<<<<<<<<<<<
 *                 parsing_colour_palette = False
 *             continue
 */
      }

      /* "CACompute.pyx":132
 *             if colour_palette_count == n_states:
 *                 parsing_colour_palette = False
 *             continue             # <<<<<<<<<<<<<<
 * 
 *         if section.find(b"Name:") != -1:
 */
      goto __pyx_L3_continue;

      /* "CACompute.pyx":119
 *             parsing_colour_palette = True
 *             continue
 *         elif parsing_colour_palette:             # <<<<<<<<<<<<<<
 *             if section.find(b"None") != -1:
 *                 colour_palette.clear()
 */
    }

    /* "CACompute.pyx":134
 *             continue
 * 
 *         if section.find(b"Name:") != -1:             # <<<<<<<<<<<<<<
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_Name) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":135
 * 
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 */
      __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 135, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_9CACompute_rule_name = __pyx_t_1;

      /* "CACompute.pyx":134
 *             continue
 * 
 *         if section.find(b"Name:") != -1:             # <<<<<<<<<<<<<<
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CACompute.pyx":136
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_Neighbourhood_Range) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":137
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))             # <<<<<<<<<<<<<<
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 */
      __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 137, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_v_neighbourhood_range = __pyx_t_12;

      /* "CACompute.pyx":136
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:             # <<<<<<<<<<<<<<
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CACompute.pyx":138
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:             # <<<<<<<<<<<<<<
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_State_Weights) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":139
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
      __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__9) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
        __pyx_t_5 = __pyx_t_13; __Pyx_INCREF(__pyx_t_5); __pyx_t_10 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_10 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_11 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 139, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      for (;;) {
        if (likely(!__pyx_t_11)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_13 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_13); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 139, __pyx_L1_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 139, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          } else {
            if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_10); __Pyx_INCREF(__pyx_t_13); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 139, __pyx_L1_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_5, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 139, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          }
        } else {
          __pyx_t_13 = __pyx_t_11(__pyx_t_5);
          if (unlikely(!__pyx_t_13)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 139, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_13);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
        __pyx_t_13 = 0;

        /* "CACompute.pyx":140
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()             # <<<<<<<<<<<<<<
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))
 */
        __pyx_v_temp.clear();

        /* "CACompute.pyx":141
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 *                 for y in x.split(b","):             # <<<<<<<<<<<<<<
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
          __pyx_t_4 = __pyx_t_13; __Pyx_INCREF(__pyx_t_4); __pyx_t_15 = 0;
          __pyx_t_16 = NULL;
        } else {
          __pyx_t_15 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 141, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_16 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 141, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        for (;;) {
          if (likely(!__pyx_t_16)) {
            if (likely(PyList_CheckExact(__pyx_t_4))) {
              if (__pyx_t_15 >= PyList_GET_SIZE(__pyx_t_4)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_13 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_15); __Pyx_INCREF(__pyx_t_13); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 141, __pyx_L1_error)
              #else
              __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 141, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              #endif
            } else {
              if (__pyx_t_15 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_15); __Pyx_INCREF(__pyx_t_13); __pyx_t_15++; if (unlikely(0 < 0)) __PYX_ERR(0, 141, __pyx_L1_error)
              #else
              __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 141, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              #endif
            }
          } else {
            __pyx_t_13 = __pyx_t_16(__pyx_t_4);
            if (unlikely(!__pyx_t_13)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 141, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_13);
          }
          __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_13);
          __pyx_t_13 = 0;

          /* "CACompute.pyx":142
 *                 temp.clear()
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))             # <<<<<<<<<<<<<<
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 */
          __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_y); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 142, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 142, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          try {
            __pyx_v_temp.push_back(__pyx_t_12);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 142, __pyx_L1_error)
          }

          /* "CACompute.pyx":141
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 *                 for y in x.split(b","):             # <<<<<<<<<<<<<<
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 */
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "CACompute.pyx":143
 *                 for y in x.split(b","):
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)             # <<<<<<<<<<<<<<
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 */
        try {
          __pyx_v_9CACompute_state_weights.push_back(__pyx_v_temp);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 143, __pyx_L1_error)
        }

        /* "CACompute.pyx":139
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "CACompute.pyx":144
 *                     temp.push_back(int(y))
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 */
      __pyx_v_9CACompute_n_states = (__pyx_v_9CACompute_state_weights[0]).size();

      /* "CACompute.pyx":138
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:             # <<<<<<<<<<<<<<
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 *                 temp.clear()
 */
      goto __pyx_L16;
    }

    /* "CACompute.pyx":145
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:             # <<<<<<<<<<<<<<
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_Rulespace) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":146
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 */
      __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_replace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_9CACompute_rule_space = __pyx_t_1;

      /* "CACompute.pyx":145
 *                 state_weights.push_back(temp)
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:             # <<<<<<<<<<<<<<
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CACompute.pyx":147
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:             # <<<<<<<<<<<<<<
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_B_S_Conditions) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":148
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 */
      __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_replace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_9CACompute_bsconditions = __pyx_t_1;

      /* "CACompute.pyx":147
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:             # <<<<<<<<<<<<<<
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 */
      goto __pyx_L16;
    }

    /* "CACompute.pyx":149
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:             # <<<<<<<<<<<<<<
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 */
    __pyx_t_8 = ((__pyx_v_section.find(__pyx_k_Rulestring) != -1L) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":150
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")             # <<<<<<<<<<<<<<
 * 
 *     alternating_period = state_weights.size()
 */
      __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_section); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_13, function);
        }
      }
      __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__9) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__9);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_17 = __pyx_convert_vector_from_py_std_3a__3a_string(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 150, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_rule_string = __pyx_t_17;

      /* "CACompute.pyx":149
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:             # <<<<<<<<<<<<<<
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 */
    }
    __pyx_L16:;

    /* "CACompute.pyx":99
 *     rule = file.read().encode("utf-8")
 * 
 *     for section in rule.split(b"\n"):             # <<<<<<<<<<<<<<
 *         if section.find(b"Neighbourhood:") != -1 or section.find(b"#") != -1:
 *             neighbourhood_count = 0
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "CACompute.pyx":152
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 * 
 *     alternating_period = state_weights.size()             # <<<<<<<<<<<<<<
 * 
 *     for weights in unflattened_neighbourhood_weights:
 */
  __pyx_v_9CACompute_alternating_period = __pyx_v_9CACompute_state_weights.size();

  /* "CACompute.pyx":154
 *     alternating_period = state_weights.size()
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 */
  __pyx_t_18 = __pyx_v_unflattened_neighbourhood_weights.begin();
  for (;;) {
    if (!(__pyx_t_18 != __pyx_v_unflattened_neighbourhood_weights.end())) break;
    __pyx_t_19 = *__pyx_t_18;
    ++__pyx_t_18;
    __pyx_v_weights = __pyx_t_19;

    /* "CACompute.pyx":155
 * 
 *     for weights in unflattened_neighbourhood_weights:
 *         pair_temp.clear()             # <<<<<<<<<<<<<<
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 */
    __pyx_v_pair_temp.clear();

    /* "CACompute.pyx":156
 *     for weights in unflattened_neighbourhood_weights:
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):             # <<<<<<<<<<<<<<
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 */
    __pyx_t_20 = (__pyx_v_neighbourhood_range + 1);
    __pyx_t_21 = __pyx_t_20;
    for (__pyx_t_12 = (-__pyx_v_neighbourhood_range); __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
      __pyx_v_i = __pyx_t_12;

      /* "CACompute.pyx":157
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):             # <<<<<<<<<<<<<<
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 *                     pair_temp.push_back(pair[int, int] (i, j))
 */
      __pyx_t_22 = (__pyx_v_neighbourhood_range + 1);
      __pyx_t_23 = __pyx_t_22;
      for (__pyx_t_24 = (-__pyx_v_neighbourhood_range); __pyx_t_24 < __pyx_t_23; __pyx_t_24+=1) {
        __pyx_v_j = __pyx_t_24;

        /* "CACompute.pyx":158
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:             # <<<<<<<<<<<<<<
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 */
        __pyx_t_8 = ((((__pyx_v_weights[(__pyx_v_i + __pyx_v_neighbourhood_range)])[(__pyx_v_j + __pyx_v_neighbourhood_range)]) != 0) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":159
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:
 *                     pair_temp.push_back(pair[int, int] (i, j))             # <<<<<<<<<<<<<<
 * 
 *         neighbourhood.push_back(pair_temp)
 */
          try {
            __pyx_t_25 = std::pair<int,int> (__pyx_v_i, __pyx_v_j);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 159, __pyx_L1_error)
          }
          try {
            __pyx_v_pair_temp.push_back(__pyx_t_25);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 159, __pyx_L1_error)
          }

          /* "CACompute.pyx":158
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 *             for j in range(-neighbourhood_range, neighbourhood_range + 1):
 *                 if weights[i + neighbourhood_range][j + neighbourhood_range] != 0:             # <<<<<<<<<<<<<<
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 */
        }
      }
    }

    /* "CACompute.pyx":161
 *                     pair_temp.push_back(pair[int, int] (i, j))
 * 
 *         neighbourhood.push_back(pair_temp)             # <<<<<<<<<<<<<<
 * 
 *     if bsconditions == b"Double Totalistic":
 */
    try {
      __pyx_v_9CACompute_neighbourhood.push_back(__pyx_v_pair_temp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 161, __pyx_L1_error)
    }

    /* "CACompute.pyx":154
 *     alternating_period = state_weights.size()
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         pair_temp.clear()
 *         for i in range(-neighbourhood_range, neighbourhood_range + 1):
 */
  }

  /* "CACompute.pyx":163
 *         neighbourhood.push_back(pair_temp)
 * 
 *     if bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 */
  __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
  if (__pyx_t_8) {

    /* "CACompute.pyx":164
 * 
 *     if bsconditions == b"Double Totalistic":
 *         original_neighbourhood = neighbourhood             # <<<<<<<<<<<<<<
 *         neighbourhood.clear()
 *         for i in range(alternating_period):
 */
    __pyx_v_9CACompute_original_neighbourhood = __pyx_v_9CACompute_neighbourhood;

    /* "CACompute.pyx":165
 *     if bsconditions == b"Double Totalistic":
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()             # <<<<<<<<<<<<<<
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 */
    __pyx_v_9CACompute_neighbourhood.clear();

    /* "CACompute.pyx":166
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 *         for i in range(alternating_period):             # <<<<<<<<<<<<<<
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 */
    __pyx_t_12 = __pyx_v_9CACompute_alternating_period;
    __pyx_t_24 = __pyx_t_12;
    for (__pyx_t_26 = 0; __pyx_t_26 < __pyx_t_24; __pyx_t_26+=1) {
      __pyx_v_i = __pyx_t_26;

      /* "CACompute.pyx":167
 *         neighbourhood.clear()
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:
 */
      __pyx_v_set_neighbourhood.clear();

      /* "CACompute.pyx":168
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 */
      __pyx_t_28 = &(__pyx_v_9CACompute_original_neighbourhood[__pyx_v_i]);
      __pyx_t_27 = __pyx_t_28->begin();
      for (;;) {
        if (!(__pyx_t_27 != __pyx_t_28->end())) break;
        __pyx_t_25 = *__pyx_t_27;
        ++__pyx_t_27;
        __pyx_v_neighbour = __pyx_t_25;

        /* "CACompute.pyx":169
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 */
        __pyx_t_30 = &(__pyx_v_9CACompute_original_neighbourhood[__pyx_v_i]);
        __pyx_t_29 = __pyx_t_30->begin();
        for (;;) {
          if (!(__pyx_t_29 != __pyx_t_30->end())) break;
          __pyx_t_25 = *__pyx_t_29;
          ++__pyx_t_29;
          __pyx_v_neighbour2 = __pyx_t_25;

          /* "CACompute.pyx":170
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,             # <<<<<<<<<<<<<<
 *                                                              neighbour.second + neighbour2.second))
 *                 set_neighbourhood.insert(neighbour)
 */
          try {
            __pyx_t_25 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 170, __pyx_L1_error)
          }
          (void)(__pyx_v_set_neighbourhood.insert(__pyx_t_25));

          /* "CACompute.pyx":169
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:
 *                 for neighbour2 in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 */
        }

        /* "CACompute.pyx":172
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 *                                                              neighbour.second + neighbour2.second))
 *                 set_neighbourhood.insert(neighbour)             # <<<<<<<<<<<<<<
 * 
 *             pair_temp.clear()
 */
        (void)(__pyx_v_set_neighbourhood.insert(__pyx_v_neighbour));

        /* "CACompute.pyx":168
 *         for i in range(alternating_period):
 *             set_neighbourhood.clear()
 *             for neighbour in original_neighbourhood[i]:             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[i]:
 *                     set_neighbourhood.insert(pair[int, int] (neighbour.first + neighbour2.first,
 */
      }

      /* "CACompute.pyx":174
 *                 set_neighbourhood.insert(neighbour)
 * 
 *             pair_temp.clear()             # <<<<<<<<<<<<<<
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())
 *             neighbourhood.push_back(pair_temp)
 */
      __pyx_v_pair_temp.clear();

      /* "CACompute.pyx":175
 * 
 *             pair_temp.clear()
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())             # <<<<<<<<<<<<<<
 *             neighbourhood.push_back(pair_temp)
 * 
 */
      try {
        __pyx_v_pair_temp.insert(__pyx_v_pair_temp.end(), __pyx_v_set_neighbourhood.begin(), __pyx_v_set_neighbourhood.end());
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 175, __pyx_L1_error)
      }

      /* "CACompute.pyx":176
 *             pair_temp.clear()
 *             pair_temp.insert(pair_temp.end(), set_neighbourhood.begin(), set_neighbourhood.end())
 *             neighbourhood.push_back(pair_temp)             # <<<<<<<<<<<<<<
 * 
 *             map_temp.clear()
 */
      try {
        __pyx_v_9CACompute_neighbourhood.push_back(__pyx_v_pair_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 176, __pyx_L1_error)
      }

      /* "CACompute.pyx":178
 *             neighbourhood.push_back(pair_temp)
 * 
 *             map_temp.clear()             # <<<<<<<<<<<<<<
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j
 */
      __pyx_v_map_temp.clear();

      /* "CACompute.pyx":179
 * 
 *             map_temp.clear()
 *             for j in range(len(neighbourhood[i])):             # <<<<<<<<<<<<<<
 *                 map_temp[neighbourhood[i][j]] = j
 *             index_map.push_back(map_temp)
 */
      __pyx_t_2 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___((__pyx_v_9CACompute_neighbourhood[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 179, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_10 = __pyx_t_6;
      for (__pyx_t_31 = 0; __pyx_t_31 < __pyx_t_10; __pyx_t_31+=1) {
        __pyx_v_j = __pyx_t_31;

        /* "CACompute.pyx":180
 *             map_temp.clear()
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j             # <<<<<<<<<<<<<<
 *             index_map.push_back(map_temp)
 * 
 */
        (__pyx_v_map_temp[((__pyx_v_9CACompute_neighbourhood[__pyx_v_i])[__pyx_v_j])]) = __pyx_v_j;
      }

      /* "CACompute.pyx":181
 *             for j in range(len(neighbourhood[i])):
 *                 map_temp[neighbourhood[i][j]] = j
 *             index_map.push_back(map_temp)             # <<<<<<<<<<<<<<
 * 
 *     for weights in unflattened_neighbourhood_weights:
 */
      try {
        __pyx_v_9CACompute_index_map.push_back(__pyx_v_map_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 181, __pyx_L1_error)
      }
    }

    /* "CACompute.pyx":163
 *         neighbourhood.push_back(pair_temp)
 * 
 *     if bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *         original_neighbourhood = neighbourhood
 *         neighbourhood.clear()
 */
  }

  /* "CACompute.pyx":183
 *             index_map.push_back(map_temp)
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         temp.clear()
 *         for k in weights:
 */
  __pyx_t_18 = __pyx_v_unflattened_neighbourhood_weights.begin();
  for (;;) {
    if (!(__pyx_t_18 != __pyx_v_unflattened_neighbourhood_weights.end())) break;
    __pyx_t_19 = *__pyx_t_18;
    ++__pyx_t_18;
    __pyx_v_weights = __pyx_t_19;

    /* "CACompute.pyx":184
 * 
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()             # <<<<<<<<<<<<<<
 *         for k in weights:
 *             for j in k:
 */
    __pyx_v_temp.clear();

    /* "CACompute.pyx":185
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()
 *         for k in weights:             # <<<<<<<<<<<<<<
 *             for j in k:
 *                 if j != 0:
 */
    __pyx_t_32 = __pyx_v_weights.begin();
    for (;;) {
      if (!(__pyx_t_32 != __pyx_v_weights.end())) break;
      __pyx_t_33 = *__pyx_t_32;
      ++__pyx_t_32;
      __pyx_v_k = __pyx_t_33;

      /* "CACompute.pyx":186
 *         temp.clear()
 *         for k in weights:
 *             for j in k:             # <<<<<<<<<<<<<<
 *                 if j != 0:
 *                     temp.push_back(j)
 */
      __pyx_t_34 = __pyx_v_k.begin();
      for (;;) {
        if (!(__pyx_t_34 != __pyx_v_k.end())) break;
        __pyx_t_12 = *__pyx_t_34;
        ++__pyx_t_34;
        __pyx_v_j = __pyx_t_12;

        /* "CACompute.pyx":187
 *         for k in weights:
 *             for j in k:
 *                 if j != 0:             # <<<<<<<<<<<<<<
 *                     temp.push_back(j)
 * 
 */
        __pyx_t_8 = ((__pyx_v_j != 0) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":188
 *             for j in k:
 *                 if j != 0:
 *                     temp.push_back(j)             # <<<<<<<<<<<<<<
 * 
 *         neighbourhood_weights.push_back(temp)
 */
          try {
            __pyx_v_temp.push_back(__pyx_v_j);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 188, __pyx_L1_error)
          }

          /* "CACompute.pyx":187
 *         for k in weights:
 *             for j in k:
 *                 if j != 0:             # <<<<<<<<<<<<<<
 *                     temp.push_back(j)
 * 
 */
        }

        /* "CACompute.pyx":186
 *         temp.clear()
 *         for k in weights:
 *             for j in k:             # <<<<<<<<<<<<<<
 *                 if j != 0:
 *                     temp.push_back(j)
 */
      }

      /* "CACompute.pyx":185
 *     for weights in unflattened_neighbourhood_weights:
 *         temp.clear()
 *         for k in weights:             # <<<<<<<<<<<<<<
 *             for j in k:
 *                 if j != 0:
 */
    }

    /* "CACompute.pyx":190
 *                     temp.push_back(j)
 * 
 *         neighbourhood_weights.push_back(temp)             # <<<<<<<<<<<<<<
 * 
 *     if rule_space == b"Single State":
 */
    try {
      __pyx_v_9CACompute_neighbourhood_weights.push_back(__pyx_v_temp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 190, __pyx_L1_error)
    }

    /* "CACompute.pyx":183
 *             index_map.push_back(map_temp)
 * 
 *     for weights in unflattened_neighbourhood_weights:             # <<<<<<<<<<<<<<
 *         temp.clear()
 *         for k in weights:
 */
  }

  /* "CACompute.pyx":192
 *         neighbourhood_weights.push_back(temp)
 * 
 *     if rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:
 */
  __pyx_t_8 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Single State")) != 0);
  if (__pyx_t_8) {

    /* "CACompute.pyx":193
 * 
 *     if rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":194
 *     if rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_35 = __pyx_v_rule_string.begin();
      for (;;) {
        if (!(__pyx_t_35 != __pyx_v_rule_string.end())) break;
        __pyx_t_1 = *__pyx_t_35;
        ++__pyx_t_35;
        __pyx_v_individual_rule_string = __pyx_t_1;

        /* "CACompute.pyx":195
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":196
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":197
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 197, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 197, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 197, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 197, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 197, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":198
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 198, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":199
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 199, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":200
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":198
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L51;
            }

            /* "CACompute.pyx":202
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 202, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 202, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L51:;

            /* "CACompute.pyx":197
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":203
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 203, __pyx_L1_error)
          }

          /* "CACompute.pyx":205
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":206
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 206, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_2 = __pyx_t_5; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 206, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 206, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 206, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 206, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 206, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 206, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":207
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 207, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 207, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 207, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 207, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":208
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 208, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":209
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":207
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L56;
            }

            /* "CACompute.pyx":211
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 211, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 211, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L56:;

            /* "CACompute.pyx":206
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":212
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 212, __pyx_L1_error)
          }

          /* "CACompute.pyx":214
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L59_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 214, __pyx_L59_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L66_try_end;
            __pyx_L59_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":215
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_13, &__pyx_t_5) < 0) __PYX_ERR(0, 215, __pyx_L61_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_GOTREF(__pyx_t_5);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 215, __pyx_L61_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L60_exception_handled;
            }
            goto __pyx_L61_except_error;
            __pyx_L61_except_error:;

            /* "CACompute.pyx":214
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L60_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L66_try_end:;
          }

          /* "CACompute.pyx":195
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
          goto __pyx_L48;
        }

        /* "CACompute.pyx":217
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":218
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_2};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 218, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_2};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 218, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 218, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 218, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 218, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_13 = __pyx_t_5; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 218, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 218, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 218, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 218, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 218, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 218, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 218, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":219
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 219, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 219, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 219, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":220
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 220, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":221
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":219
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L71;
            }

            /* "CACompute.pyx":223
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 223, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 223, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L71:;

            /* "CACompute.pyx":218
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":224
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 224, __pyx_L1_error)
          }

          /* "CACompute.pyx":226
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":227
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_t_4};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_nn, __pyx_t_4};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 227, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_14, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 227, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_5 = __pyx_t_13; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 227, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 227, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 227, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 227, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 227, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 227, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":228
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 228, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":229
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_3 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 229, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":230
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":228
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L76;
            }

            /* "CACompute.pyx":232
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 232, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 232, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L76:;

            /* "CACompute.pyx":227
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":233
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 233, __pyx_L1_error)
          }

          /* "CACompute.pyx":235
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_14 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_13};
                __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L79_error)
                __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_13};
                __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L79_error)
                __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              {
                __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 235, __pyx_L79_error)
                __Pyx_GOTREF(__pyx_t_4);
                if (__pyx_t_14) {
                  __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_14); __pyx_t_14 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_t_13);
                PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_13);
                __pyx_t_13 = 0;
                __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L79_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 235, __pyx_L79_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 235, __pyx_L79_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L86_try_end;
            __pyx_L79_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":236
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             for individual_rule_string in rule_string:
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_3, &__pyx_t_4) < 0) __PYX_ERR(0, 236, __pyx_L81_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_4);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 236, __pyx_L81_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              goto __pyx_L80_exception_handled;
            }
            goto __pyx_L81_except_error;
            __pyx_L81_except_error:;

            /* "CACompute.pyx":235
 *                     survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L80_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L86_try_end:;
          }
        }
        __pyx_L48:;

        /* "CACompute.pyx":194
 *     if rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      }

      /* "CACompute.pyx":193
 * 
 *     if rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 */
      goto __pyx_L45;
    }

    /* "CACompute.pyx":237
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_8) {

      /* "CACompute.pyx":238
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":
 *             for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_35 = __pyx_v_rule_string.begin();
      for (;;) {
        if (!(__pyx_t_35 != __pyx_v_rule_string.end())) break;
        __pyx_t_1 = *__pyx_t_35;
        ++__pyx_t_35;
        __pyx_v_individual_rule_string = __pyx_t_1;

        /* "CACompute.pyx":239
 *         elif bsconditions == b"Double Totalistic":
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":240
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":241
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 241, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 241, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 241, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_7 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 241, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 241, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 241, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 241, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 241, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_7(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 241, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CACompute.pyx":242
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 242, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 242, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 242, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 242, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":243
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":244
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":242
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L94;
            }

            /* "CACompute.pyx":246
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 246, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L94:;

            /* "CACompute.pyx":241
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CACompute.pyx":247
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 247, __pyx_L1_error)
          }

          /* "CACompute.pyx":249
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":250
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_13 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 250, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 250, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 250, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 250, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 250, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CACompute.pyx":251
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 251, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 251, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 251, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":252
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":253
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":251
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L99;
            }

            /* "CACompute.pyx":255
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 255, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 255, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L99:;

            /* "CACompute.pyx":250
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":256
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 256, __pyx_L1_error)
          }

          /* "CACompute.pyx":258
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":259
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_14 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 259, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 259, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 259, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 259, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 259, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_2 = __pyx_t_4; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 259, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 259, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 259, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 259, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 259, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 259, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CACompute.pyx":260
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 260, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":261
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 261, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":262
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":260
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L104;
            }

            /* "CACompute.pyx":264
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 264, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L104:;

            /* "CACompute.pyx":259
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":265
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 265, __pyx_L1_error)
          }

          /* "CACompute.pyx":267
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":268
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_3 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 268, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 268, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 268, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 268, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 268, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":269
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 269, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":270
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":271
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":269
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L109;
            }

            /* "CACompute.pyx":273
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L109:;

            /* "CACompute.pyx":268
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":274
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 274, __pyx_L1_error)
          }

          /* "CACompute.pyx":276
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 276, __pyx_L112_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 276, __pyx_L112_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L119_try_end;
            __pyx_L112_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":277
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_2) < 0) __PYX_ERR(0, 277, __pyx_L114_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_2);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 277, __pyx_L114_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L113_exception_handled;
            }
            goto __pyx_L114_except_error;
            __pyx_L114_except_error:;

            /* "CACompute.pyx":276
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[2]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L113_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L119_try_end:;
          }

          /* "CACompute.pyx":239
 *         elif bsconditions == b"Double Totalistic":
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
          goto __pyx_L91;
        }

        /* "CACompute.pyx":279
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":280
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_39 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_b_s_nn, __pyx_t_14};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_b_s_nn, __pyx_t_14};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_40, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_40, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 280, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_4 = __pyx_t_2; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 280, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 280, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 280, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 280, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 280, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 280, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":281
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 281, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":282
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 282, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":283
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":281
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L124;
            }

            /* "CACompute.pyx":285
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 285, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L124:;

            /* "CACompute.pyx":280
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":286
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 286, __pyx_L1_error)
          }

          /* "CACompute.pyx":288
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":289
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_3};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_nn, __pyx_t_3};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_39, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_39, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_2 = __pyx_t_4; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 289, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 289, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 289, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 289, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CACompute.pyx":290
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_4 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 290, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":291
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_4 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 291, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":292
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":290
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L129;
            }

            /* "CACompute.pyx":294
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 294, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 294, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L129:;

            /* "CACompute.pyx":289
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":295
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 295, __pyx_L1_error)
          }

          /* "CACompute.pyx":297
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":298
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_sub); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_14, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_14, 2+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 298, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_39 = __pyx_t_2; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 298, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 298, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 298, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 298, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 298, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 298, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 298, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":299
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 299, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 299, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":300
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 300, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":301
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":299
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L134;
            }

            /* "CACompute.pyx":303
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 303, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 303, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L134:;

            /* "CACompute.pyx":298
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":304
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 304, __pyx_L1_error)
          }

          /* "CACompute.pyx":306
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":307
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_t_13};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_nn, __pyx_t_13};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 307, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_14 = __pyx_t_39; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 307, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 307, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 307, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 307, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 307, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 307, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 307, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":308
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 308, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 308, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":309
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 309, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":310
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":308
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L139;
            }

            /* "CACompute.pyx":312
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 312, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 312, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L139:;

            /* "CACompute.pyx":307
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":313
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 313, __pyx_L1_error)
          }

          /* "CACompute.pyx":315
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_t_39};
                __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 315, __pyx_L142_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_nn, __pyx_t_39};
                __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 315, __pyx_L142_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              } else
              #endif
              {
                __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 315, __pyx_L142_error)
                __Pyx_GOTREF(__pyx_t_40);
                if (__pyx_t_3) {
                  __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_3); __pyx_t_3 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_nn);
                PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b_b_s_nn);
                __Pyx_GIVEREF(__pyx_t_39);
                PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_39);
                __pyx_t_39 = 0;
                __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_40, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 315, __pyx_L142_error)
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 315, __pyx_L142_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 315, __pyx_L142_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L149_try_end;
            __pyx_L142_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":316
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *     elif rule_space == b"BSFKL":
 *         for individual_rule_string in rule_string:
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_14, &__pyx_t_2, &__pyx_t_40) < 0) __PYX_ERR(0, 316, __pyx_L144_except_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_40);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 316, __pyx_L144_except_error)
              }
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              goto __pyx_L143_exception_handled;
            }
            goto __pyx_L144_except_error;
            __pyx_L144_except_error:;

            /* "CACompute.pyx":315
 *                     other_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L143_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L149_try_end:;
          }
        }
        __pyx_L91:;

        /* "CACompute.pyx":238
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":
 *             for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      }

      /* "CACompute.pyx":237
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             for individual_rule_string in rule_string:
 *                 if individual_rule_string.find(b"/") != -1:
 */
    }
    __pyx_L45:;

    /* "CACompute.pyx":192
 *         neighbourhood_weights.push_back(temp)
 * 
 *     if rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for individual_rule_string in rule_string:
 */
    goto __pyx_L44;
  }

  /* "CACompute.pyx":317
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
  __pyx_t_8 = ((__pyx_v_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
  if (__pyx_t_8) {

    /* "CACompute.pyx":318
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_35 = __pyx_v_rule_string.begin();
    for (;;) {
      if (!(__pyx_t_35 != __pyx_v_rule_string.end())) break;
      __pyx_t_1 = *__pyx_t_35;
      ++__pyx_t_35;
      __pyx_v_individual_rule_string = __pyx_t_1;

      /* "CACompute.pyx":319
 *     elif rule_space == b"BSFKL":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":320
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":321
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":322
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 322, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 322, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 322, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 322, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 322, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 322, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 322, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":323
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 323, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 323, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 323, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 323, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":324
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 324, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":325
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":323
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L158;
            }

            /* "CACompute.pyx":327
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 327, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 327, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L158:;

            /* "CACompute.pyx":322
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":328
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 328, __pyx_L1_error)
          }

          /* "CACompute.pyx":330
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":331
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 331, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_40 = __pyx_t_2; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 331, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 331, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 331, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 331, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 331, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":332
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 332, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 332, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":333
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_14 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 333, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":334
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":332
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L163;
            }

            /* "CACompute.pyx":336
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 336, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L163:;

            /* "CACompute.pyx":331
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":337
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 337, __pyx_L1_error)
          }

          /* "CACompute.pyx":339
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":340
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 340, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 340, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 340, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 340, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 340, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 340, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 340, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":341
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 341, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 341, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 341, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 341, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":342
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 342, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":343
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":341
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L168;
            }

            /* "CACompute.pyx":345
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 345, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 345, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L168:;

            /* "CACompute.pyx":340
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":346
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 346, __pyx_L1_error)
          }

          /* "CACompute.pyx":348
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":349
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_40 = __pyx_t_2; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 349, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 349, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 349, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 349, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 349, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":350
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 350, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 350, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 350, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":351
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_14 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 351, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":352
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":350
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L173;
            }

            /* "CACompute.pyx":354
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 354, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L173:;

            /* "CACompute.pyx":349
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":355
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 355, __pyx_L1_error)
          }

          /* "CACompute.pyx":357
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":358
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 358, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 358, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 358, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 358, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 358, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 358, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 358, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":359
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 359, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 359, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 359, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 359, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":360
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 360, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":361
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":359
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L178;
            }

            /* "CACompute.pyx":363
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 363, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 363, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L178:;

            /* "CACompute.pyx":358
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":364
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))
 */
          try {
            __pyx_v_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 364, __pyx_L1_error)
          }

          /* "CACompute.pyx":366
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 366, __pyx_L181_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 366, __pyx_L181_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L188_try_end;
            __pyx_L181_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":367
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_39, &__pyx_t_40) < 0) __PYX_ERR(0, 367, __pyx_L183_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_GOTREF(__pyx_t_40);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 367, __pyx_L183_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              goto __pyx_L182_exception_handled;
            }
            goto __pyx_L183_except_error;
            __pyx_L183_except_error:;

            /* "CACompute.pyx":366
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L182_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L188_try_end:;
          }

          /* "CACompute.pyx":320
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 */
          goto __pyx_L155;
        }

        /* "CACompute.pyx":369
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":370
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_4, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 370, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 370, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 370, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 370, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 370, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 370, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 370, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 370, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":371
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 371, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 371, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 371, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 371, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":372
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_14 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":373
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":371
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L193;
            }

            /* "CACompute.pyx":375
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 375, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 375, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L193:;

            /* "CACompute.pyx":370
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":376
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 376, __pyx_L1_error)
          }

          /* "CACompute.pyx":378
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":379
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_14};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_14};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_40, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 379, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_40 = __pyx_t_39; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 379, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 379, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 379, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 379, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 379, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 379, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":380
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 380, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 380, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 380, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":381
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 381, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":382
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":380
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L198;
            }

            /* "CACompute.pyx":384
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 384, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 384, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L198:;

            /* "CACompute.pyx":379
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":385
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 385, __pyx_L1_error)
          }

          /* "CACompute.pyx":387
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":388
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 388, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 388, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 388, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 388, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 388, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 388, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 388, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":389
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 389, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_40 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 389, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 389, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 389, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":390
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_40 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 390, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":391
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":389
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L203;
            }

            /* "CACompute.pyx":393
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 393, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 393, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L203:;

            /* "CACompute.pyx":388
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":394
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 394, __pyx_L1_error)
          }

          /* "CACompute.pyx":396
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":397
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 397, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_14, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_40, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 397, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_40 = __pyx_t_39; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 397, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 397, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 397, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 397, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 397, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 397, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 397, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":398
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":399
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":400
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":398
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L208;
            }

            /* "CACompute.pyx":402
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 402, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 402, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L208:;

            /* "CACompute.pyx":397
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":403
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 403, __pyx_L1_error)
          }

          /* "CACompute.pyx":405
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":406
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_4, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 406, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 406, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 406, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 406, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 406, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 406, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":407
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 407, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":408
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_14 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 408, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":409
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":407
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L213;
            }

            /* "CACompute.pyx":411
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 411, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 411, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L213:;

            /* "CACompute.pyx":406
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|f|k|l|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":412
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 */
          try {
            __pyx_v_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 412, __pyx_L1_error)
          }

          /* "CACompute.pyx":414
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_14)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_40};
                __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 414, __pyx_L216_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
                PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_40};
                __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 414, __pyx_L216_error)
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              } else
              #endif
              {
                __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 414, __pyx_L216_error)
                __Pyx_GOTREF(__pyx_t_2);
                if (__pyx_t_4) {
                  __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_t_40);
                PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_40);
                __pyx_t_40 = 0;
                __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 414, __pyx_L216_error)
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 414, __pyx_L216_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 414, __pyx_L216_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L223_try_end;
            __pyx_L216_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":415
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_39, &__pyx_t_14, &__pyx_t_2) < 0) __PYX_ERR(0, 415, __pyx_L218_except_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_GOTREF(__pyx_t_2);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 415, __pyx_L218_except_error)
              }
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L217_exception_handled;
            }
            goto __pyx_L218_except_error;
            __pyx_L218_except_error:;

            /* "CACompute.pyx":414
 *                     living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L217_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L223_try_end:;
          }
        }
        __pyx_L155:;

        /* "CACompute.pyx":319
 *     elif rule_space == b"BSFKL":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L154;
      }

      /* "CACompute.pyx":416
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":417
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":418
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":419
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_findall); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 419, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 419, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_4, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 419, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 419, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_14 = __pyx_t_2; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 419, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 419, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 419, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 419, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 419, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 419, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 419, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":420
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 420, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":421
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 421, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":422
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":420
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L229;
            }

            /* "CACompute.pyx":424
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 424, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 424, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L229:;

            /* "CACompute.pyx":419
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":425
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 425, __pyx_L1_error)
          }

          /* "CACompute.pyx":427
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":428
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 428, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_14 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 428, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_2 = __pyx_t_14; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 428, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 428, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 428, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 428, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 428, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 428, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":429
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 429, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":430
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 430, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":431
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":429
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L234;
            }

            /* "CACompute.pyx":433
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 433, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 433, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L234:;

            /* "CACompute.pyx":428
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":434
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 434, __pyx_L1_error)
          }

          /* "CACompute.pyx":436
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":437
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_4 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 437, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 437, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 437, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_39, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 437, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 437, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_14 = __pyx_t_2; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 437, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 437, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 437, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 437, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 437, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 437, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 437, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":438
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 438, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 438, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 438, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 438, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":439
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_3 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":440
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":438
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L239;
            }

            /* "CACompute.pyx":442
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 442, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L239:;

            /* "CACompute.pyx":437
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":443
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 443, __pyx_L1_error)
          }

          /* "CACompute.pyx":445
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":446
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_findall); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_40, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 446, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_40, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_14 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 446, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_2 = __pyx_t_14; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 446, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 446, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 446, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 446, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 446, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 446, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":447
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 447, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 447, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 447, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":448
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 448, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":449
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":447
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L244;
            }

            /* "CACompute.pyx":451
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 451, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 451, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L244:;

            /* "CACompute.pyx":446
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":452
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 452, __pyx_L1_error)
          }

          /* "CACompute.pyx":454
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":455
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_findall); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_4, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_14 = __pyx_t_2; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 455, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 455, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 455, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 455, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 455, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":456
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 456, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":457
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 457, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":458
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":456
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L249;
            }

            /* "CACompute.pyx":460
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L249:;

            /* "CACompute.pyx":455
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":461
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 461, __pyx_L1_error)
          }

          /* "CACompute.pyx":463
 *                     living.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":464
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_39};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_39};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_12, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 464, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_4 = __pyx_t_14; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 464, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 464, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 464, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 464, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 464, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 464, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":465
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 465, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":466
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 466, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":467
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":465
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L254;
            }

            /* "CACompute.pyx":469
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 469, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 469, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L254:;

            /* "CACompute.pyx":464
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":470
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 470, __pyx_L1_error)
          }

          /* "CACompute.pyx":472
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":473
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 473, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 473, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 473, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_39, 2+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_39, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 473, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 473, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_7 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 473, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 473, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 473, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_7(__pyx_t_3);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 473, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CACompute.pyx":474
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 474, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_4 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 474, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 474, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 474, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":475
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_14 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_4 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 475, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":476
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":474
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L259;
            }

            /* "CACompute.pyx":478
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 478, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 478, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L259:;

            /* "CACompute.pyx":473
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CACompute.pyx":479
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 479, __pyx_L1_error)
          }

          /* "CACompute.pyx":481
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":482
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_sub); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_40, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 482, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_40, 2+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_40, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 482, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_39 = __pyx_t_3; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 482, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 482, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 482, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 482, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 482, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 482, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 482, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CACompute.pyx":483
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_3 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 483, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":484
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_4 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_3 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 484, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":485
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":483
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L264;
            }

            /* "CACompute.pyx":487
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 487, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 487, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L264:;

            /* "CACompute.pyx":482
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":488
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 488, __pyx_L1_error)
          }

          /* "CACompute.pyx":490
 *                     other_forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":491
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 491, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 491, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 491, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 491, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 491, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_40 = __pyx_t_39; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 491, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 491, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 491, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 491, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 491, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 491, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":492
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 492, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 492, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 492, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 492, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":493
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 493, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":494
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":492
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L269;
            }

            /* "CACompute.pyx":496
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 496, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 496, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L269:;

            /* "CACompute.pyx":491
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":497
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 497, __pyx_L1_error)
          }

          /* "CACompute.pyx":499
 *                     other_killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":500
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_3 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 500, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 500, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 500, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_14, 2+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_14, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 500, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 500, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 500, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 500, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 500, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 500, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 500, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 500, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 500, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":501
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 501, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 501, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 501, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 501, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":502
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 502, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":503
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":501
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L274;
            }

            /* "CACompute.pyx":505
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 505, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 505, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L274:;

            /* "CACompute.pyx":500
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":506
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))
 */
          try {
            __pyx_v_9CACompute_other_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 506, __pyx_L1_error)
          }

          /* "CACompute.pyx":508
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 508, __pyx_L277_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 508, __pyx_L277_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L284_try_end;
            __pyx_L277_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":509
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_39, &__pyx_t_40) < 0) __PYX_ERR(0, 509, __pyx_L279_except_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_GOTREF(__pyx_t_40);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 509, __pyx_L279_except_error)
              }
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              goto __pyx_L278_exception_handled;
            }
            goto __pyx_L279_except_error;
            __pyx_L279_except_error:;

            /* "CACompute.pyx":508
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[5]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L278_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L284_try_end:;
          }

          /* "CACompute.pyx":417
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 */
          goto __pyx_L226;
        }

        /* "CACompute.pyx":511
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":512
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_5, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 512, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 512, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 512, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 512, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 512, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 512, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 512, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 512, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":513
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_40 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 513, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 513, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":514
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_14 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_40 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 514, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":515
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":513
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L289;
            }

            /* "CACompute.pyx":517
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 517, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 517, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L289:;

            /* "CACompute.pyx":512
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":518
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 518, __pyx_L1_error)
          }

          /* "CACompute.pyx":520
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":521
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_13, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_13, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 521, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_40 = __pyx_t_39; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 521, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 521, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 521, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 521, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 521, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 521, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 521, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":522
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 522, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 522, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 522, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 522, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":523
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 523, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":524
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":522
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L294;
            }

            /* "CACompute.pyx":526
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 526, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 526, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L294:;

            /* "CACompute.pyx":521
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":527
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 527, __pyx_L1_error)
          }

          /* "CACompute.pyx":529
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":530
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_14};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_14};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_4, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 530, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 530, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 530, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 530, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 530, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 530, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 530, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 530, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":531
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 531, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 531, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 531, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 531, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":532
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_40 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 532, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":533
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":531
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L299;
            }

            /* "CACompute.pyx":535
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 535, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 535, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L299:;

            /* "CACompute.pyx":530
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":536
 *                         else:
 *                             set_temp.insert(int(x))
 *                     forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 536, __pyx_L1_error)
          }

          /* "CACompute.pyx":538
 *                     forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":539
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_14};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_14};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 539, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_40 = __pyx_t_39; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 539, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 539, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 539, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 539, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 539, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 539, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 539, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":540
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 540, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 540, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 540, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 540, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":541
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":542
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":540
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L304;
            }

            /* "CACompute.pyx":544
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 544, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L304:;

            /* "CACompute.pyx":539
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":545
 *                         else:
 *                             set_temp.insert(int(x))
 *                     killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 545, __pyx_L1_error)
          }

          /* "CACompute.pyx":547
 *                     killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":548
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 548, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_39 = __pyx_t_40; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 548, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 548, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 548, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 548, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 548, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 548, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":549
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 549, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_40 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 549, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 549, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 549, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":550
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_40 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 550, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":551
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":549
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L309;
            }

            /* "CACompute.pyx":553
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 553, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 553, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L309:;

            /* "CACompute.pyx":548
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":554
 *                         else:
 *                             set_temp.insert(int(x))
 *                     living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 554, __pyx_L1_error)
          }

          /* "CACompute.pyx":556
 *                     living.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":557
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_14, 2+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_14, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_2 = __pyx_t_39; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 557, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 557, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 557, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 557, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 557, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 557, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":558
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 558, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 558, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 558, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 558, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":559
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_40 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_39 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":560
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":558
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L314;
            }

            /* "CACompute.pyx":562
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 562, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 562, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L314:;

            /* "CACompute.pyx":557
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":563
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 563, __pyx_L1_error)
          }

          /* "CACompute.pyx":565
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":566
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_sub); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_40, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_5, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_14 = __pyx_t_2; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 566, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 566, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 566, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 566, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":567
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 567, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 567, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 567, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 567, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":568
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 568, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":569
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":567
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L319;
            }

            /* "CACompute.pyx":571
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L319:;

            /* "CACompute.pyx":566
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":572
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 572, __pyx_L1_error)
          }

          /* "CACompute.pyx":574
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":575
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_13, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_39, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_39, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_5 = __pyx_t_14; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 575, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 575, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 575, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 575, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 575, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 575, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 575, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":576
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_14 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 576, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 576, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":577
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_14 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 577, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":578
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":576
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L324;
            }

            /* "CACompute.pyx":580
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_forcing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 580, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 580, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L324:;

            /* "CACompute.pyx":575
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":581
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_forcing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_forcing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 581, __pyx_L1_error)
          }

          /* "CACompute.pyx":583
 *                     other_forcing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":584
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_39};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_39};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_12, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_4, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_13 = __pyx_t_5; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 584, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 584, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 584, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 584, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":585
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 585, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 585, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 585, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":586
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_14 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 586, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":587
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":585
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L329;
            }

            /* "CACompute.pyx":589
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_killing.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 589, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 589, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L329:;

            /* "CACompute.pyx":584
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":590
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_killing.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_killing.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 590, __pyx_L1_error)
          }

          /* "CACompute.pyx":592
 *                     other_killing.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":593
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_39};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_39};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 593, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_4 = __pyx_t_13; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 593, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 593, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 593, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 593, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 593, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 593, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":594
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 594, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":595
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 595, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":596
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":594
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L334;
            }

            /* "CACompute.pyx":598
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_living.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 598, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 598, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L334:;

            /* "CACompute.pyx":593
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"b|s|f|k|l|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":599
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_living.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 */
          try {
            __pyx_v_9CACompute_other_living.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 599, __pyx_L1_error)
          }

          /* "CACompute.pyx":601
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_13};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L337_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_f_k_l_nn, __pyx_t_13};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L337_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              {
                __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 601, __pyx_L337_error)
                __Pyx_GOTREF(__pyx_t_2);
                if (__pyx_t_3) {
                  __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_f_k_l_nn);
                PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b_b_s_f_k_l_nn);
                __Pyx_GIVEREF(__pyx_t_13);
                PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_13);
                __pyx_t_13 = 0;
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L337_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              }
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 601, __pyx_L337_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 601, __pyx_L337_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L344_try_end;
            __pyx_L337_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":602
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Extended Generations":
 *         for individual_rule_string in rule_string:
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_2) < 0) __PYX_ERR(0, 602, __pyx_L339_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_2);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 602, __pyx_L339_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L338_exception_handled;
            }
            goto __pyx_L339_except_error;
            __pyx_L339_except_error:;

            /* "CACompute.pyx":601
 *                     other_living.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L338_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L344_try_end:;
          }
        }
        __pyx_L226:;

        /* "CACompute.pyx":416
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      }
      __pyx_L154:;

      /* "CACompute.pyx":318
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    }

    /* "CACompute.pyx":317
 *                     try: naive_lst.push_back(int(re.split(b"b|s|nn", individual_rule_string)[3]))
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
    goto __pyx_L44;
  }

  /* "CACompute.pyx":603
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
  __pyx_t_8 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
  if (__pyx_t_8) {

    /* "CACompute.pyx":604
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_35 = __pyx_v_rule_string.begin();
    for (;;) {
      if (!(__pyx_t_35 != __pyx_v_rule_string.end())) break;
      __pyx_t_1 = *__pyx_t_35;
      ++__pyx_t_35;
      __pyx_v_individual_rule_string = __pyx_t_1;

      /* "CACompute.pyx":605
 *     elif rule_space == b"Extended Generations":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":606
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":607
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":608
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 608, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 608, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 608, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 608, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 608, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 608, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":609
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 609, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":610
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 610, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":611
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":609
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L353;
            }

            /* "CACompute.pyx":613
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 613, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 613, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L353:;

            /* "CACompute.pyx":608
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":614
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 614, __pyx_L1_error)
          }

          /* "CACompute.pyx":616
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":617
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 617, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_2 = __pyx_t_5; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 617, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 617, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 617, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 617, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 617, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 617, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":618
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 618, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 618, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 618, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 618, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":619
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 619, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":620
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":618
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L358;
            }

            /* "CACompute.pyx":622
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 622, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L358:;

            /* "CACompute.pyx":617
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":623
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 623, __pyx_L1_error)
          }

          /* "CACompute.pyx":625
 *                     survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CACompute.pyx":626
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 626, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 626, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 626, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 626, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":627
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))
 */
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 627, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_12);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 627, __pyx_L1_error)
            }

            /* "CACompute.pyx":626
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":629
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 629, __pyx_L363_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 629, __pyx_L363_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L370_try_end;
            __pyx_L363_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":630
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_13, &__pyx_t_2) < 0) __PYX_ERR(0, 630, __pyx_L365_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_GOTREF(__pyx_t_2);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 630, __pyx_L365_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              goto __pyx_L364_exception_handled;
            }
            goto __pyx_L365_except_error;
            __pyx_L365_except_error:;

            /* "CACompute.pyx":629
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L364_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L370_try_end:;
          }

          /* "CACompute.pyx":606
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[1].split(b","):
 */
          goto __pyx_L350;
        }

        /* "CACompute.pyx":632
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":633
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_t_5};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 633, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_b_s_d_nn, __pyx_t_5};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 633, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 633, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_14, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 633, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_13 = __pyx_t_2; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 633, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 633, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 633, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 633, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 633, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":634
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 634, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":635
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 635, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":636
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":634
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L375;
            }

            /* "CACompute.pyx":638
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 638, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 638, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L375:;

            /* "CACompute.pyx":633
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[1].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":639
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 639, __pyx_L1_error)
          }

          /* "CACompute.pyx":641
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":642
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_t_4};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 642, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 642, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_2 = __pyx_t_13; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 642, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 642, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 642, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 642, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 642, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 642, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":643
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 643, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 643, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 643, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 643, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":644
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 644, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":645
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":643
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L380;
            }

            /* "CACompute.pyx":647
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 647, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 647, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L380:;

            /* "CACompute.pyx":642
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":648
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 648, __pyx_L1_error)
          }

          /* "CACompute.pyx":650
 *                     survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CACompute.pyx":651
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_t_14};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 651, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_b_s_d_nn, __pyx_t_14};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 651, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 651, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b_b_s_d_nn);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 651, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_13 = __pyx_t_2; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 651, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 651, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 651, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 651, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 651, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 651, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":652
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 */
            __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 652, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 652, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_12);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 652, __pyx_L1_error)
            }

            /* "CACompute.pyx":651
 * 
 *                     extended.clear()
 *                     for x in re.split(b"b|s|d|nn", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":654
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_t_2};
                __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 654, __pyx_L385_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_b_s_d_nn, __pyx_t_2};
                __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 654, __pyx_L385_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              } else
              #endif
              {
                __pyx_t_14 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 654, __pyx_L385_error)
                __Pyx_GOTREF(__pyx_t_14);
                if (__pyx_t_5) {
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_5); __pyx_t_5 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_12, __pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_t_2);
                PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_12, __pyx_t_2);
                __pyx_t_2 = 0;
                __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_14, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 654, __pyx_L385_error)
                __Pyx_GOTREF(__pyx_t_13);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 654, __pyx_L385_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 654, __pyx_L385_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L392_try_end;
            __pyx_L385_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":655
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_13, &__pyx_t_3, &__pyx_t_14) < 0) __PYX_ERR(0, 655, __pyx_L387_except_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_14);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 655, __pyx_L387_except_error)
              }
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              goto __pyx_L386_exception_handled;
            }
            goto __pyx_L387_except_error;
            __pyx_L387_except_error:;

            /* "CACompute.pyx":654
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L386_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L392_try_end:;
          }
        }
        __pyx_L350:;

        /* "CACompute.pyx":605
 *     elif rule_space == b"Extended Generations":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
        goto __pyx_L349;
      }

      /* "CACompute.pyx":656
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":657
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":658
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":659
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_3 = __pyx_t_14; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_7 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 659, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_3))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 659, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 659, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 659, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 659, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_3);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 659, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":660
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 660, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 660, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            (void)(__pyx_v_set_temp.insert(__pyx_t_12));

            /* "CACompute.pyx":659
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)
 */
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "CACompute.pyx":661
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 *                         set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 661, __pyx_L1_error)
          }

          /* "CACompute.pyx":663
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":664
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_13};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 664, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_13};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 664, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 664, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_14 = __pyx_t_3; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 664, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 664, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 664, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 664, __pyx_L1_error)
                #else
                __pyx_t_3 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_3);
                #endif
              }
            } else {
              __pyx_t_3 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_3)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 664, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
            __pyx_t_3 = 0;

            /* "CACompute.pyx":665
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 665, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 665, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 665, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 665, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":666
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 666, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":667
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":665
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L400;
            }

            /* "CACompute.pyx":669
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 669, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L400:;

            /* "CACompute.pyx":664
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[0])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":670
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 670, __pyx_L1_error)
          }

          /* "CACompute.pyx":672
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":673
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 673, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 673, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 673, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_12, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_13, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 673, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 673, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_4 = __pyx_t_14; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 673, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 673, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 673, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 673, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 673, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 673, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 673, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":674
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 674, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_14 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 674, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 674, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 674, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":675
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_3 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_14 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 675, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":676
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":674
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L405;
            }

            /* "CACompute.pyx":678
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 678, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L405:;

            /* "CACompute.pyx":673
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":679
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 679, __pyx_L1_error)
          }

          /* "CACompute.pyx":681
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":682
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 682, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_5};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 682, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_2, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 682, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
            __pyx_t_13 = __pyx_t_4; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 682, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 682, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 682, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 682, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 682, __pyx_L1_error)
                #else
                __pyx_t_4 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 682, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_4);
                #endif
              }
            } else {
              __pyx_t_4 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_4)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 682, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_4);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
            __pyx_t_4 = 0;

            /* "CACompute.pyx":683
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 683, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 683, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 683, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 683, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":684
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 684, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":685
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":683
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L410;
            }

            /* "CACompute.pyx":687
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L410:;

            /* "CACompute.pyx":682
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[0]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":688
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 688, __pyx_L1_error)
          }

          /* "CACompute.pyx":690
 *                     other_survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CACompute.pyx":691
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_13 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_4 = __pyx_t_13; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 691, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 691, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 691, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 691, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 691, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 691, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 691, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":692
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))
 */
            __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 692, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 692, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_12);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 692, __pyx_L1_error)
            }

            /* "CACompute.pyx":691
 * 
 *                     extended.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":694
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 694, __pyx_L415_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 694, __pyx_L415_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L422_try_end;
            __pyx_L415_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":695
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     set_temp.clear()
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_2, &__pyx_t_13) < 0) __PYX_ERR(0, 695, __pyx_L417_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_13);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 695, __pyx_L417_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              goto __pyx_L416_exception_handled;
            }
            goto __pyx_L417_except_error;
            __pyx_L417_except_error:;

            /* "CACompute.pyx":694
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[3]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L416_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L422_try_end:;
          }

          /* "CACompute.pyx":657
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[1])[0].split(b","):
 */
          goto __pyx_L395;
        }

        /* "CACompute.pyx":697
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
        /*else*/ {
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":698
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_findall); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_39 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_bsd, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_bsd, __pyx_t_5};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_40, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_40, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_2 = __pyx_t_13; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 698, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 698, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 698, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 698, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 698, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 698, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":699
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 699, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 699, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 699, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 699, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":700
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 700, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":701
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":699
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L427;
            }

            /* "CACompute.pyx":703
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 703, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 703, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L427:;

            /* "CACompute.pyx":698
 *                 else:
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[1])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":704
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 704, __pyx_L1_error)
          }

          /* "CACompute.pyx":706
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":707
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_findall); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_bsd, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_bsd, __pyx_t_3};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_39, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_14, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b__15, __pyx_t_4};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_12, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_39, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 707, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_13 = __pyx_t_2; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 707, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 707, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 707, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 707, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 707, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 707, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 707, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":708
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 708, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 708, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 708, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":709
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_2 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 709, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":710
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":708
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L432;
            }

            /* "CACompute.pyx":712
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 712, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 712, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L432:;

            /* "CACompute.pyx":707
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"[bsd]", individual_rule_string)[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":713
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 713, __pyx_L1_error)
          }

          /* "CACompute.pyx":715
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":716
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_sub); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_bsd, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_bsd, __pyx_t_4};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_5, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_14};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_39 = __pyx_t_13; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 716, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 716, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 716, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 716, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 716, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 716, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 716, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":717
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 717, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 717, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 717, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 717, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":718
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 718, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_22; __pyx_t_12 < __pyx_t_21; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":719
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":717
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L437;
            }

            /* "CACompute.pyx":721
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 721, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 721, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L437:;

            /* "CACompute.pyx":716
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[1]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":722
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 722, __pyx_L1_error)
          }

          /* "CACompute.pyx":724
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":725
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_bsd, __pyx_t_14};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_bsd, __pyx_t_14};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_2, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_12, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_12, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_12, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 725, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_5 = __pyx_t_39; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 725, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 725, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 725, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 725, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 725, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 725, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 725, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":726
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 726, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 726, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 726, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 726, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":727
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 727, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_12 = __pyx_t_21; __pyx_t_12 < __pyx_t_22; __pyx_t_12+=1) {
                __pyx_v_i = __pyx_t_12;

                /* "CACompute.pyx":728
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":726
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L442;
            }

            /* "CACompute.pyx":730
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 730, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 730, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_12));
            }
            __pyx_L442:;

            /* "CACompute.pyx":725
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"[bsd]", individual_rule_string)[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":731
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     extended.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 731, __pyx_L1_error)
          }

          /* "CACompute.pyx":733
 *                     other_survival.push_back(set_temp)
 * 
 *                     extended.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))
 */
          __pyx_v_extended.clear();

          /* "CACompute.pyx":734
 * 
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_40 = NULL;
          __pyx_t_12 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_12 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_bsd, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 734, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_bsd, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 734, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 734, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_kp_b_bsd);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_12, __pyx_kp_b_bsd);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_12, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 734, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_39 = __pyx_t_5; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 734, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 734, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 734, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 734, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 734, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":735
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):
 *                         extended.push_back(int(x))             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 */
            __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 735, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 735, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            try {
              __pyx_v_extended.push_back(__pyx_t_12);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 735, __pyx_L1_error)
            }

            /* "CACompute.pyx":734
 * 
 *                     extended.clear()
 *                     for x in re.split(b"[bsd]", individual_rule_string)[3].split(b"-"):             # <<<<<<<<<<<<<<
 *                         extended.push_back(int(x))
 * 
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":737
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              __pyx_t_12 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                  __pyx_t_12 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_t_5};
                __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 737, __pyx_L447_error)
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
                PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_b_s_d_nn, __pyx_t_5};
                __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_12, 2+__pyx_t_12); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 737, __pyx_L447_error)
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              } else
              #endif
              {
                __pyx_t_13 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 737, __pyx_L447_error)
                __Pyx_GOTREF(__pyx_t_13);
                if (__pyx_t_2) {
                  __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_2); __pyx_t_2 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_kp_b_b_s_d_nn);
                PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_kp_b_b_s_d_nn);
                __Pyx_GIVEREF(__pyx_t_5);
                PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_5);
                __pyx_t_5 = 0;
                __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_13, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 737, __pyx_L447_error)
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              }
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 737, __pyx_L447_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_12);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 737, __pyx_L447_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L454_try_end;
            __pyx_L447_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":738
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 * 
 *             num, alt = 1, 1
 */
            __pyx_t_12 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_12) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_39, &__pyx_t_3, &__pyx_t_13) < 0) __PYX_ERR(0, 738, __pyx_L449_except_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_13);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 738, __pyx_L449_except_error)
              }
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              goto __pyx_L448_exception_handled;
            }
            goto __pyx_L449_except_error;
            __pyx_L449_except_error:;

            /* "CACompute.pyx":737
 *                         extended.push_back(int(x))
 * 
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L448_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L454_try_end:;
          }
        }
        __pyx_L395:;

        /* "CACompute.pyx":656
 *                     try: naive_lst.push_back(int(re.split(b"b|s|d|nn", individual_rule_string)[4]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     set_temp.clear()
 */
      }
      __pyx_L349:;

      /* "CACompute.pyx":740
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 *             num, alt = 1, 1             # <<<<<<<<<<<<<<
 *             set_temp.clear()
 *             for i in extended:
 */
      __pyx_t_12 = 1;
      __pyx_t_24 = 1;
      __pyx_v_num = __pyx_t_12;
      __pyx_v_alt = __pyx_t_24;

      /* "CACompute.pyx":741
 * 
 *             num, alt = 1, 1
 *             set_temp.clear()             # <<<<<<<<<<<<<<
 *             for i in extended:
 *                 for j in range(num, i + num):
 */
      __pyx_v_set_temp.clear();

      /* "CACompute.pyx":742
 *             num, alt = 1, 1
 *             set_temp.clear()
 *             for i in extended:             # <<<<<<<<<<<<<<
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 */
      __pyx_t_34 = __pyx_v_extended.begin();
      for (;;) {
        if (!(__pyx_t_34 != __pyx_v_extended.end())) break;
        __pyx_t_24 = *__pyx_t_34;
        ++__pyx_t_34;
        __pyx_v_i = __pyx_t_24;

        /* "CACompute.pyx":743
 *             set_temp.clear()
 *             for i in extended:
 *                 for j in range(num, i + num):             # <<<<<<<<<<<<<<
 *                     if alt > 0:
 *                         set_temp.insert(j)
 */
        __pyx_t_24 = (__pyx_v_i + __pyx_v_num);
        __pyx_t_12 = __pyx_t_24;
        for (__pyx_t_26 = __pyx_v_num; __pyx_t_26 < __pyx_t_12; __pyx_t_26+=1) {
          __pyx_v_j = __pyx_t_26;

          /* "CACompute.pyx":744
 *             for i in extended:
 *                 for j in range(num, i + num):
 *                     if alt > 0:             # <<<<<<<<<<<<<<
 *                         set_temp.insert(j)
 *                     num += 1
 */
          __pyx_t_8 = ((__pyx_v_alt > 0) != 0);
          if (__pyx_t_8) {

            /* "CACompute.pyx":745
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 *                         set_temp.insert(j)             # <<<<<<<<<<<<<<
 *                     num += 1
 *                 alt *= -1
 */
            (void)(__pyx_v_set_temp.insert(__pyx_v_j));

            /* "CACompute.pyx":744
 *             for i in extended:
 *                 for j in range(num, i + num):
 *                     if alt > 0:             # <<<<<<<<<<<<<<
 *                         set_temp.insert(j)
 *                     num += 1
 */
          }

          /* "CACompute.pyx":746
 *                     if alt > 0:
 *                         set_temp.insert(j)
 *                     num += 1             # <<<<<<<<<<<<<<
 *                 alt *= -1
 * 
 */
          __pyx_v_num = (__pyx_v_num + 1);
        }

        /* "CACompute.pyx":747
 *                         set_temp.insert(j)
 *                     num += 1
 *                 alt *= -1             # <<<<<<<<<<<<<<
 * 
 *             activity_list.push_back(set_temp)
 */
        __pyx_v_alt = (__pyx_v_alt * -1L);

        /* "CACompute.pyx":742
 *             num, alt = 1, 1
 *             set_temp.clear()
 *             for i in extended:             # <<<<<<<<<<<<<<
 *                 for j in range(num, i + num):
 *                     if alt > 0:
 */
      }

      /* "CACompute.pyx":749
 *                 alt *= -1
 * 
 *             activity_list.push_back(set_temp)             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Regenerating Generations":
 *         for individual_rule_string in rule_string:
 */
      try {
        __pyx_v_9CACompute_activity_list.push_back(__pyx_v_set_temp);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 749, __pyx_L1_error)
      }

      /* "CACompute.pyx":604
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    }

    /* "CACompute.pyx":603
 *                     try: naive_lst.push_back(int(re.split(b"b|s|f|k|l|nn", individual_rule_string)[6]))
 *                     except IndexError: naive_lst.push_back(-1)
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
    goto __pyx_L44;
  }

  /* "CACompute.pyx":750
 * 
 *             activity_list.push_back(set_temp)
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
  __pyx_t_8 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
  if (__pyx_t_8) {

    /* "CACompute.pyx":751
 *             activity_list.push_back(set_temp)
 *     elif rule_space == b"Regenerating Generations":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    __pyx_t_35 = __pyx_v_rule_string.begin();
    for (;;) {
      if (!(__pyx_t_35 != __pyx_v_rule_string.end())) break;
      __pyx_t_1 = *__pyx_t_35;
      ++__pyx_t_35;
      __pyx_v_individual_rule_string = __pyx_t_1;

      /* "CACompute.pyx":752
 *     elif rule_space == b"Regenerating Generations":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":753
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":754
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 754, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_v_9CACompute_birth_state = __pyx_t_24;

          /* "CACompute.pyx":756
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":757
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 757, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_39 = __pyx_t_13; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 757, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 757, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 757, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 757, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 757, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 757, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 757, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":758
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 758, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 758, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 758, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 758, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":759
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 759, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":760
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":758
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L468;
            }

            /* "CACompute.pyx":762
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 762, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L468:;

            /* "CACompute.pyx":757
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[2].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":763
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 763, __pyx_L1_error)
          }

          /* "CACompute.pyx":765
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":766
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 766, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_13 = __pyx_t_39; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 766, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 766, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 766, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 766, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 766, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 766, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 766, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":767
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 767, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 767, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 767, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 767, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":768
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":769
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":767
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L473;
            }

            /* "CACompute.pyx":771
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 771, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 771, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L473:;

            /* "CACompute.pyx":766
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":772
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 772, __pyx_L1_error)
          }

          /* "CACompute.pyx":774
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":775
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 775, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_39 = __pyx_t_13; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 775, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 775, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 775, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 775, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 775, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 775, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 775, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":776
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 776, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 776, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 776, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 776, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":777
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 777, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":778
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":776
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L478;
            }

            /* "CACompute.pyx":780
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 780, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L478:;

            /* "CACompute.pyx":775
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":781
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 781, __pyx_L1_error)
          }

          /* "CACompute.pyx":783
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":784
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 784, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_13 = __pyx_t_39; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 784, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 784, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 784, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 784, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 784, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 784, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 784, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":785
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 785, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 785, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 785, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 785, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":786
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 786, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":787
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":785
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L483;
            }

            /* "CACompute.pyx":789
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 789, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L483:;

            /* "CACompute.pyx":784
 * 
 *                     set_temp.clear()
 *                     for x in individual_rule_string.split(b"/")[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":790
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))
 */
          try {
            __pyx_v_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 790, __pyx_L1_error)
          }

          /* "CACompute.pyx":792
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_13 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 792, __pyx_L486_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_24);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 792, __pyx_L486_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L493_try_end;
            __pyx_L486_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":793
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_24 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_24) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_13, &__pyx_t_3, &__pyx_t_39) < 0) __PYX_ERR(0, 793, __pyx_L488_except_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_GOTREF(__pyx_t_39);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 793, __pyx_L488_except_error)
              }
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              goto __pyx_L487_exception_handled;
            }
            goto __pyx_L488_except_error;
            __pyx_L488_except_error:;

            /* "CACompute.pyx":792
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L487_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L493_try_end:;
          }

          /* "CACompute.pyx":753
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
          goto __pyx_L465;
        }

        /* "CACompute.pyx":795
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 795, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 795, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 795, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 795, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_39, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 795, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_v_9CACompute_birth_state = __pyx_t_24;

          /* "CACompute.pyx":797
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":798
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_24, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_40, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 798, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_13 = __pyx_t_39; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 798, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 798, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 798, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 798, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 798, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 798, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 798, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":799
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 799, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":800
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_3 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 800, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":801
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":799
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L498;
            }

            /* "CACompute.pyx":803
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 803, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 803, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L498:;

            /* "CACompute.pyx":798
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":804
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 804, __pyx_L1_error)
          }

          /* "CACompute.pyx":806
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":807
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 807, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 807, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 807, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_5, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 807, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_39, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 807, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_39 = __pyx_t_13; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 807, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 807, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 807, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 807, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 807, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 807, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 807, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":808
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 808, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 808, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 808, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 808, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":809
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_40 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 809, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":810
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":808
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L503;
            }

            /* "CACompute.pyx":812
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 812, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 812, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L503:;

            /* "CACompute.pyx":807
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":813
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 813, __pyx_L1_error)
          }

          /* "CACompute.pyx":815
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":816
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 816, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 816, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 816, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 816, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 816, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_13 = __pyx_t_39; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 816, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 816, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 816, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 816, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 816, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 816, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 816, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":817
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 817, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 817, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":818
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":819
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":817
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L508;
            }

            /* "CACompute.pyx":821
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 821, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 821, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L508:;

            /* "CACompute.pyx":816
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":822
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 822, __pyx_L1_error)
          }

          /* "CACompute.pyx":824
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":825
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_40 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_5};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 825, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_5};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 825, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 825, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_13 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 825, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_39 = __pyx_t_13; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 825, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 825, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 825, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 825, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 825, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":826
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 826, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 826, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 826, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 826, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":827
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 827, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":828
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":826
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L513;
            }

            /* "CACompute.pyx":830
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 830, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L513:;

            /* "CACompute.pyx":825
 * 
 *                     set_temp.clear()
 *                     for x in re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":831
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 */
          try {
            __pyx_v_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 831, __pyx_L1_error)
          }

          /* "CACompute.pyx":833
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              __pyx_t_24 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                  __pyx_t_24 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_13};
                __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 833, __pyx_L516_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
                PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_13};
                __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 833, __pyx_L516_error)
                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              } else
              #endif
              {
                __pyx_t_5 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 833, __pyx_L516_error)
                __Pyx_GOTREF(__pyx_t_5);
                if (__pyx_t_3) {
                  __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_t_13);
                PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_24, __pyx_t_13);
                __pyx_t_13 = 0;
                __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 833, __pyx_L516_error)
                __Pyx_GOTREF(__pyx_t_39);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L516_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_24);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 833, __pyx_L516_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L523_try_end;
            __pyx_L516_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":834
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
            __pyx_t_24 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_24) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_39, &__pyx_t_2, &__pyx_t_5) < 0) __PYX_ERR(0, 834, __pyx_L518_except_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_5);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 834, __pyx_L518_except_error)
              }
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              goto __pyx_L517_exception_handled;
            }
            goto __pyx_L518_except_error;
            __pyx_L518_except_error:;

            /* "CACompute.pyx":833
 *                     regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L517_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L523_try_end:;
          }
        }
        __pyx_L465:;

        /* "CACompute.pyx":752
 *     elif rule_space == b"Regenerating Generations":
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
        goto __pyx_L464;
      }

      /* "CACompute.pyx":835
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      __pyx_t_8 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
      if (__pyx_t_8) {

        /* "CACompute.pyx":836
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
        __pyx_t_8 = ((__pyx_v_individual_rule_string.find(__pyx_k__13) != -1L) != 0);
        if (__pyx_t_8) {

          /* "CACompute.pyx":837
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 837, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_9CACompute_birth_state = __pyx_t_24;

          /* "CACompute.pyx":839
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":840
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 840, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 840, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 840, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_3, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 840, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 840, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_39 = __pyx_t_5; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 840, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 840, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 840, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 840, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 840, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 840, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 840, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":841
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 841, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 841, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 841, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 841, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":842
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 842, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":843
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":841
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L529;
            }

            /* "CACompute.pyx":845
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 845, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 845, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L529:;

            /* "CACompute.pyx":840
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[2])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":846
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 846, __pyx_L1_error)
          }

          /* "CACompute.pyx":848
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":849
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_40, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 849, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_24, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_40, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 849, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_5 = __pyx_t_39; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 849, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 849, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 849, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 849, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 849, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 849, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 849, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":850
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 850, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 850, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 850, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 850, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":851
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_3 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 851, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":852
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":850
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L534;
            }

            /* "CACompute.pyx":854
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 854, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 854, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L534:;

            /* "CACompute.pyx":849
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":855
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 855, __pyx_L1_error)
          }

          /* "CACompute.pyx":857
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":858
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_2, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 858, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 858, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_2, 2+__pyx_t_24, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_2, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 858, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_5 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 858, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_40 = __pyx_t_5; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 858, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 858, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 858, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 858, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 858, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 858, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 858, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":859
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 859, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 859, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 859, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 859, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":860
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_5 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 860, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":861
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":859
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L539;
            }

            /* "CACompute.pyx":863
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 863, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 863, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L539:;

            /* "CACompute.pyx":858
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[2]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":864
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 864, __pyx_L1_error)
          }

          /* "CACompute.pyx":866
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":867
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_39, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_39, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_39, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_13, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 867, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 867, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 867, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 867, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 867, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 867, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 867, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 867, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":868
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 868, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_40 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 868, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 868, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 868, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":869
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_40 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 869, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":870
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":868
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L544;
            }

            /* "CACompute.pyx":872
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 872, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L544:;

            /* "CACompute.pyx":867
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":873
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 873, __pyx_L1_error)
          }

          /* "CACompute.pyx":875
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":876
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_findall); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_3, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_3, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 876, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_40 = __pyx_t_2; __Pyx_INCREF(__pyx_t_40); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_40 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 876, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_7 = Py_TYPE(__pyx_t_40)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 876, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_40))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 876, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 876, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_40)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_40, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 876, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_40, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 876, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_40);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 876, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":877
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 877, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 877, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 877, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 877, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":878
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 878, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":879
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":877
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L549;
            }

            /* "CACompute.pyx":881
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 881, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 881, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L549:;

            /* "CACompute.pyx":876
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;

          /* "CACompute.pyx":882
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 882, __pyx_L1_error)
          }

          /* "CACompute.pyx":884
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":885
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_13 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_13, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_39 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_39, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_39, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_39, 1+__pyx_t_24, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_39, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 885, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_40)) || PyTuple_CheckExact(__pyx_t_40)) {
            __pyx_t_2 = __pyx_t_40; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 885, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 885, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 885, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_40 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_40); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 885, __pyx_L1_error)
                #else
                __pyx_t_40 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 885, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_40);
                #endif
              }
            } else {
              __pyx_t_40 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_40)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 885, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_40);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_40);
            __pyx_t_40 = 0;

            /* "CACompute.pyx":886
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_39 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_39)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_39);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_40, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 886, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":887
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_3 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_40 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_39, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_40, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_40); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 887, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":888
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":886
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L554;
            }

            /* "CACompute.pyx":890
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 890, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_40); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 890, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L554:;

            /* "CACompute.pyx":885
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", individual_rule_string.split(b"/")[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":891
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 891, __pyx_L1_error)
          }

          /* "CACompute.pyx":893
 *                     regen_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":894
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 894, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_13};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 894, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_24, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_5, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 894, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_2 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_39 = __pyx_t_2; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 894, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 894, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 894, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 894, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 894, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 894, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 894, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":895
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 895, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":896
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_40 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 896, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":897
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":895
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L559;
            }

            /* "CACompute.pyx":899
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 899, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L559:;

            /* "CACompute.pyx":894
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":900
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 900, __pyx_L1_error)
          }

          /* "CACompute.pyx":902
 *                     other_regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":903
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_sub); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_40 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_13, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__13);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_40, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 903, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[4] = {__pyx_t_40, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 903, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 903, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 903, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 903, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_5 = __pyx_t_39; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 903, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 903, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 903, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 903, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 903, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 903, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 903, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":904
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 904, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 904, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 904, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 904, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":905
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 905, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":906
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":904
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L564;
            }

            /* "CACompute.pyx":908
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 908, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 908, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L564:;

            /* "CACompute.pyx":903
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", individual_rule_string.split(b"/")[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":909
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))
 */
          try {
            __pyx_v_9CACompute_other_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 909, __pyx_L1_error)
          }

          /* "CACompute.pyx":911
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_36, &__pyx_t_37, &__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_38);
            /*try:*/ {
              __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_39)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_39);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_5 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_39, __pyx_kp_b__13) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__13);
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 911, __pyx_L567_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_24);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 911, __pyx_L567_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            goto __pyx_L574_try_end;
            __pyx_L567_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":912
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 */
            __pyx_t_24 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_24) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_2, &__pyx_t_39) < 0) __PYX_ERR(0, 912, __pyx_L569_except_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GOTREF(__pyx_t_39);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 912, __pyx_L569_except_error)
              }
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
              goto __pyx_L568_exception_handled;
            }
            goto __pyx_L569_except_error;
            __pyx_L569_except_error:;

            /* "CACompute.pyx":911
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(individual_rule_string.split(b"/")[6]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 */
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            goto __pyx_L1_error;
            __pyx_L568_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_ExceptionReset(__pyx_t_36, __pyx_t_37, __pyx_t_38);
            __pyx_L574_try_end:;
          }

          /* "CACompute.pyx":836
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:             # <<<<<<<<<<<<<<
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 * 
 */
          goto __pyx_L526;
        }

        /* "CACompute.pyx":914
 *                     except IndexError: naive_lst.push_back(-1)
 *                 else:
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_13 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 914, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 914, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 914, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 914, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 914, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_v_9CACompute_birth_state = __pyx_t_24;

          /* "CACompute.pyx":916
 *                     birth_state = int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[2])
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":917
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_re); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_14 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_13};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_13);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_24, __pyx_t_13);
            __pyx_t_13 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b__15, __pyx_t_40};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
            }
          }
          __pyx_t_39 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 917, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_5 = __pyx_t_39; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 917, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_5))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 917, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 917, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 917, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 917, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_5);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 917, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":918
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 918, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
              }
            }
            __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 918, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 918, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 918, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":919
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_39 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":920
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":918
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L579;
            }

            /* "CACompute.pyx":922
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 922, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L579:;

            /* "CACompute.pyx":917
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "CACompute.pyx":923
 *                         else:
 *                             set_temp.insert(int(x))
 *                     birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 923, __pyx_L1_error)
          }

          /* "CACompute.pyx":925
 *                     birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":926
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_findall); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_13 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_13) {
              __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_13); __pyx_t_13 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_14, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b__15, __pyx_t_3};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_14 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_14, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_14, 1+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_14, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
            }
          }
          __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_4, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 926, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
            __pyx_t_39 = __pyx_t_5; __Pyx_INCREF(__pyx_t_39); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_39 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 926, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_7 = Py_TYPE(__pyx_t_39)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 926, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_39))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyList_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 926, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 926, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_39)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_39, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 926, __pyx_L1_error)
                #else
                __pyx_t_5 = PySequence_ITEM(__pyx_t_39, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 926, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_5);
                #endif
              }
            } else {
              __pyx_t_5 = __pyx_t_7(__pyx_t_39);
              if (unlikely(!__pyx_t_5)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 926, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_5);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
            __pyx_t_5 = 0;

            /* "CACompute.pyx":927
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 927, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_14 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
              __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
              if (likely(__pyx_t_14)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                __Pyx_INCREF(__pyx_t_14);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_4, function);
              }
            }
            __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 927, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyInt_NeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 927, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 927, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":928
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_14 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
                __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
                if (likely(__pyx_t_14)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                  __Pyx_INCREF(__pyx_t_14);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_4, function);
                }
              }
              __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_14, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_5); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 928, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":929
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":927
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L584;
            }

            /* "CACompute.pyx":931
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 931, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L584:;

            /* "CACompute.pyx":926
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;

          /* "CACompute.pyx":932
 *                         else:
 *                             set_temp.insert(int(x))
 *                     survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 932, __pyx_L1_error)
          }

          /* "CACompute.pyx":934
 *                     survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":935
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_sub); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_40 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_3};
            __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_14)) {
            PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_14, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_13 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_24, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_13, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_39 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_5, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 935, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_39)) || PyTuple_CheckExact(__pyx_t_39)) {
            __pyx_t_14 = __pyx_t_39; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_39); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 935, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 935, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 935, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 935, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_39 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_39); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 935, __pyx_L1_error)
                #else
                __pyx_t_39 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 935, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_39);
                #endif
              }
            } else {
              __pyx_t_39 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_39)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 935, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_39);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_39);
            __pyx_t_39 = 0;

            /* "CACompute.pyx":936
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 936, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_13 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
              }
            }
            __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 936, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_39, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 936, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 936, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":937
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_5 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __pyx_t_13 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_13)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_13);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                }
              }
              __pyx_t_39 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_13, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_39); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":938
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":936
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L589;
            }

            /* "CACompute.pyx":940
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 940, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_39); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 940, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L589:;

            /* "CACompute.pyx":935
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[3]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":941
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 941, __pyx_L1_error)
          }

          /* "CACompute.pyx":943
 *                     other_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":944
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_sub); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
            __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_24, __pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_40, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
            PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_40 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_40, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_40, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_40, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_40, 2+__pyx_t_24, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_40, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_14 = (__pyx_t_39) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_39, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 944, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_13 = __pyx_t_14; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 944, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 944, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 944, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 944, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 944, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 944, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 944, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":945
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __pyx_t_40 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
              __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
              if (likely(__pyx_t_40)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                __Pyx_INCREF(__pyx_t_40);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_39, function);
              }
            }
            __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            __pyx_t_39 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_39); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 945, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":946
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_39 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_39, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_39, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __pyx_t_40 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_39))) {
                __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_39);
                if (likely(__pyx_t_40)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
                  __Pyx_INCREF(__pyx_t_40);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_39, function);
                }
              }
              __pyx_t_14 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_39, __pyx_t_40, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_39, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_39);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_39); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":947
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":945
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L594;
            }

            /* "CACompute.pyx":949
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 949, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 949, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L594:;

            /* "CACompute.pyx":944
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[4]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":950
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 950, __pyx_L1_error)
          }

          /* "CACompute.pyx":952
 *                     other_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":953
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_findall); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_re); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_2 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
            PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_4};
            __pyx_t_39 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_2) {
              __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_4);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_4);
            __pyx_t_4 = 0;
            __pyx_t_39 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_39);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_39, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b__15, __pyx_t_5};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_3, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
            }
          }
          __pyx_t_13 = (__pyx_t_40) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_40, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 953, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_14 = __pyx_t_13; __Pyx_INCREF(__pyx_t_14); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_14 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 953, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_7 = Py_TYPE(__pyx_t_14)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 953, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_14))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 953, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 953, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_14)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_14, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 953, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_14, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 953, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_14);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 953, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":954
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 954, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __pyx_t_3 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_40);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_40, function);
              }
            }
            __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 954, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            __pyx_t_40 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 954, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_40); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 954, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":955
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_40 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_40, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_40, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __pyx_t_3 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_40))) {
                __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_40);
                if (likely(__pyx_t_3)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
                  __Pyx_INCREF(__pyx_t_3);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_40, function);
                }
              }
              __pyx_t_13 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_40, __pyx_t_3, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_40, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_40);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_40); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":956
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":954
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L599;
            }

            /* "CACompute.pyx":958
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 958, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L599:;

            /* "CACompute.pyx":953
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "CACompute.pyx":959
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 959, __pyx_L1_error)
          }

          /* "CACompute.pyx":961
 *                     regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":962
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_findall); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_re); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_39 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_39))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_39);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_39);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_39, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_39)) {
            PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_5};
            __pyx_t_40 = __Pyx_PyCFunction_FastCall(__pyx_t_39, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_4) {
              __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4); __pyx_t_4 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_24, __pyx_t_5);
            __pyx_t_5 = 0;
            __pyx_t_40 = __Pyx_PyObject_Call(__pyx_t_39, __pyx_t_2, NULL); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_40);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __Pyx_GetItemInt(__pyx_t_40, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_40 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_40)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_40);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_40, __pyx_kp_b__15, __pyx_t_39};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_2 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (__pyx_t_40) {
              __Pyx_GIVEREF(__pyx_t_40); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_40); __pyx_t_40 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_kp_b__15);
            PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_24, __pyx_kp_b__15);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_24, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_13, function);
            }
          }
          __pyx_t_14 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_3, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 962, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (likely(PyList_CheckExact(__pyx_t_14)) || PyTuple_CheckExact(__pyx_t_14)) {
            __pyx_t_13 = __pyx_t_14; __Pyx_INCREF(__pyx_t_13); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_13 = PyObject_GetIter(__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 962, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 962, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_13))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyList_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 962, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 962, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_13)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_14 = PyTuple_GET_ITEM(__pyx_t_13, __pyx_t_6); __Pyx_INCREF(__pyx_t_14); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 962, __pyx_L1_error)
                #else
                __pyx_t_14 = PySequence_ITEM(__pyx_t_13, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 962, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_14);
                #endif
              }
            } else {
              __pyx_t_14 = __pyx_t_7(__pyx_t_13);
              if (unlikely(!__pyx_t_14)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 962, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_14);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
            __pyx_t_14 = 0;

            /* "CACompute.pyx":963
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 963, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
              }
            }
            __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 963, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_t_14, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 963, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 963, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":964
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
                __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
                if (likely(__pyx_t_2)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                  __Pyx_INCREF(__pyx_t_2);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_3, function);
                }
              }
              __pyx_t_14 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_14); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":965
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":963
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L604;
            }

            /* "CACompute.pyx":967
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 967, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_14); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 967, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L604:;

            /* "CACompute.pyx":962
 * 
 *                     set_temp.clear()
 *                     for x in re.findall(b"\((.*?)\)", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6])[0].split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

          /* "CACompute.pyx":968
 *                         else:
 *                             set_temp.insert(int(x))
 *                     regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 968, __pyx_L1_error)
          }

          /* "CACompute.pyx":970
 *                     regen_survival.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":971
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_re); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sub); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_39, __pyx_n_s_re); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_40 = __Pyx_PyObject_GetAttrStr(__pyx_t_39, __pyx_n_s_split); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          __pyx_t_39 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_39)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_39);
          __pyx_t_5 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_40))) {
            __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_40);
            if (likely(__pyx_t_5)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_40);
              __Pyx_INCREF(__pyx_t_5);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_40, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_39};
            __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_40)) {
            PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_39};
            __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_40, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_39); __pyx_t_39 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_5) {
              __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_39);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_24, __pyx_t_39);
            __pyx_t_39 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_40, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
            PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_4 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            if (__pyx_t_3) {
              __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          __pyx_t_13 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_14, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 971, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (likely(PyList_CheckExact(__pyx_t_13)) || PyTuple_CheckExact(__pyx_t_13)) {
            __pyx_t_2 = __pyx_t_13; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 971, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 971, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_2))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 971, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 971, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_13); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 971, __pyx_L1_error)
                #else
                __pyx_t_13 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 971, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_13);
                #endif
              }
            } else {
              __pyx_t_13 = __pyx_t_7(__pyx_t_2);
              if (unlikely(!__pyx_t_13)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 971, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_13);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_13);
            __pyx_t_13 = 0;

            /* "CACompute.pyx":972
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 972, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_4 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
              }
            }
            __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 972, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyInt_NeObjC(__pyx_t_13, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 972, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_14); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 972, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":973
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_14 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_14, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyInt_AddObjC(__pyx_t_14, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_4 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
                __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
                if (likely(__pyx_t_4)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                  __Pyx_INCREF(__pyx_t_4);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_14, function);
                }
              }
              __pyx_t_13 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_13, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_14); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              __pyx_t_22 = __Pyx_PyInt_As_long(__pyx_t_13); if (unlikely((__pyx_t_22 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_22; __pyx_t_24 < __pyx_t_21; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":974
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":972
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L609;
            }

            /* "CACompute.pyx":976
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_birth.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 976, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L609:;

            /* "CACompute.pyx":971
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[5]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "CACompute.pyx":977
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_birth.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     set_temp.clear()
 */
          try {
            __pyx_v_9CACompute_other_regen_birth.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 977, __pyx_L1_error)
          }

          /* "CACompute.pyx":979
 *                     other_regen_birth.push_back(set_temp)
 * 
 *                     set_temp.clear()             # <<<<<<<<<<<<<<
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:
 */
          __pyx_v_set_temp.clear();

          /* "CACompute.pyx":980
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_sub); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_40, __pyx_n_s_re); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_40, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          __pyx_t_40 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_40)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_40);
          __pyx_t_39 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_39 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_39)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_39);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
            PyObject *__pyx_temp[3] = {__pyx_t_39, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_40};
            __pyx_t_14 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_40); __pyx_t_40 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_39) {
              __Pyx_GIVEREF(__pyx_t_39); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_39); __pyx_t_39 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
            __Pyx_GIVEREF(__pyx_t_40);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_24, __pyx_t_40);
            __pyx_t_40 = 0;
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_14, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = NULL;
          __pyx_t_24 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_14)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_14);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_24 = 1;
            }
          }
          #if CYTHON_FAST_PYCALL
          if (PyFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_13 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          #if CYTHON_FAST_PYCCALL
          if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
            PyObject *__pyx_temp[4] = {__pyx_t_14, __pyx_kp_b__16, __pyx_kp_b_, __pyx_t_3};
            __pyx_t_13 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_24, 3+__pyx_t_24); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          } else
          #endif
          {
            __pyx_t_5 = PyTuple_New(3+__pyx_t_24); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            if (__pyx_t_14) {
              __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_14); __pyx_t_14 = NULL;
            }
            __Pyx_INCREF(__pyx_kp_b__16);
            __Pyx_GIVEREF(__pyx_kp_b__16);
            PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_24, __pyx_kp_b__16);
            __Pyx_INCREF(__pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_kp_b_);
            PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_24, __pyx_kp_b_);
            __Pyx_GIVEREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_24, __pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_2 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_13, __pyx_kp_b__4) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_b__4);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 980, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_4 = __pyx_t_2; __Pyx_INCREF(__pyx_t_4); __pyx_t_6 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_6 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_7 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 980, __pyx_L1_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_4))) {
                if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 980, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 980, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 980, __pyx_L1_error)
                #else
                __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 980, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_4);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 980, __pyx_L1_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "CACompute.pyx":981
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
            __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_find); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_5 = NULL;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_13, function);
              }
            }
            __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = __Pyx_PyInt_NeObjC(__pyx_t_2, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_13); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 981, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            if (__pyx_t_8) {

              /* "CACompute.pyx":982
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):             # <<<<<<<<<<<<<<
 *                                 set_temp.insert(i)
 *                         else:
 */
              __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_2, function);
                }
              }
              __pyx_t_13 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_13, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_PyNumber_Int(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_13, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_20 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_20 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __pyx_t_5 = NULL;
              if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                }
              }
              __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_5, __pyx_kp_b__14) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_b__14);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_21 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_21 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_22 = __pyx_t_20;
              for (__pyx_t_24 = __pyx_t_21; __pyx_t_24 < __pyx_t_22; __pyx_t_24+=1) {
                __pyx_v_i = __pyx_t_24;

                /* "CACompute.pyx":983
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)             # <<<<<<<<<<<<<<
 *                         else:
 *                             set_temp.insert(int(x))
 */
                (void)(__pyx_v_set_temp.insert(__pyx_v_i));
              }

              /* "CACompute.pyx":981
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):
 *                         if x.find(b"-") != -1:             # <<<<<<<<<<<<<<
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 *                                 set_temp.insert(i)
 */
              goto __pyx_L614;
            }

            /* "CACompute.pyx":985
 *                                 set_temp.insert(i)
 *                         else:
 *                             set_temp.insert(int(x))             # <<<<<<<<<<<<<<
 *                     other_regen_survival.push_back(set_temp)
 * 
 */
            /*else*/ {
              __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 985, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 985, __pyx_L1_error)
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              (void)(__pyx_v_set_temp.insert(__pyx_t_24));
            }
            __pyx_L614:;

            /* "CACompute.pyx":980
 * 
 *                     set_temp.clear()
 *                     for x in re.sub(b"\(.*?\)", b"", re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[6]).split(b","):             # <<<<<<<<<<<<<<
 *                         if x.find(b"-") != -1:
 *                             for i in range(int(x.split(b"-")[0]), int(x.split(b"-")[1]) + 1):
 */
          }
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "CACompute.pyx":986
 *                         else:
 *                             set_temp.insert(int(x))
 *                     other_regen_survival.push_back(set_temp)             # <<<<<<<<<<<<<<
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 */
          try {
            __pyx_v_9CACompute_other_regen_survival.push_back(__pyx_v_set_temp);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 986, __pyx_L1_error)
          }

          /* "CACompute.pyx":988
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 */
          {
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __Pyx_ExceptionSave(&__pyx_t_38, &__pyx_t_37, &__pyx_t_36);
            __Pyx_XGOTREF(__pyx_t_38);
            __Pyx_XGOTREF(__pyx_t_37);
            __Pyx_XGOTREF(__pyx_t_36);
            /*try:*/ {
              __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_re); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_individual_rule_string); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_5 = NULL;
              __pyx_t_24 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
                __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_13);
                if (likely(__pyx_t_5)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
                  __Pyx_INCREF(__pyx_t_5);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_13, function);
                  __pyx_t_24 = 1;
                }
              }
              #if CYTHON_FAST_PYCALL
              if (PyFunction_Check(__pyx_t_13)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
                __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 988, __pyx_L617_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              } else
              #endif
              #if CYTHON_FAST_PYCCALL
              if (__Pyx_PyFastCFunction_Check(__pyx_t_13)) {
                PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_t_2};
                __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_13, __pyx_temp+1-__pyx_t_24, 2+__pyx_t_24); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 988, __pyx_L617_error)
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              } else
              #endif
              {
                __pyx_t_3 = PyTuple_New(2+__pyx_t_24); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 988, __pyx_L617_error)
                __Pyx_GOTREF(__pyx_t_3);
                if (__pyx_t_5) {
                  __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
                }
                __Pyx_INCREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_kp_b_rg_l_b_s_rb_rs_nn);
                PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_24, __pyx_kp_b_rg_l_b_s_rb_rs_nn);
                __Pyx_GIVEREF(__pyx_t_2);
                PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_24, __pyx_t_2);
                __pyx_t_2 = 0;
                __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_13, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 988, __pyx_L617_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              }
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_4, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
              __pyx_t_24 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_24 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L617_error)
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              try {
                __pyx_v_9CACompute_naive_lst.push_back(__pyx_t_24);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 988, __pyx_L617_error)
              }
            }
            __Pyx_XDECREF(__pyx_t_38); __pyx_t_38 = 0;
            __Pyx_XDECREF(__pyx_t_37); __pyx_t_37 = 0;
            __Pyx_XDECREF(__pyx_t_36); __pyx_t_36 = 0;
            goto __pyx_L624_try_end;
            __pyx_L617_error:;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_39); __pyx_t_39 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_40); __pyx_t_40 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "CACompute.pyx":989
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 *                     except IndexError: naive_lst.push_back(-1)             # <<<<<<<<<<<<<<
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):
 */
            __pyx_t_24 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
            if (__pyx_t_24) {
              __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
              if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_13, &__pyx_t_3) < 0) __PYX_ERR(0, 989, __pyx_L619_except_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_GOTREF(__pyx_t_13);
              __Pyx_GOTREF(__pyx_t_3);
              try {
                __pyx_v_9CACompute_naive_lst.push_back(-1);
              } catch(...) {
                __Pyx_CppExn2PyErr();
                __PYX_ERR(0, 989, __pyx_L619_except_error)
              }
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              goto __pyx_L618_exception_handled;
            }
            goto __pyx_L619_except_error;
            __pyx_L619_except_error:;

            /* "CACompute.pyx":988
 *                     other_regen_survival.push_back(set_temp)
 * 
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))             # <<<<<<<<<<<<<<
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 */
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            goto __pyx_L1_error;
            __pyx_L618_exception_handled:;
            __Pyx_XGIVEREF(__pyx_t_38);
            __Pyx_XGIVEREF(__pyx_t_37);
            __Pyx_XGIVEREF(__pyx_t_36);
            __Pyx_ExceptionReset(__pyx_t_38, __pyx_t_37, __pyx_t_36);
            __pyx_L624_try_end:;
          }
        }
        __pyx_L526:;

        /* "CACompute.pyx":835
 *                     try: naive_lst.push_back(int(re.split(b"rg|l|b|s|rb|rs|nn", individual_rule_string)[7]))
 *                     except IndexError: naive_lst.push_back(-1)
 *             elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *                 if individual_rule_string.find(b"/") != -1:
 *                     birth_state = int(individual_rule_string.split(b"/")[1])
 */
      }
      __pyx_L464:;

      /* "CACompute.pyx":751
 *             activity_list.push_back(set_temp)
 *     elif rule_space == b"Regenerating Generations":
 *         for individual_rule_string in rule_string:             # <<<<<<<<<<<<<<
 *             if bsconditions == b"Outer Totalistic":
 *                 if individual_rule_string.find(b"/") != -1:
 */
    }

    /* "CACompute.pyx":750
 * 
 *             activity_list.push_back(set_temp)
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         for individual_rule_string in rule_string:
 *             if bsconditions == b"Outer Totalistic":
 */
  }
  __pyx_L44:;

  /* "CACompute.pyx":31
 *     pass
 * 
 * cpdef load(filename):             # <<<<<<<<<<<<<<
 *     global colour_palette, rule_name, rule_space, n_states, state_weights, neighbourhood, neighbourhood_weights,\
 *         alternating_period, birth, survival, forcing, killing, living, \
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_39);
  __Pyx_XDECREF(__pyx_t_40);
  __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_file);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename); /*proto*/
static PyObject *__pyx_pw_9CACompute_1load(PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load (wrapper)", 0);
  __pyx_r = __pyx_pf_9CACompute_load(__pyx_self, ((PyObject *)__pyx_v_filename));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_load(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("load", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9CACompute_load(__pyx_v_filename, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":991
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):             # <<<<<<<<<<<<<<
 *     return neighbourhood[generations % alternating_period]
 * 
 */

static PyObject *__pyx_pw_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations); /*proto*/
static std::vector<std::pair<int,int> >  __pyx_f_9CACompute_get_neighbourhood(int __pyx_v_generations, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<std::pair<int,int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_neighbourhood", 0);

  /* "CACompute.pyx":992
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):
 *     return neighbourhood[generations % alternating_period]             # <<<<<<<<<<<<<<
 * 
 * cpdef int get_n_states():
 */
  __pyx_r = (__pyx_v_9CACompute_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
  goto __pyx_L0;

  /* "CACompute.pyx":991
 *                     except IndexError: naive_lst.push_back(-1)
 * 
 * cpdef vector[pair[int, int]] get_neighbourhood(int generations):             # <<<<<<<<<<<<<<
 *     return neighbourhood[generations % alternating_period]
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations); /*proto*/
static PyObject *__pyx_pw_9CACompute_3get_neighbourhood(PyObject *__pyx_self, PyObject *__pyx_arg_generations) {
  int __pyx_v_generations;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_neighbourhood (wrapper)", 0);
  assert(__pyx_arg_generations); {
    __pyx_v_generations = __Pyx_PyInt_As_int(__pyx_arg_generations); if (unlikely((__pyx_v_generations == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 991, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("CACompute.get_neighbourhood", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9CACompute_2get_neighbourhood(__pyx_self, ((int)__pyx_v_generations));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_2get_neighbourhood(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_generations) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_neighbourhood", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_f_9CACompute_get_neighbourhood(__pyx_v_generations, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.get_neighbourhood", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":994
 *     return neighbourhood[generations % alternating_period]
 * 
 * cpdef int get_n_states():             # <<<<<<<<<<<<<<
 *     return n_states
 * 
 */

static PyObject *__pyx_pw_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9CACompute_get_n_states(CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_n_states", 0);

  /* "CACompute.pyx":995
 * 
 * cpdef int get_n_states():
 *     return n_states             # <<<<<<<<<<<<<<
 * 
 * cpdef vector[vector[int]] get_colour_palette():
 */
  __pyx_r = __pyx_v_9CACompute_n_states;
  goto __pyx_L0;

  /* "CACompute.pyx":994
 *     return neighbourhood[generations % alternating_period]
 * 
 * cpdef int get_n_states():             # <<<<<<<<<<<<<<
 *     return n_states
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9CACompute_5get_n_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_n_states (wrapper)", 0);
  __pyx_r = __pyx_pf_9CACompute_4get_n_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_4get_n_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_n_states", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_9CACompute_get_n_states(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.get_n_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":997
 *     return n_states
 * 
 * cpdef vector[vector[int]] get_colour_palette():             # <<<<<<<<<<<<<<
 *     return colour_palette
 * 
 */

static PyObject *__pyx_pw_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static std::vector<std::vector<int> >  __pyx_f_9CACompute_get_colour_palette(CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<std::vector<int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_colour_palette", 0);

  /* "CACompute.pyx":998
 * 
 * cpdef vector[vector[int]] get_colour_palette():
 *     return colour_palette             # <<<<<<<<<<<<<<
 * 
 * cpdef string get_rule_name():
 */
  __pyx_r = __pyx_v_9CACompute_colour_palette;
  goto __pyx_L0;

  /* "CACompute.pyx":997
 *     return n_states
 * 
 * cpdef vector[vector[int]] get_colour_palette():             # <<<<<<<<<<<<<<
 *     return colour_palette
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9CACompute_7get_colour_palette(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_colour_palette (wrapper)", 0);
  __pyx_r = __pyx_pf_9CACompute_6get_colour_palette(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_6get_colour_palette(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_colour_palette", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(__pyx_f_9CACompute_get_colour_palette(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.get_colour_palette", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":1000
 *     return colour_palette
 * 
 * cpdef string get_rule_name():             # <<<<<<<<<<<<<<
 *     return rule_name
 * 
 */

static PyObject *__pyx_pw_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static std::string __pyx_f_9CACompute_get_rule_name(CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rule_name", 0);

  /* "CACompute.pyx":1001
 * 
 * cpdef string get_rule_name():
 *     return rule_name             # <<<<<<<<<<<<<<
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):
 */
  __pyx_r = __pyx_v_9CACompute_rule_name;
  goto __pyx_L0;

  /* "CACompute.pyx":1000
 *     return colour_palette
 * 
 * cpdef string get_rule_name():             # <<<<<<<<<<<<<<
 *     return rule_name
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9CACompute_9get_rule_name(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rule_name (wrapper)", 0);
  __pyx_r = __pyx_pf_9CACompute_8get_rule_name(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_8get_rule_name(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_rule_name", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_f_9CACompute_get_rule_name(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.get_rule_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":1003
 *     return rule_name
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):             # <<<<<<<<<<<<<<
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0
 */

static int __pyx_f_9CACompute_transition_func(std::vector<int>  __pyx_v_neighbours, int __pyx_v_generations) {
  int __pyx_v_n_living;
  int __pyx_v_n_destructive;
  int __pyx_v_n;
  int __pyx_v_n_birth;
  int __pyx_v_n_survival;
  int __pyx_v_idx;
  int __pyx_v_n_regen_birth;
  int __pyx_v_n_regen_survival;
  int __pyx_v_n_forcing;
  int __pyx_v_n_killing;
  int __pyx_v_n1;
  int __pyx_v_n2;
  std::pair<int,int>  __pyx_v_neighbour;
  std::pair<int,int>  __pyx_v_neighbour2;
  std::vector<int> ::size_type __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  std::vector<int> ::size_type __pyx_t_2;
  std::vector<int> ::size_type __pyx_t_3;
  std::vector<int> ::size_type __pyx_t_4;
  int __pyx_t_5;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_6;
  std::vector<std::pair<int,int> >  *__pyx_t_7;
  std::pair<int,int>  __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_11;
  std::vector<std::pair<int,int> >  *__pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  __Pyx_RefNannySetupContext("transition_func", 0);

  /* "CACompute.pyx":1004
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \             # <<<<<<<<<<<<<<
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0
 *     cdef pair[int, int] neighbour, neighbour2
 */
  __pyx_v_n_living = 0;
  __pyx_v_n_destructive = 0;
  __pyx_v_n = 0;
  __pyx_v_n_birth = 0;
  __pyx_v_n_survival = 0;
  __pyx_v_n_regen_birth = 0;
  __pyx_v_n_regen_survival = 0;
  __pyx_v_n_forcing = 0;
  __pyx_v_n_killing = 0;
  __pyx_v_n1 = 0;
  __pyx_v_n2 = 0;

  /* "CACompute.pyx":1007
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0
 *     cdef pair[int, int] neighbour, neighbour2
 *     if rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_1 = ((__pyx_v_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
  if (__pyx_t_1) {

    /* "CACompute.pyx":1008
 *     cdef pair[int, int] neighbour, neighbour2
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1009
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CACompute.pyx":1010
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 1) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1011
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 *                 elif neighbours[i] == 2:
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 */
          __pyx_v_n_living = (__pyx_v_n_living + ((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_i]));

          /* "CACompute.pyx":1010
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:             # <<<<<<<<<<<<<<
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 */
          goto __pyx_L7;
        }

        /* "CACompute.pyx":1012
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
        __pyx_t_1 = (((__pyx_v_neighbours[__pyx_v_i]) == 2) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1013
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_v_n_destructive = (__pyx_v_n_destructive + ((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_i]));

          /* "CACompute.pyx":1012
 *                 if neighbours[i] == 1:
 *                     n_living += neighbourhood_weights[generations % alternating_period][i]
 *                 elif neighbours[i] == 2:             # <<<<<<<<<<<<<<
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 */
        }
        __pyx_L7:;
      }

      /* "CACompute.pyx":1015
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1016
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_destructive) != (__pyx_v_9CACompute_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1018
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif survival[generations % alternating_period].find(n_living) != \
 *                         survival[generations % alternating_period].end():
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CACompute.pyx":1016
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CACompute.pyx":1019
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1021
 *                 elif survival[generations % alternating_period].find(n_living) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1019
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1022
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1015
 *                     n_destructive += neighbourhood_weights[generations % alternating_period][i]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_destructive) != \
 *                         killing[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1024
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1025
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_9CACompute_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1027
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CACompute.pyx":1025
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CACompute.pyx":1028
 *                         living[generations % alternating_period].end():
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1024
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1031
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
      /*else*/ {

        /* "CACompute.pyx":1032
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():
 */
        __pyx_t_5 = (((__pyx_v_9CACompute_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_destructive) != (__pyx_v_9CACompute_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L12_bool_binop_done;
        }

        /* "CACompute.pyx":1033
 *                 if forcing[generations % alternating_period].find(n_destructive) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L12_bool_binop_done:;

        /* "CACompute.pyx":1031
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
        if (__pyx_t_1) {

          /* "CACompute.pyx":1035
 *                         birth[generations % alternating_period].find(n_living) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1031
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_destructive) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_living) != \
 */
        }

        /* "CACompute.pyx":1036
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CACompute.pyx":1008
 *     cdef pair[int, int] neighbour, neighbour2
 *     if rule_space == b"BSFKL":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 if neighbours[i] == 1:
 */
    }

    /* "CACompute.pyx":1037
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1038
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             n_living = 0
 */
      __pyx_v_n_birth = 0;

      /* "CACompute.pyx":1039
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             n_living = 0
 *             n_forcing = 0
 */
      __pyx_v_n_survival = 0;

      /* "CACompute.pyx":1040
 *             n_birth = 0
 *             n_survival = 0
 *             n_living = 0             # <<<<<<<<<<<<<<
 *             n_forcing = 0
 *             n_killing = 0
 */
      __pyx_v_n_living = 0;

      /* "CACompute.pyx":1041
 *             n_survival = 0
 *             n_living = 0
 *             n_forcing = 0             # <<<<<<<<<<<<<<
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_forcing = 0;

      /* "CACompute.pyx":1042
 *             n_living = 0
 *             n_forcing = 0
 *             n_killing = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0
 */
      __pyx_v_n_killing = 0;

      /* "CACompute.pyx":1043
 *             n_forcing = 0
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n1, n2 = 0, 0
 *                 idx = 0
 */
      __pyx_t_7 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CACompute.pyx":1044
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_v_n1 = __pyx_t_9;
        __pyx_v_n2 = __pyx_t_10;

        /* "CACompute.pyx":1045
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n1, n2 = 0, 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 */
        __pyx_v_idx = 0;

        /* "CACompute.pyx":1046
 *                 n1, n2 = 0, 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 */
        __pyx_t_12 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CACompute.pyx":1048
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:             # <<<<<<<<<<<<<<
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1048, __pyx_L1_error)
          }

          /* "CACompute.pyx":1047
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 */
          __pyx_t_1 = (((__pyx_v_neighbours[((__pyx_v_9CACompute_index_map[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_t_8])]) == 1) != 0);
          if (__pyx_t_1) {

            /* "CACompute.pyx":1049
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 */
            __pyx_v_n1 = (__pyx_v_n1 + ((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_idx]));

            /* "CACompute.pyx":1047
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 */
          }

          /* "CACompute.pyx":1051
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:             # <<<<<<<<<<<<<<
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 *                     idx += 1
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1051, __pyx_L1_error)
          }

          /* "CACompute.pyx":1050
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 */
          __pyx_t_1 = (((__pyx_v_neighbours[((__pyx_v_9CACompute_index_map[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_t_8])]) == 2) != 0);
          if (__pyx_t_1) {

            /* "CACompute.pyx":1052
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
            __pyx_v_n2 = (__pyx_v_n2 + ((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_idx]));

            /* "CACompute.pyx":1050
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 *                         n1 += neighbourhood_weights[generations % alternating_period][idx]
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]             # <<<<<<<<<<<<<<
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 */
          }

          /* "CACompute.pyx":1053
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 2:
 *                         n2 += neighbourhood_weights[generations % alternating_period][idx]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CACompute.pyx":1046
 *                 n1, n2 = 0, 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     if neighbours[index_map[generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]] == 1:
 */
        }

        /* "CACompute.pyx":1055
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1057
 *                 if other_birth[generations % alternating_period].find(n1) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n1) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CACompute.pyx":1055
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CACompute.pyx":1058
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1060
 *                 if other_survival[generations % alternating_period].find(n1) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 *                 if other_living[generations % alternating_period].find(n1) != \
 *                         other_living[generations % alternating_period].end():
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CACompute.pyx":1058
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CACompute.pyx":1061
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n1) != (__pyx_v_9CACompute_other_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1063
 *                 if other_living[generations % alternating_period].find(n1) != \
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1             # <<<<<<<<<<<<<<
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 *                         other_forcing[generations % alternating_period].end():
 */
          __pyx_v_n_living = (__pyx_v_n_living + 1);

          /* "CACompute.pyx":1061
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_living[generations % alternating_period].find(n1) != \             # <<<<<<<<<<<<<<
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 */
        }

        /* "CACompute.pyx":1064
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n2) != (__pyx_v_9CACompute_other_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1066
 *                 if other_forcing[generations % alternating_period].find(n2) != \
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1             # <<<<<<<<<<<<<<
 *                 if other_killing[generations % alternating_period].find(n2) != \
 *                         other_killing[generations % alternating_period].end():
 */
          __pyx_v_n_forcing = (__pyx_v_n_forcing + 1);

          /* "CACompute.pyx":1064
 *                         other_living[generations % alternating_period].end():
 *                     n_living += 1
 *                 if other_forcing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 */
        }

        /* "CACompute.pyx":1067
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n2) != (__pyx_v_9CACompute_other_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1069
 *                 if other_killing[generations % alternating_period].find(n2) != \
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_v_n_killing = (__pyx_v_n_killing + 1);

          /* "CACompute.pyx":1067
 *                         other_forcing[generations % alternating_period].end():
 *                     n_forcing += 1
 *                 if other_killing[generations % alternating_period].find(n2) != \             # <<<<<<<<<<<<<<
 *                         other_killing[generations % alternating_period].end():
 *                     n_killing += 1
 */
        }

        /* "CACompute.pyx":1043
 *             n_forcing = 0
 *             n_killing = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n1, n2 = 0, 0
 *                 idx = 0
 */
      }

      /* "CACompute.pyx":1071
 *                     n_killing += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1072
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_killing) != (__pyx_v_9CACompute_killing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1074
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CACompute.pyx":1072
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if killing[generations % alternating_period].find(n_killing) != \             # <<<<<<<<<<<<<<
 *                         killing[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CACompute.pyx":1075
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1077
 *                 elif survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1075
 *                         killing[generations % alternating_period].end():
 *                     return 0
 *                 elif survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1078
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1071
 *                     n_killing += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if killing[generations % alternating_period].find(n_killing) != \
 *                         killing[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1080
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 2) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1081
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_living) != (__pyx_v_9CACompute_living[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1083
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 *                     return 0             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 0;
          goto __pyx_L0;

          /* "CACompute.pyx":1081
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:
 *                 if living[generations % alternating_period].find(n_living) != \             # <<<<<<<<<<<<<<
 *                         living[generations % alternating_period].end():
 *                     return 0
 */
        }

        /* "CACompute.pyx":1084
 *                         living[generations % alternating_period].end():
 *                     return 0
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1080
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 2:             # <<<<<<<<<<<<<<
 *                 if living[generations % alternating_period].find(n_living) != \
 *                         living[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1087
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
      /*else*/ {

        /* "CACompute.pyx":1088
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
        __pyx_t_5 = (((__pyx_v_9CACompute_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_forcing) != (__pyx_v_9CACompute_forcing[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_5) {
        } else {
          __pyx_t_1 = __pyx_t_5;
          goto __pyx_L29_bool_binop_done;
        }

        /* "CACompute.pyx":1089
 *                 if forcing[generations % alternating_period].find(n_forcing) != \
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_5 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        __pyx_t_1 = __pyx_t_5;
        __pyx_L29_bool_binop_done:;

        /* "CACompute.pyx":1087
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
        if (__pyx_t_1) {

          /* "CACompute.pyx":1091
 *                         birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1087
 * 
 *             else:
 *                 if forcing[generations % alternating_period].find(n_forcing) != \             # <<<<<<<<<<<<<<
 *                         forcing[generations % alternating_period].end() and \
 *                         birth[generations % alternating_period].find(n_birth) != \
 */
        }

        /* "CACompute.pyx":1092
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CACompute.pyx":1037
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    }

    /* "CACompute.pyx":1007
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0
 *     cdef pair[int, int] neighbour, neighbour2
 *     if rule_space == b"BSFKL":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CACompute.pyx":1093
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_1 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
  if (__pyx_t_1) {

    /* "CACompute.pyx":1094
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1095
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CACompute.pyx":1096
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CACompute.pyx":1099
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 */
      __pyx_t_1 = (((__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)])) != (__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1101
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1103
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CACompute.pyx":1101
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CACompute.pyx":1104
 *                         survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_r = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1) % __pyx_v_9CACompute_n_states);
        goto __pyx_L0;

        /* "CACompute.pyx":1099
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n) != \
 */
      }

      /* "CACompute.pyx":1106
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1107
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1109
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1107
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1110
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1106
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1094
 *                 return 0
 *     elif rule_space == b"Extended Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
      goto __pyx_L31;
    }

    /* "CACompute.pyx":1111
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1112
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_birth = 0;

      /* "CACompute.pyx":1113
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_v_n_survival = 0;

      /* "CACompute.pyx":1114
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      __pyx_t_7 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CACompute.pyx":1115
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CACompute.pyx":1116
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CACompute.pyx":1117
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        __pyx_t_12 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CACompute.pyx":1121
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1121, __pyx_L1_error)
          }

          /* "CACompute.pyx":1118
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_9CACompute_index_map[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CACompute.pyx":1122
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CACompute.pyx":1117
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CACompute.pyx":1124
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1126
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CACompute.pyx":1124
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CACompute.pyx":1127
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1129
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CACompute.pyx":1127
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CACompute.pyx":1114
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CACompute.pyx":1131
 *                     n_survival += 1
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
      __pyx_t_1 = (((__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)])) != (__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1133
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1135
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1133
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1136
 *                     survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1131
 *                     n_survival += 1
 * 
 *             if activity_list[generations % alternating_period].find(neighbours[neighbours.size() - 1]) != \             # <<<<<<<<<<<<<<
 *                     activity_list[generations % alternating_period].end():
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
      }

      /* "CACompute.pyx":1138
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1139
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1141
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Single State":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1139
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1142
 *                     birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1138
 *                 return 2
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1111
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    }
    __pyx_L31:;

    /* "CACompute.pyx":1093
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CACompute.pyx":1143
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_1 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Single State")) != 0);
  if (__pyx_t_1) {

    /* "CACompute.pyx":1144
 *                 return 0
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1145
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CACompute.pyx":1146
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CACompute.pyx":1149
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1150
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1152
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1150
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1153
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1149
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1155
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
      /*else*/ {

        /* "CACompute.pyx":1156
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return 1
 *                 return 0
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);

        /* "CACompute.pyx":1155
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        if (__pyx_t_1) {

          /* "CACompute.pyx":1157
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1155
 *                 return 0
 *             else:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1158
 *                         birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 */
        __pyx_r = 0;
        goto __pyx_L0;
      }

      /* "CACompute.pyx":1144
 *                 return 0
 *     elif rule_space == b"Single State":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    }

    /* "CACompute.pyx":1159
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1160
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0             # <<<<<<<<<<<<<<
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
      __pyx_v_n_birth = 0;

      /* "CACompute.pyx":1161
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth = 0
 *             n_survival = 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_v_n_survival = 0;

      /* "CACompute.pyx":1162
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      __pyx_t_7 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CACompute.pyx":1163
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CACompute.pyx":1164
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CACompute.pyx":1165
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        __pyx_t_12 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CACompute.pyx":1169
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 * 
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1169, __pyx_L1_error)
          }

          /* "CACompute.pyx":1166
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_9CACompute_index_map[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CACompute.pyx":1170
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CACompute.pyx":1165
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CACompute.pyx":1172
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1174
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CACompute.pyx":1172
 *                     idx += 1
 * 
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CACompute.pyx":1175
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1177
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CACompute.pyx":1175
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CACompute.pyx":1162
 *             n_birth = 0
 *             n_survival = 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CACompute.pyx":1179
 *                     n_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1180
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1182
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1180
 * 
 *             if neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                     survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1183
 *                     survival[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1179
 *                     n_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                     survival[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1185
 *                 return 0
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1186
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1188
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1186
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                     birth[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1189
 *                     birth[generations % alternating_period].end():
 *                     return 1
 *                 return 0             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1185
 *                 return 0
 * 
 *             elif neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                     birth[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1159
 *                     return 1
 *                 return 0
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth = 0
 *             n_survival = 0
 */
    }

    /* "CACompute.pyx":1143
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Single State":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
    goto __pyx_L3;
  }

  /* "CACompute.pyx":1190
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  __pyx_t_1 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
  if (__pyx_t_1) {

    /* "CACompute.pyx":1191
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Outer Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1192
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):             # <<<<<<<<<<<<<<
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 *                      state_weights[generations % alternating_period][neighbours[i]]
 */
      __pyx_t_2 = (__pyx_v_neighbours.size() - 1);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
        __pyx_v_i = __pyx_t_4;

        /* "CACompute.pyx":1193
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \             # <<<<<<<<<<<<<<
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 */
        __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_i]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[__pyx_v_i])])));
      }

      /* "CACompute.pyx":1196
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1197
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1199
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 *                     return birth_state             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = __pyx_v_9CACompute_birth_state;
          goto __pyx_L0;

          /* "CACompute.pyx":1197
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        }

        /* "CACompute.pyx":1200
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1196
 *                      state_weights[generations % alternating_period][neighbours[i]]
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1201
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1202
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1204
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1202
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1205
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1201
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1207
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
      /*else*/ {

        /* "CACompute.pyx":1208
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \
 *                         regen_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);

        /* "CACompute.pyx":1207
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        if (__pyx_t_1) {

          /* "CACompute.pyx":1209
 *                 if regen_birth[generations % alternating_period].find(n) != \
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 *                         regen_survival[generations % alternating_period].end():
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CACompute.pyx":1207
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        }

        /* "CACompute.pyx":1210
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1212
 *                 elif regen_survival[generations % alternating_period].find(n) != \
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CACompute.pyx":1210
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CACompute.pyx":1213
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 */
        __pyx_r = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1) % __pyx_v_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CACompute.pyx":1191
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":
 *         if bsconditions == b"Outer Totalistic":             # <<<<<<<<<<<<<<
 *             for i in range(neighbours.size() - 1):
 *                 n += neighbourhood_weights[generations % alternating_period][i] * \
 */
    }

    /* "CACompute.pyx":1214
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
    __pyx_t_1 = ((__pyx_v_9CACompute_bsconditions == ((char const *)"Double Totalistic")) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1215
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0             # <<<<<<<<<<<<<<
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 */
      __pyx_t_10 = 0;
      __pyx_t_9 = 0;
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_v_n_birth = __pyx_t_10;
      __pyx_v_n_survival = __pyx_t_9;
      __pyx_v_n_regen_birth = __pyx_t_13;
      __pyx_v_n_regen_survival = __pyx_t_14;

      /* "CACompute.pyx":1216
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      __pyx_t_7 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
      __pyx_t_6 = __pyx_t_7->begin();
      for (;;) {
        if (!(__pyx_t_6 != __pyx_t_7->end())) break;
        __pyx_t_8 = *__pyx_t_6;
        ++__pyx_t_6;
        __pyx_v_neighbour = __pyx_t_8;

        /* "CACompute.pyx":1217
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0             # <<<<<<<<<<<<<<
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 */
        __pyx_v_n = 0;

        /* "CACompute.pyx":1218
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 *                 n = 0
 *                 idx = 0             # <<<<<<<<<<<<<<
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 */
        __pyx_v_idx = 0;

        /* "CACompute.pyx":1219
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        __pyx_t_12 = &(__pyx_v_9CACompute_original_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_12->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_12->end())) break;
          __pyx_t_8 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour2 = __pyx_t_8;

          /* "CACompute.pyx":1223
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]             # <<<<<<<<<<<<<<
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \
 */
          try {
            __pyx_t_8 = std::pair<int,int> ((__pyx_v_neighbour.first + __pyx_v_neighbour2.first), (__pyx_v_neighbour.second + __pyx_v_neighbour2.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1223, __pyx_L1_error)
          }

          /* "CACompute.pyx":1220
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \             # <<<<<<<<<<<<<<
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 *                              generations % alternating_period][pair[int, int]
 */
          __pyx_v_n = (__pyx_v_n + (((__pyx_v_9CACompute_neighbourhood_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_v_idx]) * ((__pyx_v_9CACompute_state_weights[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[(__pyx_v_neighbours[((__pyx_v_9CACompute_index_map[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)])[__pyx_t_8])])])));

          /* "CACompute.pyx":1224
 *                              generations % alternating_period][pair[int, int]
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1             # <<<<<<<<<<<<<<
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 */
          __pyx_v_idx = (__pyx_v_idx + 1);

          /* "CACompute.pyx":1219
 *                 n = 0
 *                 idx = 0
 *                 for neighbour2 in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     n += neighbourhood_weights[generations % alternating_period][idx] * \
 *                          state_weights[generations % alternating_period][neighbours[index_map[
 */
        }

        /* "CACompute.pyx":1225
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1227
 *                 if other_birth[generations % alternating_period].find(n) != \
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 */
          __pyx_v_n_birth = (__pyx_v_n_birth + 1);

          /* "CACompute.pyx":1225
 *                          (neighbour.first + neighbour2.first, neighbour.second + neighbour2.second)]]]
 *                     idx += 1
 *                 if other_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 */
        }

        /* "CACompute.pyx":1228
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1230
 *                 if other_survival[generations % alternating_period].find(n) != \
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1             # <<<<<<<<<<<<<<
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 *                         other_regen_birth[generations % alternating_period].end():
 */
          __pyx_v_n_survival = (__pyx_v_n_survival + 1);

          /* "CACompute.pyx":1228
 *                         other_birth[generations % alternating_period].end():
 *                     n_birth += 1
 *                 if other_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 */
        }

        /* "CACompute.pyx":1231
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1233
 *                 if other_regen_birth[generations % alternating_period].find(n) != \
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1             # <<<<<<<<<<<<<<
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 *                         other_regen_survival[generations % alternating_period].end():
 */
          __pyx_v_n_regen_birth = (__pyx_v_n_regen_birth + 1);

          /* "CACompute.pyx":1231
 *                         other_survival[generations % alternating_period].end():
 *                     n_survival += 1
 *                 if other_regen_birth[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 */
        }

        /* "CACompute.pyx":1234
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_other_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n) != (__pyx_v_9CACompute_other_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1236
 *                 if other_regen_survival[generations % alternating_period].find(n) != \
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1             # <<<<<<<<<<<<<<
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 */
          __pyx_v_n_regen_survival = (__pyx_v_n_regen_survival + 1);

          /* "CACompute.pyx":1234
 *                         other_regen_birth[generations % alternating_period].end():
 *                     n_regen_birth += 1
 *                 if other_regen_survival[generations % alternating_period].find(n) != \             # <<<<<<<<<<<<<<
 *                         other_regen_survival[generations % alternating_period].end():
 *                     n_regen_survival += 1
 */
        }

        /* "CACompute.pyx":1216
 *         elif bsconditions == b"Double Totalistic":
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                 n = 0
 *                 idx = 0
 */
      }

      /* "CACompute.pyx":1238
 *                     n_regen_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 0) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1239
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_birth) != (__pyx_v_9CACompute_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1241
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 *                     return birth_state             # <<<<<<<<<<<<<<
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 */
          __pyx_r = __pyx_v_9CACompute_birth_state;
          goto __pyx_L0;

          /* "CACompute.pyx":1239
 * 
 *             if neighbours[neighbours.size() - 1] == 0:
 *                 if birth[generations % alternating_period].find(n_birth) != \             # <<<<<<<<<<<<<<
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 */
        }

        /* "CACompute.pyx":1242
 *                         birth[generations % alternating_period].end():
 *                     return birth_state
 *                 return 0             # <<<<<<<<<<<<<<
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "CACompute.pyx":1238
 *                     n_regen_survival += 1
 * 
 *             if neighbours[neighbours.size() - 1] == 0:             # <<<<<<<<<<<<<<
 *                 if birth[generations % alternating_period].find(n_birth) != \
 *                         birth[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1243
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
      __pyx_t_1 = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) == 1) != 0);
      if (__pyx_t_1) {

        /* "CACompute.pyx":1244
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_survival) != (__pyx_v_9CACompute_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1246
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 *                     return 1             # <<<<<<<<<<<<<<
 *                 return 2
 *             else:
 */
          __pyx_r = 1;
          goto __pyx_L0;

          /* "CACompute.pyx":1244
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:
 *                 if survival[generations % alternating_period].find(n_survival) != \             # <<<<<<<<<<<<<<
 *                         survival[generations % alternating_period].end():
 *                     return 1
 */
        }

        /* "CACompute.pyx":1247
 *                         survival[generations % alternating_period].end():
 *                     return 1
 *                 return 2             # <<<<<<<<<<<<<<
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 */
        __pyx_r = 2;
        goto __pyx_L0;

        /* "CACompute.pyx":1243
 *                     return birth_state
 *                 return 0
 *             elif neighbours[neighbours.size() - 1] == 1:             # <<<<<<<<<<<<<<
 *                 if survival[generations % alternating_period].find(n_survival) != \
 *                         survival[generations % alternating_period].end():
 */
      }

      /* "CACompute.pyx":1249
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
      /*else*/ {

        /* "CACompute.pyx":1250
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 *                         regen_birth[generations % alternating_period].end():             # <<<<<<<<<<<<<<
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_regen_birth) != (__pyx_v_9CACompute_regen_birth[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);

        /* "CACompute.pyx":1249
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        if (__pyx_t_1) {

          /* "CACompute.pyx":1251
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1             # <<<<<<<<<<<<<<
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 *                         regen_survival[generations % alternating_period].end():
 */
          __pyx_r = ((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) - 1);
          goto __pyx_L0;

          /* "CACompute.pyx":1249
 *                 return 2
 *             else:
 *                 if regen_birth[generations % alternating_period].find(n_regen_birth) != \             # <<<<<<<<<<<<<<
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 */
        }

        /* "CACompute.pyx":1252
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        __pyx_t_1 = (((__pyx_v_9CACompute_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_n_regen_survival) != (__pyx_v_9CACompute_regen_survival[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
        if (__pyx_t_1) {

          /* "CACompute.pyx":1254
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]             # <<<<<<<<<<<<<<
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 */
          __pyx_r = (__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]);
          goto __pyx_L0;

          /* "CACompute.pyx":1252
 *                         regen_birth[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1] - 1
 *                 elif regen_survival[generations % alternating_period].find(n_regen_survival) != \             # <<<<<<<<<<<<<<
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 */
        }

        /* "CACompute.pyx":1255
 *                         regen_survival[generations % alternating_period].end():
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states             # <<<<<<<<<<<<<<
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 */
        __pyx_r = (((__pyx_v_neighbours[(__pyx_v_neighbours.size() - 1)]) + 1) % __pyx_v_9CACompute_n_states);
        goto __pyx_L0;
      }

      /* "CACompute.pyx":1214
 *                     return neighbours[neighbours.size() - 1]
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 *         elif bsconditions == b"Double Totalistic":             # <<<<<<<<<<<<<<
 *             n_birth, n_survival, n_regen_birth, n_regen_survival = 0, 0, 0, 0
 *             for neighbour in original_neighbourhood[generations % alternating_period]:
 */
    }

    /* "CACompute.pyx":1190
 *                     return 1
 *                 return 0
 *     elif rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         if bsconditions == b"Outer Totalistic":
 *             for i in range(neighbours.size() - 1):
 */
  }
  __pyx_L3:;

  /* "CACompute.pyx":1003
 *     return rule_name
 * 
 * cdef int transition_func(vector[int] neighbours, int generations):             # <<<<<<<<<<<<<<
 *     cdef int n_living = 0, n_destructive = 0, n = 0, n_birth = 0, n_survival = 0, index, found_index, idx, \
 *         n_regen_birth = 0, n_regen_survival = 0, n_forcing = 0, n_killing = 0, n1 = 0, n2 = 0
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("CACompute.transition_func", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":1257
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 * cdef int depend_on_neighbours(int state, int generations):             # <<<<<<<<<<<<<<
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":
 *         return -1
 */

static int __pyx_f_9CACompute_depend_on_neighbours(int __pyx_v_state, int __pyx_v_generations) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("depend_on_neighbours", 0);

  /* "CACompute.pyx":1258
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         return -1
 *     elif rule_space == b"Extended Generations":
 */
  __pyx_t_2 = ((__pyx_v_9CACompute_rule_space == ((char const *)"BSFKL")) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Single State")) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Regenerating Generations")) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "CACompute.pyx":1259
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":
 *         return -1             # <<<<<<<<<<<<<<
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \
 */
    __pyx_r = -1;
    goto __pyx_L0;

    /* "CACompute.pyx":1258
 * 
 * cdef int depend_on_neighbours(int state, int generations):
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":             # <<<<<<<<<<<<<<
 *         return -1
 *     elif rule_space == b"Extended Generations":
 */
  }

  /* "CACompute.pyx":1260
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":
 *         return -1
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 */
  __pyx_t_1 = ((__pyx_v_9CACompute_rule_space == ((char const *)"Extended Generations")) != 0);
  if (__pyx_t_1) {

    /* "CACompute.pyx":1261
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    __pyx_t_2 = (((__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).find(__pyx_v_state) != (__pyx_v_9CACompute_activity_list[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).end()) != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L8_bool_binop_done;
    }

    /* "CACompute.pyx":1262
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:             # <<<<<<<<<<<<<<
 *             return -1
 *         else:
 */
    __pyx_t_2 = ((__pyx_v_state == 0) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L8_bool_binop_done:;

    /* "CACompute.pyx":1261
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    if (__pyx_t_1) {

      /* "CACompute.pyx":1263
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1             # <<<<<<<<<<<<<<
 *         else:
 *             return (state + 1) % n_states
 */
      __pyx_r = -1;
      goto __pyx_L0;

      /* "CACompute.pyx":1261
 *         return -1
 *     elif rule_space == b"Extended Generations":
 *         if activity_list[generations % alternating_period].find(state) != \             # <<<<<<<<<<<<<<
 *                 activity_list[generations % alternating_period].end() or state == 0:
 *             return -1
 */
    }

    /* "CACompute.pyx":1265
 *             return -1
 *         else:
 *             return (state + 1) % n_states             # <<<<<<<<<<<<<<
 * 
 * cdef unordered_map[pair[int, int], int] depends_cache
 */
    /*else*/ {
      __pyx_r = ((__pyx_v_state + 1) % __pyx_v_9CACompute_n_states);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1260
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":
 *         return -1
 *     elif rule_space == b"Extended Generations":             # <<<<<<<<<<<<<<
 *         if activity_list[generations % alternating_period].find(state) != \
 *                 activity_list[generations % alternating_period].end() or state == 0:
 */
  }

  /* "CACompute.pyx":1257
 *                 return (neighbours[neighbours.size() - 1] + 1) % n_states
 * 
 * cdef int depend_on_neighbours(int state, int generations):             # <<<<<<<<<<<<<<
 *     if rule_space == b"BSFKL" or rule_space == b"Single State" or rule_space == b"Regenerating Generations":
 *         return -1
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":1270
 * cdef map[pair[vector[int], int], int] transition_func_cache
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):             # <<<<<<<<<<<<<<
 *     if naive == 0:
 *         if a.second == b.second:
 */

static bool __pyx_f_9CACompute_compare_pairs(std::pair<int,int>  __pyx_v_a, std::pair<int,int>  __pyx_v_b) {
  bool __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("compare_pairs", 0);

  /* "CACompute.pyx":1271
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if naive == 0:             # <<<<<<<<<<<<<<
 *         if a.second == b.second:
 *             return a.first < b.first
 */
  switch (__pyx_v_9CACompute_naive) {
    case 0:

    /* "CACompute.pyx":1272
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if naive == 0:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first < b.first
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1273
 *     if naive == 0:
 *         if a.second == b.second:
 *             return a.first < b.first             # <<<<<<<<<<<<<<
 *         else:
 *             return a.second < b.second
 */
      __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
      goto __pyx_L0;

      /* "CACompute.pyx":1272
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if naive == 0:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first < b.first
 *         else:
 */
    }

    /* "CACompute.pyx":1275
 *             return a.first < b.first
 *         else:
 *             return a.second < b.second             # <<<<<<<<<<<<<<
 *     elif naive == 1:
 *         if a.first == b.first:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1271
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):
 *     if naive == 0:             # <<<<<<<<<<<<<<
 *         if a.second == b.second:
 *             return a.first < b.first
 */
    break;
    case 1:

    /* "CACompute.pyx":1277
 *             return a.second < b.second
 *     elif naive == 1:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second < b.second
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1278
 *     elif naive == 1:
 *         if a.first == b.first:
 *             return a.second < b.second             # <<<<<<<<<<<<<<
 *         else:
 *             return a.first < b.first
 */
      __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
      goto __pyx_L0;

      /* "CACompute.pyx":1277
 *             return a.second < b.second
 *     elif naive == 1:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second < b.second
 *         else:
 */
    }

    /* "CACompute.pyx":1280
 *             return a.second < b.second
 *         else:
 *             return a.first < b.first             # <<<<<<<<<<<<<<
 *     elif naive == 2:
 *         if a.second == b.second:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1276
 *         else:
 *             return a.second < b.second
 *     elif naive == 1:             # <<<<<<<<<<<<<<
 *         if a.first == b.first:
 *             return a.second < b.second
 */
    break;
    case 2:

    /* "CACompute.pyx":1282
 *             return a.first < b.first
 *     elif naive == 2:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first > b.first
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1283
 *     elif naive == 2:
 *         if a.second == b.second:
 *             return a.first > b.first             # <<<<<<<<<<<<<<
 *         else:
 *             return a.second > b.second
 */
      __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
      goto __pyx_L0;

      /* "CACompute.pyx":1282
 *             return a.first < b.first
 *     elif naive == 2:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first > b.first
 *         else:
 */
    }

    /* "CACompute.pyx":1285
 *             return a.first > b.first
 *         else:
 *             return a.second > b.second             # <<<<<<<<<<<<<<
 *     elif naive == 3:
 *         if a.first == b.first:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1281
 *         else:
 *             return a.first < b.first
 *     elif naive == 2:             # <<<<<<<<<<<<<<
 *         if a.second == b.second:
 *             return a.first > b.first
 */
    break;
    case 3:

    /* "CACompute.pyx":1287
 *             return a.second > b.second
 *     elif naive == 3:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second > b.second
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1288
 *     elif naive == 3:
 *         if a.first == b.first:
 *             return a.second > b.second             # <<<<<<<<<<<<<<
 *         else:
 *             return a.first > b.first
 */
      __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
      goto __pyx_L0;

      /* "CACompute.pyx":1287
 *             return a.second > b.second
 *     elif naive == 3:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second > b.second
 *         else:
 */
    }

    /* "CACompute.pyx":1290
 *             return a.second > b.second
 *         else:
 *             return a.first > b.first             # <<<<<<<<<<<<<<
 *     elif naive == 4:
 *         if a.second == b.second:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1286
 *         else:
 *             return a.second > b.second
 *     elif naive == 3:             # <<<<<<<<<<<<<<
 *         if a.first == b.first:
 *             return a.second > b.second
 */
    break;
    case 4:

    /* "CACompute.pyx":1292
 *             return a.first > b.first
 *     elif naive == 4:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first > b.first
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1293
 *     elif naive == 4:
 *         if a.second == b.second:
 *             return a.first > b.first             # <<<<<<<<<<<<<<
 *         else:
 *             return a.second < b.second
 */
      __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
      goto __pyx_L0;

      /* "CACompute.pyx":1292
 *             return a.first > b.first
 *     elif naive == 4:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first > b.first
 *         else:
 */
    }

    /* "CACompute.pyx":1295
 *             return a.first > b.first
 *         else:
 *             return a.second < b.second             # <<<<<<<<<<<<<<
 *     elif naive == 5:
 *         if a.first == b.first:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1291
 *         else:
 *             return a.first > b.first
 *     elif naive == 4:             # <<<<<<<<<<<<<<
 *         if a.second == b.second:
 *             return a.first > b.first
 */
    break;
    case 5:

    /* "CACompute.pyx":1297
 *             return a.second < b.second
 *     elif naive == 5:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second > b.second
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1298
 *     elif naive == 5:
 *         if a.first == b.first:
 *             return a.second > b.second             # <<<<<<<<<<<<<<
 *         else:
 *             return a.first < b.first
 */
      __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
      goto __pyx_L0;

      /* "CACompute.pyx":1297
 *             return a.second < b.second
 *     elif naive == 5:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second > b.second
 *         else:
 */
    }

    /* "CACompute.pyx":1300
 *             return a.second > b.second
 *         else:
 *             return a.first < b.first             # <<<<<<<<<<<<<<
 *     elif naive == 6:
 *         if a.second == b.second:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1296
 *         else:
 *             return a.second < b.second
 *     elif naive == 5:             # <<<<<<<<<<<<<<
 *         if a.first == b.first:
 *             return a.second > b.second
 */
    break;
    case 6:

    /* "CACompute.pyx":1302
 *             return a.first < b.first
 *     elif naive == 6:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first < b.first
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.second == __pyx_v_b.second) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1303
 *     elif naive == 6:
 *         if a.second == b.second:
 *             return a.first < b.first             # <<<<<<<<<<<<<<
 *         else:
 *             return a.second > b.second
 */
      __pyx_r = (__pyx_v_a.first < __pyx_v_b.first);
      goto __pyx_L0;

      /* "CACompute.pyx":1302
 *             return a.first < b.first
 *     elif naive == 6:
 *         if a.second == b.second:             # <<<<<<<<<<<<<<
 *             return a.first < b.first
 *         else:
 */
    }

    /* "CACompute.pyx":1305
 *             return a.first < b.first
 *         else:
 *             return a.second > b.second             # <<<<<<<<<<<<<<
 *     elif naive == 7:
 *         if a.first == b.first:
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.second > __pyx_v_b.second);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1301
 *         else:
 *             return a.first < b.first
 *     elif naive == 6:             # <<<<<<<<<<<<<<
 *         if a.second == b.second:
 *             return a.first < b.first
 */
    break;
    case 7:

    /* "CACompute.pyx":1307
 *             return a.second > b.second
 *     elif naive == 7:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second < b.second
 *         else:
 */
    __pyx_t_1 = ((__pyx_v_a.first == __pyx_v_b.first) != 0);
    if (__pyx_t_1) {

      /* "CACompute.pyx":1308
 *     elif naive == 7:
 *         if a.first == b.first:
 *             return a.second < b.second             # <<<<<<<<<<<<<<
 *         else:
 *             return a.first > b.first
 */
      __pyx_r = (__pyx_v_a.second < __pyx_v_b.second);
      goto __pyx_L0;

      /* "CACompute.pyx":1307
 *             return a.second > b.second
 *     elif naive == 7:
 *         if a.first == b.first:             # <<<<<<<<<<<<<<
 *             return a.second < b.second
 *         else:
 */
    }

    /* "CACompute.pyx":1310
 *             return a.second < b.second
 *         else:
 *             return a.first > b.first             # <<<<<<<<<<<<<<
 * 
 * cpdef compute(unordered_set[pair[int, int]] cells_changed,
 */
    /*else*/ {
      __pyx_r = (__pyx_v_a.first > __pyx_v_b.first);
      goto __pyx_L0;
    }

    /* "CACompute.pyx":1306
 *         else:
 *             return a.second > b.second
 *     elif naive == 7:             # <<<<<<<<<<<<<<
 *         if a.first == b.first:
 *             return a.second < b.second
 */
    break;
    default: break;
  }

  /* "CACompute.pyx":1270
 * cdef map[pair[vector[int], int], int] transition_func_cache
 * 
 * cdef bool compare_pairs(pair[int, int] a, pair[int, int] b):             # <<<<<<<<<<<<<<
 *     if naive == 0:
 *         if a.second == b.second:
 */

  /* function exit code */
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "CACompute.pyx":1312
 *             return a.first > b.first
 * 
 * cpdef compute(unordered_set[pair[int, int]] cells_changed,             # <<<<<<<<<<<<<<
 *               unordered_map[pair[int, int], int] copy_grid, unordered_map[pair[int, int], int] dict_grid,
 *               int generations):
 */

static PyObject *__pyx_pw_9CACompute_11compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_9CACompute_compute(std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_copy_grid, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<int>  __pyx_v_neighbours;
  std::unordered_set<std::pair<int,int> >  __pyx_v_cells_to_check;
  int __pyx_v_ans;
  std::vector<std::pair<int,int> >  __pyx_v_cells_to_check_vector;
  std::pair<int,int>  __pyx_v_coordinates;
  std::pair<int,int>  __pyx_v_coordinates2;
  std::pair<int,int>  __pyx_v_neighbour;
  std::pair<int,int>  __pyx_v_coor;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::unordered_set<std::pair<int,int> > ::iterator __pyx_t_1;
  std::pair<int,int>  __pyx_t_2;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_3;
  std::vector<std::pair<int,int> >  *__pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  std::pair<std::vector<int> ,int>  __pyx_t_9;
  std::pair<std::pair<int,int> ,int>  __pyx_t_10;
  std::vector<std::pair<int,int> > ::iterator __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  __Pyx_RefNannySetupContext("compute", 0);

  /* "CACompute.pyx":1318
 * 
 *     cdef vector[int] neighbours
 *     neighbours.reserve(neighbourhood[generations % alternating_period].size() + 1)             # <<<<<<<<<<<<<<
 * 
 *     cdef unordered_set[pair[int, int]] cells_to_check
 */
  __pyx_v_neighbours.reserve(((__pyx_v_9CACompute_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]).size() + 1));

  /* "CACompute.pyx":1328
 *     cdef pair[int, int] neighbour
 * 
 *     for coor in cells_changed:             # <<<<<<<<<<<<<<
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 */
  __pyx_t_1 = __pyx_v_cells_changed.begin();
  for (;;) {
    if (!(__pyx_t_1 != __pyx_v_cells_changed.end())) break;
    __pyx_t_2 = *__pyx_t_1;
    ++__pyx_t_1;
    __pyx_v_coor = __pyx_t_2;

    /* "CACompute.pyx":1329
 * 
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 */
    __pyx_t_4 = &(__pyx_v_9CACompute_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
    __pyx_t_3 = __pyx_t_4->begin();
    for (;;) {
      if (!(__pyx_t_3 != __pyx_t_4->end())) break;
      __pyx_t_2 = *__pyx_t_3;
      ++__pyx_t_3;
      __pyx_v_neighbour = __pyx_t_2;

      /* "CACompute.pyx":1330
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first             # <<<<<<<<<<<<<<
 *             coordinates.second = coor.second + neighbour.second
 *             cells_to_check.insert(coordinates)
 */
      __pyx_v_coordinates.first = (__pyx_v_coor.first + __pyx_v_neighbour.first);

      /* "CACompute.pyx":1331
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second             # <<<<<<<<<<<<<<
 *             cells_to_check.insert(coordinates)
 * 
 */
      __pyx_v_coordinates.second = (__pyx_v_coor.second + __pyx_v_neighbour.second);

      /* "CACompute.pyx":1332
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 *             cells_to_check.insert(coordinates)             # <<<<<<<<<<<<<<
 * 
 *         cells_to_check.insert(coor)
 */
      (void)(__pyx_v_cells_to_check.insert(__pyx_v_coordinates));

      /* "CACompute.pyx":1329
 * 
 *     for coor in cells_changed:
 *         for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *             coordinates.first = coor.first + neighbour.first
 *             coordinates.second = coor.second + neighbour.second
 */
    }

    /* "CACompute.pyx":1334
 *             cells_to_check.insert(coordinates)
 * 
 *         cells_to_check.insert(coor)             # <<<<<<<<<<<<<<
 * 
 *     if alternating_period > 1:
 */
    (void)(__pyx_v_cells_to_check.insert(__pyx_v_coor));

    /* "CACompute.pyx":1328
 *     cdef pair[int, int] neighbour
 * 
 *     for coor in cells_changed:             # <<<<<<<<<<<<<<
 *         for neighbour in neighbourhood[generations % alternating_period]:
 *             coordinates.first = coor.first + neighbour.first
 */
  }

  /* "CACompute.pyx":1336
 *         cells_to_check.insert(coor)
 * 
 *     if alternating_period > 1:             # <<<<<<<<<<<<<<
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()
 */
  __pyx_t_5 = ((__pyx_v_9CACompute_alternating_period > 1) != 0);
  if (__pyx_t_5) {

    /* "CACompute.pyx":1337
 * 
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:             # <<<<<<<<<<<<<<
 *             cells_changed.clear()
 *     else:
 */
    __pyx_t_5 = (((__pyx_v_generations % (__pyx_v_9CACompute_alternating_period - 1)) == 0) != 0);
    if (__pyx_t_5) {

      /* "CACompute.pyx":1338
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()             # <<<<<<<<<<<<<<
 *     else:
 *         cells_changed.clear()
 */
      __pyx_v_cells_changed.clear();

      /* "CACompute.pyx":1337
 * 
 *     if alternating_period > 1:
 *         if generations % (alternating_period - 1) == 0:             # <<<<<<<<<<<<<<
 *             cells_changed.clear()
 *     else:
 */
    }

    /* "CACompute.pyx":1336
 *         cells_to_check.insert(coor)
 * 
 *     if alternating_period > 1:             # <<<<<<<<<<<<<<
 *         if generations % (alternating_period - 1) == 0:
 *             cells_changed.clear()
 */
    goto __pyx_L7;
  }

  /* "CACompute.pyx":1340
 *             cells_changed.clear()
 *     else:
 *         cells_changed.clear()             # <<<<<<<<<<<<<<
 * 
 *     try: naive = naive_lst[generations % alternating_period]
 */
  /*else*/ {
    __pyx_v_cells_changed.clear();
  }
  __pyx_L7:;

  /* "CACompute.pyx":1342
 *         cells_changed.clear()
 * 
 *     try: naive = naive_lst[generations % alternating_period]             # <<<<<<<<<<<<<<
 *     except IndexError: naive = -1
 * 
 */
  {
    (void)__pyx_t_6; (void)__pyx_t_7; (void)__pyx_t_8; /* mark used */
    /*try:*/ {
      __pyx_v_9CACompute_naive = (__pyx_v_9CACompute_naive_lst[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
    }
  }

  /* "CACompute.pyx":1345
 *     except IndexError: naive = -1
 * 
 *     if naive == -1:             # <<<<<<<<<<<<<<
 *         for coordinates in cells_to_check:
 *             neighbours.clear()
 */
  __pyx_t_5 = ((__pyx_v_9CACompute_naive == -1L) != 0);
  if (__pyx_t_5) {

    /* "CACompute.pyx":1346
 * 
 *     if naive == -1:
 *         for coordinates in cells_to_check:             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
    __pyx_t_1 = __pyx_v_cells_to_check.begin();
    for (;;) {
      if (!(__pyx_t_1 != __pyx_v_cells_to_check.end())) break;
      __pyx_t_2 = *__pyx_t_1;
      ++__pyx_t_1;
      __pyx_v_coordinates = __pyx_t_2;

      /* "CACompute.pyx":1347
 *     if naive == -1:
 *         for coordinates in cells_to_check:
 *             neighbours.clear()             # <<<<<<<<<<<<<<
 *             ans = -1
 * 
 */
      __pyx_v_neighbours.clear();

      /* "CACompute.pyx":1348
 *         for coordinates in cells_to_check:
 *             neighbours.clear()
 *             ans = -1             # <<<<<<<<<<<<<<
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 */
      __pyx_v_ans = -1;

      /* "CACompute.pyx":1350
 *             ans = -1
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates) == __pyx_v_copy_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1351
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        try {
          __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1351, __pyx_L1_error)
        }

        /* "CACompute.pyx":1352
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_9CACompute_depends_cache.end()) != 0);

        /* "CACompute.pyx":1351
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1353
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 */
          __pyx_v_ans = __pyx_f_9CACompute_depend_on_neighbours(0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

          /* "CACompute.pyx":1354
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 */
          try {
            __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1354, __pyx_L1_error)
          }
          (__pyx_v_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CACompute.pyx":1351
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
          goto __pyx_L19;
        }

        /* "CACompute.pyx":1356
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]             # <<<<<<<<<<<<<<
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 */
        /*else*/ {
          try {
            __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1356, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L19:;

        /* "CACompute.pyx":1350
 *             ans = -1
 * 
 *             if copy_grid.find(coordinates) == copy_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        goto __pyx_L18;
      }

      /* "CACompute.pyx":1358
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      /*else*/ {

        /* "CACompute.pyx":1359
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 */
        try {
          __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1358, __pyx_L1_error)
        }

        /* "CACompute.pyx":1360
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_9CACompute_depends_cache.end()) != 0);

        /* "CACompute.pyx":1358
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1361
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 */
          __pyx_v_ans = __pyx_f_9CACompute_depend_on_neighbours((__pyx_v_copy_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

          /* "CACompute.pyx":1362
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(copy_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1362, __pyx_L1_error)
          }
          (__pyx_v_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CACompute.pyx":1358
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (copy_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
          goto __pyx_L20;
        }

        /* "CACompute.pyx":1364
 *                     depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *             if ans == -1:
 */
        /*else*/ {
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_copy_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1364, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L20:;
      }
      __pyx_L18:;

      /* "CACompute.pyx":1366
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1367
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        __pyx_t_4 = &(__pyx_v_9CACompute_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_3 = __pyx_t_4->begin();
        for (;;) {
          if (!(__pyx_t_3 != __pyx_t_4->end())) break;
          __pyx_t_2 = *__pyx_t_3;
          ++__pyx_t_3;
          __pyx_v_neighbour = __pyx_t_2;

          /* "CACompute.pyx":1368
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                    coordinates.second + neighbour.second)
 *                     if copy_grid.find(coordinates2) != copy_grid.end():
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1368, __pyx_L1_error)
          }
          __pyx_v_coordinates2 = __pyx_t_2;

          /* "CACompute.pyx":1370
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if copy_grid.find(coordinates2) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(copy_grid[coordinates2])
 *                     else:
 */
          __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates2) != __pyx_v_copy_grid.end()) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1371
 *                                                    coordinates.second + neighbour.second)
 *                     if copy_grid.find(coordinates2) != copy_grid.end():
 *                         neighbours.push_back(copy_grid[coordinates2])             # <<<<<<<<<<<<<<
 *                     else:
 *                         neighbours.push_back(0)
 */
            try {
              __pyx_v_neighbours.push_back((__pyx_v_copy_grid[__pyx_v_coordinates2]));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1371, __pyx_L1_error)
            }

            /* "CACompute.pyx":1370
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if copy_grid.find(coordinates2) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(copy_grid[coordinates2])
 *                     else:
 */
            goto __pyx_L24;
          }

          /* "CACompute.pyx":1373
 *                         neighbours.push_back(copy_grid[coordinates2])
 *                     else:
 *                         neighbours.push_back(0)             # <<<<<<<<<<<<<<
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():
 */
          /*else*/ {
            try {
              __pyx_v_neighbours.push_back(0);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1373, __pyx_L1_error)
            }
          }
          __pyx_L24:;

          /* "CACompute.pyx":1367
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        }

        /* "CACompute.pyx":1366
 *                     ans = depends_cache[pair[int, int] (copy_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      }

      /* "CACompute.pyx":1375
 *                         neighbours.push_back(0)
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 */
      __pyx_t_5 = ((__pyx_v_copy_grid.find(__pyx_v_coordinates) != __pyx_v_copy_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1376
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
        try {
          __pyx_v_neighbours.push_back((__pyx_v_copy_grid[__pyx_v_coordinates]));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1376, __pyx_L1_error)
        }

        /* "CACompute.pyx":1378
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        try {
          __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1378, __pyx_L1_error)
        }

        /* "CACompute.pyx":1379
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_transition_func_cache.find(__pyx_t_9) == __pyx_v_9CACompute_transition_func_cache.end()) != 0);

        /* "CACompute.pyx":1377
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1380
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1381
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            __pyx_v_ans = __pyx_f_9CACompute_transition_func(__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

            /* "CACompute.pyx":1383
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1383, __pyx_L1_error)
            }
            (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]) = __pyx_v_ans;

            /* "CACompute.pyx":1380
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CACompute.pyx":1377
 *             if copy_grid.find(coordinates) != copy_grid.end():
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L26;
        }

        /* "CACompute.pyx":1385
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1386
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans == 0:
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1386, __pyx_L1_error)
            }

            /* "CACompute.pyx":1385
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]);
          }
        }
        __pyx_L26:;

        /* "CACompute.pyx":1388
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans == 0) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1389
 * 
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:
 */
          (void)(__pyx_v_dict_grid.erase(__pyx_v_coordinates));

          /* "CACompute.pyx":1390
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1388
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
          goto __pyx_L29;
        }

        /* "CACompute.pyx":1391
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != (__pyx_v_copy_grid[__pyx_v_coordinates])) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1392
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *             else:
 */
          (__pyx_v_dict_grid[__pyx_v_coordinates]) = __pyx_v_ans;

          /* "CACompute.pyx":1393
 *                 elif ans != copy_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *             else:
 *                 neighbours.push_back(0)
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1391
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != copy_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        }
        __pyx_L29:;

        /* "CACompute.pyx":1375
 *                         neighbours.push_back(0)
 * 
 *             if copy_grid.find(coordinates) != copy_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(copy_grid[coordinates])
 *                 if transition_func_cache.find(
 */
        goto __pyx_L25;
      }

      /* "CACompute.pyx":1395
 *                     cells_changed.insert(coordinates)
 *             else:
 *                 neighbours.push_back(0)             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
      /*else*/ {
        try {
          __pyx_v_neighbours.push_back(0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1395, __pyx_L1_error)
        }

        /* "CACompute.pyx":1397
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        try {
          __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1397, __pyx_L1_error)
        }

        /* "CACompute.pyx":1398
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_transition_func_cache.find(__pyx_t_9) == __pyx_v_9CACompute_transition_func_cache.end()) != 0);

        /* "CACompute.pyx":1396
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1399
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1400
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            __pyx_v_ans = __pyx_f_9CACompute_transition_func(__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

            /* "CACompute.pyx":1402
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1402, __pyx_L1_error)
            }
            (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]) = __pyx_v_ans;

            /* "CACompute.pyx":1399
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CACompute.pyx":1396
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L30;
        }

        /* "CACompute.pyx":1404
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1405
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans != 0:
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1405, __pyx_L1_error)
            }

            /* "CACompute.pyx":1404
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]);
          }
        }
        __pyx_L30:;

        /* "CACompute.pyx":1407
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != 0) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1408
 * 
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *     else:
 */
          try {
            __pyx_t_10 = std::pair<std::pair<int,int> ,int> (__pyx_v_coordinates, __pyx_v_ans);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1408, __pyx_L1_error)
          }
          (void)(__pyx_v_dict_grid.insert(__pyx_t_10));

          /* "CACompute.pyx":1409
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *     else:
 *         cells_to_check_vector.assign(cells_to_check.begin(), cells_to_check.end())
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1407
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        }
      }
      __pyx_L25:;

      /* "CACompute.pyx":1346
 * 
 *     if naive == -1:
 *         for coordinates in cells_to_check:             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
    }

    /* "CACompute.pyx":1345
 *     except IndexError: naive = -1
 * 
 *     if naive == -1:             # <<<<<<<<<<<<<<
 *         for coordinates in cells_to_check:
 *             neighbours.clear()
 */
    goto __pyx_L15;
  }

  /* "CACompute.pyx":1411
 *                     cells_changed.insert(coordinates)
 *     else:
 *         cells_to_check_vector.assign(cells_to_check.begin(), cells_to_check.end())             # <<<<<<<<<<<<<<
 *         sort(cells_to_check_vector.begin(), cells_to_check_vector.end(), compare_pairs)
 *         for coordinates in cells_to_check_vector:
 */
  /*else*/ {
    try {
      __pyx_v_cells_to_check_vector.assign(__pyx_v_cells_to_check.begin(), __pyx_v_cells_to_check.end());
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1411, __pyx_L1_error)
    }

    /* "CACompute.pyx":1412
 *     else:
 *         cells_to_check_vector.assign(cells_to_check.begin(), cells_to_check.end())
 *         sort(cells_to_check_vector.begin(), cells_to_check_vector.end(), compare_pairs)             # <<<<<<<<<<<<<<
 *         for coordinates in cells_to_check_vector:
 *             neighbours.clear()
 */
    std::sort<std::vector<std::pair<int,int> > ::iterator,bool (std::pair<int,int> , std::pair<int,int> )>(__pyx_v_cells_to_check_vector.begin(), __pyx_v_cells_to_check_vector.end(), __pyx_f_9CACompute_compare_pairs);

    /* "CACompute.pyx":1413
 *         cells_to_check_vector.assign(cells_to_check.begin(), cells_to_check.end())
 *         sort(cells_to_check_vector.begin(), cells_to_check_vector.end(), compare_pairs)
 *         for coordinates in cells_to_check_vector:             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
    __pyx_t_3 = __pyx_v_cells_to_check_vector.begin();
    for (;;) {
      if (!(__pyx_t_3 != __pyx_v_cells_to_check_vector.end())) break;
      __pyx_t_2 = *__pyx_t_3;
      ++__pyx_t_3;
      __pyx_v_coordinates = __pyx_t_2;

      /* "CACompute.pyx":1414
 *         sort(cells_to_check_vector.begin(), cells_to_check_vector.end(), compare_pairs)
 *         for coordinates in cells_to_check_vector:
 *             neighbours.clear()             # <<<<<<<<<<<<<<
 *             ans = -1
 * 
 */
      __pyx_v_neighbours.clear();

      /* "CACompute.pyx":1415
 *         for coordinates in cells_to_check_vector:
 *             neighbours.clear()
 *             ans = -1             # <<<<<<<<<<<<<<
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 */
      __pyx_v_ans = -1;

      /* "CACompute.pyx":1417
 *             ans = -1
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates) == __pyx_v_dict_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1418
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        try {
          __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1418, __pyx_L1_error)
        }

        /* "CACompute.pyx":1419
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_9CACompute_depends_cache.end()) != 0);

        /* "CACompute.pyx":1418
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1420
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 */
          __pyx_v_ans = __pyx_f_9CACompute_depend_on_neighbours(0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

          /* "CACompute.pyx":1421
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 */
          try {
            __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1421, __pyx_L1_error)
          }
          (__pyx_v_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CACompute.pyx":1418
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(0, generations % alternating_period)
 */
          goto __pyx_L37;
        }

        /* "CACompute.pyx":1423
 *                     depends_cache[pair[int, int] (0, generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]             # <<<<<<<<<<<<<<
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 */
        /*else*/ {
          try {
            __pyx_t_2 = std::pair<int,int> (0, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1423, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L37:;

        /* "CACompute.pyx":1417
 *             ans = -1
 * 
 *             if dict_grid.find(coordinates) == dict_grid.end():             # <<<<<<<<<<<<<<
 *                 if depends_cache.find(pair[int, int] (0, generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        goto __pyx_L36;
      }

      /* "CACompute.pyx":1425
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
      /*else*/ {

        /* "CACompute.pyx":1426
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 *                                                       generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 */
        try {
          __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1425, __pyx_L1_error)
        }

        /* "CACompute.pyx":1427
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():             # <<<<<<<<<<<<<<
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_depends_cache.find(__pyx_t_2) == __pyx_v_9CACompute_depends_cache.end()) != 0);

        /* "CACompute.pyx":1425
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1428
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)             # <<<<<<<<<<<<<<
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 */
          __pyx_v_ans = __pyx_f_9CACompute_depend_on_neighbours((__pyx_v_dict_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

          /* "CACompute.pyx":1429
 *                         depends_cache.end():
 *                     ans = depend_on_neighbours(dict_grid[coordinates], generations % alternating_period)
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1429, __pyx_L1_error)
          }
          (__pyx_v_9CACompute_depends_cache[__pyx_t_2]) = __pyx_v_ans;

          /* "CACompute.pyx":1425
 *                     ans = depends_cache[pair[int, int] (0, generations % alternating_period)]
 *             else:
 *                 if depends_cache.find(pair[int, int] (dict_grid[coordinates],             # <<<<<<<<<<<<<<
 *                                                       generations % alternating_period)) == \
 *                         depends_cache.end():
 */
          goto __pyx_L38;
        }

        /* "CACompute.pyx":1431
 *                     depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)] = ans
 *                 else:
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *             if ans == -1:
 */
        /*else*/ {
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_dict_grid[__pyx_v_coordinates]), (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1431, __pyx_L1_error)
          }
          __pyx_v_ans = (__pyx_v_9CACompute_depends_cache[__pyx_t_2]);
        }
        __pyx_L38:;
      }
      __pyx_L36:;

      /* "CACompute.pyx":1433
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1434
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        __pyx_t_4 = &(__pyx_v_9CACompute_neighbourhood[(__pyx_v_generations % __pyx_v_9CACompute_alternating_period)]);
        __pyx_t_11 = __pyx_t_4->begin();
        for (;;) {
          if (!(__pyx_t_11 != __pyx_t_4->end())) break;
          __pyx_t_2 = *__pyx_t_11;
          ++__pyx_t_11;
          __pyx_v_neighbour = __pyx_t_2;

          /* "CACompute.pyx":1435
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,             # <<<<<<<<<<<<<<
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():
 */
          try {
            __pyx_t_2 = std::pair<int,int> ((__pyx_v_coordinates.first + __pyx_v_neighbour.first), (__pyx_v_coordinates.second + __pyx_v_neighbour.second));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1435, __pyx_L1_error)
          }
          __pyx_v_coordinates2 = __pyx_t_2;

          /* "CACompute.pyx":1437
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 */
          __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates2) != __pyx_v_dict_grid.end()) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1438
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():
 *                         neighbours.push_back(dict_grid[coordinates2])             # <<<<<<<<<<<<<<
 *                     else:
 *                         neighbours.push_back(0)
 */
            try {
              __pyx_v_neighbours.push_back((__pyx_v_dict_grid[__pyx_v_coordinates2]));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1438, __pyx_L1_error)
            }

            /* "CACompute.pyx":1437
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 *                     if dict_grid.find(coordinates2) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 */
            goto __pyx_L42;
          }

          /* "CACompute.pyx":1440
 *                         neighbours.push_back(dict_grid[coordinates2])
 *                     else:
 *                         neighbours.push_back(0)             # <<<<<<<<<<<<<<
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():
 */
          /*else*/ {
            try {
              __pyx_v_neighbours.push_back(0);
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1440, __pyx_L1_error)
            }
          }
          __pyx_L42:;

          /* "CACompute.pyx":1434
 * 
 *             if ans == -1:
 *                 for neighbour in neighbourhood[generations % alternating_period]:             # <<<<<<<<<<<<<<
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 *                                                    coordinates.second + neighbour.second)
 */
        }

        /* "CACompute.pyx":1433
 *                     ans = depends_cache[pair[int, int] (dict_grid[coordinates], generations % alternating_period)]
 * 
 *             if ans == -1:             # <<<<<<<<<<<<<<
 *                 for neighbour in neighbourhood[generations % alternating_period]:
 *                     coordinates2 = pair[int, int] (coordinates.first + neighbour.first,
 */
      }

      /* "CACompute.pyx":1442
 *                         neighbours.push_back(0)
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 */
      __pyx_t_5 = ((__pyx_v_dict_grid.find(__pyx_v_coordinates) != __pyx_v_dict_grid.end()) != 0);
      if (__pyx_t_5) {

        /* "CACompute.pyx":1443
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
        try {
          __pyx_v_neighbours.push_back((__pyx_v_dict_grid[__pyx_v_coordinates]));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1443, __pyx_L1_error)
        }

        /* "CACompute.pyx":1445
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        try {
          __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1445, __pyx_L1_error)
        }

        /* "CACompute.pyx":1446
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_transition_func_cache.find(__pyx_t_9) == __pyx_v_9CACompute_transition_func_cache.end()) != 0);

        /* "CACompute.pyx":1444
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1447
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1448
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            __pyx_v_ans = __pyx_f_9CACompute_transition_func(__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

            /* "CACompute.pyx":1450
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1450, __pyx_L1_error)
            }
            (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]) = __pyx_v_ans;

            /* "CACompute.pyx":1447
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CACompute.pyx":1444
 *             if dict_grid.find(coordinates) != dict_grid.end():
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L44;
        }

        /* "CACompute.pyx":1452
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1453
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans == 0:
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1453, __pyx_L1_error)
            }

            /* "CACompute.pyx":1452
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]);
          }
        }
        __pyx_L44:;

        /* "CACompute.pyx":1455
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans == 0) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1456
 * 
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *                 elif ans != dict_grid[coordinates]:
 */
          (void)(__pyx_v_dict_grid.erase(__pyx_v_coordinates));

          /* "CACompute.pyx":1457
 *                 if ans == 0:
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1455
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans == 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 */
          goto __pyx_L47;
        }

        /* "CACompute.pyx":1458
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != dict_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != (__pyx_v_dict_grid[__pyx_v_coordinates])) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1459
 *                     cells_changed.insert(coordinates)
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 *             else:
 */
          (__pyx_v_dict_grid[__pyx_v_coordinates]) = __pyx_v_ans;

          /* "CACompute.pyx":1460
 *                 elif ans != dict_grid[coordinates]:
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 *             else:
 *                 neighbours.push_back(0)
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1458
 *                     dict_grid.erase(coordinates)
 *                     cells_changed.insert(coordinates)
 *                 elif ans != dict_grid[coordinates]:             # <<<<<<<<<<<<<<
 *                     dict_grid[coordinates] = ans
 *                     cells_changed.insert(coordinates)
 */
        }
        __pyx_L47:;

        /* "CACompute.pyx":1442
 *                         neighbours.push_back(0)
 * 
 *             if dict_grid.find(coordinates) != dict_grid.end():             # <<<<<<<<<<<<<<
 *                 neighbours.push_back(dict_grid[coordinates])
 *                 if transition_func_cache.find(
 */
        goto __pyx_L43;
      }

      /* "CACompute.pyx":1462
 *                     cells_changed.insert(coordinates)
 *             else:
 *                 neighbours.push_back(0)             # <<<<<<<<<<<<<<
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 */
      /*else*/ {
        try {
          __pyx_v_neighbours.push_back(0);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1462, __pyx_L1_error)
        }

        /* "CACompute.pyx":1464
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \             # <<<<<<<<<<<<<<
 *                         transition_func_cache.end():
 *                     if ans == -1:
 */
        try {
          __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 1464, __pyx_L1_error)
        }

        /* "CACompute.pyx":1465
 *                 if transition_func_cache.find(
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():             # <<<<<<<<<<<<<<
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)
 */
        __pyx_t_5 = ((__pyx_v_9CACompute_transition_func_cache.find(__pyx_t_9) == __pyx_v_9CACompute_transition_func_cache.end()) != 0);

        /* "CACompute.pyx":1463
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
        if (__pyx_t_5) {

          /* "CACompute.pyx":1466
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1467
 *                         transition_func_cache.end():
 *                     if ans == -1:
 *                         ans = transition_func(neighbours, generations % alternating_period)             # <<<<<<<<<<<<<<
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 */
            __pyx_v_ans = __pyx_f_9CACompute_transition_func(__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));

            /* "CACompute.pyx":1469
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans             # <<<<<<<<<<<<<<
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1469, __pyx_L1_error)
            }
            (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]) = __pyx_v_ans;

            /* "CACompute.pyx":1466
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 *                     if ans == -1:             # <<<<<<<<<<<<<<
 *                         ans = transition_func(neighbours, generations % alternating_period)
 *                         transition_func_cache[
 */
          }

          /* "CACompute.pyx":1463
 *             else:
 *                 neighbours.push_back(0)
 *                 if transition_func_cache.find(             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)) == \
 *                         transition_func_cache.end():
 */
          goto __pyx_L48;
        }

        /* "CACompute.pyx":1471
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
        /*else*/ {
          __pyx_t_5 = ((__pyx_v_ans == -1L) != 0);
          if (__pyx_t_5) {

            /* "CACompute.pyx":1472
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]             # <<<<<<<<<<<<<<
 * 
 *                 if ans != 0:
 */
            try {
              __pyx_t_9 = std::pair<std::vector<int> ,int> (__pyx_v_neighbours, (__pyx_v_generations % __pyx_v_9CACompute_alternating_period));
            } catch(...) {
              __Pyx_CppExn2PyErr();
              __PYX_ERR(0, 1472, __pyx_L1_error)
            }

            /* "CACompute.pyx":1471
 *                             pair[vector[int], int] (neighbours, generations % alternating_period)] = ans
 *                 else:
 *                     if ans == -1: ans = transition_func_cache[             # <<<<<<<<<<<<<<
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 */
            __pyx_v_ans = (__pyx_v_9CACompute_transition_func_cache[__pyx_t_9]);
          }
        }
        __pyx_L48:;

        /* "CACompute.pyx":1474
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        __pyx_t_5 = ((__pyx_v_ans != 0) != 0);
        if (__pyx_t_5) {

          /* "CACompute.pyx":1475
 * 
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))             # <<<<<<<<<<<<<<
 *                     cells_changed.insert(coordinates)
 * 
 */
          try {
            __pyx_t_10 = std::pair<std::pair<int,int> ,int> (__pyx_v_coordinates, __pyx_v_ans);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1475, __pyx_L1_error)
          }
          (void)(__pyx_v_dict_grid.insert(__pyx_t_10));

          /* "CACompute.pyx":1476
 *                 if ans != 0:
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)             # <<<<<<<<<<<<<<
 * 
 *     return cells_changed, dict_grid
 */
          (void)(__pyx_v_cells_changed.insert(__pyx_v_coordinates));

          /* "CACompute.pyx":1474
 *                         pair[vector[int], int] (neighbours, generations % alternating_period)]
 * 
 *                 if ans != 0:             # <<<<<<<<<<<<<<
 *                     dict_grid.insert(pair[pair[int, int], int] (coordinates, ans))
 *                     cells_changed.insert(coordinates)
 */
        }
      }
      __pyx_L43:;

      /* "CACompute.pyx":1413
 *         cells_to_check_vector.assign(cells_to_check.begin(), cells_to_check.end())
 *         sort(cells_to_check_vector.begin(), cells_to_check_vector.end(), compare_pairs)
 *         for coordinates in cells_to_check_vector:             # <<<<<<<<<<<<<<
 *             neighbours.clear()
 *             ans = -1
 */
    }
  }
  __pyx_L15:;

  /* "CACompute.pyx":1478
 *                     cells_changed.insert(coordinates)
 * 
 *     return cells_changed, dict_grid             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_12 = __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(__pyx_v_cells_changed); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(__pyx_v_dict_grid); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_13);
  PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_13);
  __pyx_t_12 = 0;
  __pyx_t_13 = 0;
  __pyx_r = __pyx_t_14;
  __pyx_t_14 = 0;
  goto __pyx_L0;

  /* "CACompute.pyx":1312
 *             return a.first > b.first
 * 
 * cpdef compute(unordered_set[pair[int, int]] cells_changed,             # <<<<<<<<<<<<<<
 *               unordered_map[pair[int, int], int] copy_grid, unordered_map[pair[int, int], int] dict_grid,
 *               int generations):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9CACompute_11compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9CACompute_11compute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_copy_grid;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid;
  int __pyx_v_generations;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cells_changed,&__pyx_n_s_copy_grid,&__pyx_n_s_dict_grid,&__pyx_n_s_generations,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cells_changed)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_copy_grid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 4, 4, 1); __PYX_ERR(0, 1312, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dict_grid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 4, 4, 2); __PYX_ERR(0, 1312, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_generations)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 4, 4, 3); __PYX_ERR(0, 1312, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute") < 0)) __PYX_ERR(0, 1312, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_cells_changed = __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1312, __pyx_L3_error)
    __pyx_v_copy_grid = __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1313, __pyx_L3_error)
    __pyx_v_dict_grid = __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(values[2]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1313, __pyx_L3_error)
    __pyx_v_generations = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_generations == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1312, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9CACompute_10compute(__pyx_self, __pyx_v_cells_changed, __pyx_v_copy_grid, __pyx_v_dict_grid, __pyx_v_generations);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9CACompute_10compute(CYTHON_UNUSED PyObject *__pyx_self, std::unordered_set<std::pair<int,int> >  __pyx_v_cells_changed, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_copy_grid, std::unordered_map<std::pair<int,int> ,int>  __pyx_v_dict_grid, int __pyx_v_generations) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("compute", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9CACompute_compute(__pyx_v_cells_changed, __pyx_v_copy_grid, __pyx_v_dict_grid, __pyx_v_generations, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("CACompute.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.from_py":145
 * 
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)
 */

static std::pair<int,int>  __pyx_convert_pair_from_py_int__and_int(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  std::pair<int,int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_from_py_int__and_int", 0);

  /* "pair.from_py":146
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:
 *     x, y = o             # <<<<<<<<<<<<<<
 *     return pair[X,Y](<X>x, <Y>y)
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_o))) || (PyList_CheckExact(__pyx_v_o))) {
    PyObject* sequence = __pyx_v_o;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(1, 146, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_3 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_4(__pyx_t_3), 2) < 0) __PYX_ERR(1, 146, __pyx_L1_error)
    __pyx_t_4 = NULL;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(1, 146, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pair.from_py":147
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_x); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 147, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_v_y); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 147, __pyx_L1_error)
  __pyx_r = std::pair<int,int> (((int)__pyx_t_5), ((int)__pyx_t_6));
  goto __pyx_L0;

  /* "pair.from_py":145
 * 
 * @cname("__pyx_convert_pair_from_py_int__and_int")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_int__and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](<X>x, <Y>y)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.from_py.__pyx_convert_pair_from_py_int__and_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "set.from_py":108
 * 
 * @cname("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef set[X] s
 *     for item in o:
 */

static std::unordered_set<std::pair<int,int> >  __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(PyObject *__pyx_v_o) {
  std::unordered_set<std::pair<int,int> >  __pyx_v_s;
  PyObject *__pyx_v_item = NULL;
  std::unordered_set<std::pair<int,int> >  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::pair<int,int>  __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "set.from_py":110
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef set[X] s
 *     for item in o:             # <<<<<<<<<<<<<<
 *         s.insert(<X>item)
 *     return s
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 110, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 110, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 110, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 110, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 110, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 110, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "set.from_py":111
 *     cdef set[X] s
 *     for item in o:
 *         s.insert(<X>item)             # <<<<<<<<<<<<<<
 *     return s
 * 
 */
    __pyx_t_5 = __pyx_convert_pair_from_py_int__and_int(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 111, __pyx_L1_error)
    __pyx_v_s.insert(((std::pair<int,int> )__pyx_t_5));

    /* "set.from_py":110
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:
 *     cdef set[X] s
 *     for item in o:             # <<<<<<<<<<<<<<
 *         s.insert(<X>item)
 *     return s
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "set.from_py":112
 *     for item in o:
 *         s.insert(<X>item)
 *     return s             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "set.from_py":108
 * 
 * @cname("__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef set[X] __pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef set[X] s
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("set.from_py.__pyx_convert_unordered_set_from_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "map.from_py":174
 * 
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef dict d = o
 *     cdef map[X,Y] m
 */

static std::unordered_map<std::pair<int,int> ,int>  __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_d = 0;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_v_m;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  std::unordered_map<std::pair<int,int> ,int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  std::pair<int,int>  __pyx_t_8;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int", 0);

  /* "map.from_py":175
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:
 *     cdef dict d = o             # <<<<<<<<<<<<<<
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_o))||((__pyx_v_o) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_o)->tp_name), 0))) __PYX_ERR(1, 175, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_o;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_d = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "map.from_py":177
 *     cdef dict d = o
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():             # <<<<<<<<<<<<<<
 *         m.insert(pair[X,Y](<X>key, <Y>value))
 *     return m
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_d == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "iteritems");
    __PYX_ERR(1, 177, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_d, 1, __pyx_n_s_iteritems, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(1, 177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "map.from_py":178
 *     cdef map[X,Y] m
 *     for key, value in d.iteritems():
 *         m.insert(pair[X,Y](<X>key, <Y>value))             # <<<<<<<<<<<<<<
 *     return m
 * 
 */
    __pyx_t_8 = __pyx_convert_pair_from_py_int__and_int(__pyx_v_key); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 178, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 178, __pyx_L1_error)
    __pyx_v_m.insert(std::pair<std::pair<int,int> ,int> (((std::pair<int,int> )__pyx_t_8), ((int)__pyx_t_7)));
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "map.from_py":179
 *     for key, value in d.iteritems():
 *         m.insert(pair[X,Y](<X>key, <Y>value))
 *     return m             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_m;
  goto __pyx_L0;

  /* "map.from_py":174
 * 
 * @cname("__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int")
 * cdef map[X,Y] __pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef dict d = o
 *     cdef map[X,Y] m
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("map.from_py.__pyx_convert_unordered_map_from_py_std_3a__3a_pair_3c_int_2c_int_3e_____and_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)NULL))) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_string")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<std::string>  __pyx_convert_vector_from_py_std_3a__3a_string(PyObject *__pyx_v_o) {
  std::vector<std::string>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<std::string>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_std_3a__3a_string", 0);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_convert_string_from_py_std__in_string(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    __pyx_v_v.push_back(((std::string)__pyx_t_5));

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_std_3a__3a_string")
 * cdef vector[X] __pyx_convert_vector_from_py_std_3a__3a_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_std_3a__3a_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.to_py":158
 * 
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return p.first, p.second
 * 
 */

static PyObject *__pyx_convert_pair_to_py_int____int(std::pair<int,int>  const &__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_to_py_int____int", 0);

  /* "pair.to_py":159
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):
 *     return p.first, p.second             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pair.to_py":158
 * 
 * @cname("__pyx_convert_pair_to_py_int____int")
 * cdef object __pyx_convert_pair_to_py_int____int(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return p.first, p.second
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.to_py.__pyx_convert_pair_to_py_int____int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const std::vector<std::pair<int,int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_pair_to_py_int____int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(const std::vector<std::vector<int> >  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __pyx_convert_vector_to_py_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(1, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_vector_3c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

static PyObject *__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(std::unordered_set<std::pair<int,int> >  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::unordered_set<std::pair<int,int> > ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", 0);

  /* "set.to_py":130
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):
 *     o = set()             # <<<<<<<<<<<<<<
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "set.to_py":131
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "set.to_py":132
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_iter != __pyx_v_s.end()) != 0);
    if (!__pyx_t_2) break;

    /* "set.to_py":133
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = __pyx_convert_pair_to_py_int____int((*__pyx_v_iter)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PySet_Add(__pyx_v_o, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "set.to_py":134
 *     while iter != s.end():
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "set.to_py":135
 *         o.add(cython.operator.dereference(iter))
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "set.to_py":129
 * 
 * @cname("__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___")
 * cdef object __pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___(const cpp_set[X]& s):             # <<<<<<<<<<<<<<
 *     o = set()
 *     cdef cpp_set[X].const_iterator iter = s.begin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("set.to_py.__pyx_convert_unordered_set_to_py_std_3a__3a_pair_3c_int_2c_int_3e___", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

static PyObject *__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(std::unordered_map<std::pair<int,int> ,int>  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::unordered_map<std::pair<int,int> ,int> ::value_type const *__pyx_v_key_value;
  std::unordered_map<std::pair<int,int> ,int> ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int", 0);

  /* "map.to_py":202
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):
 *     o = {}             # <<<<<<<<<<<<<<
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "map.to_py":204
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "map.to_py":205
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 */
  while (1) {
    __pyx_t_2 = ((__pyx_v_iter != __pyx_v_s.end()) != 0);
    if (!__pyx_t_2) break;

    /* "map.to_py":206
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)             # <<<<<<<<<<<<<<
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 */
    __pyx_v_key_value = (&(*__pyx_v_iter));

    /* "map.to_py":207
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_key_value->second); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __pyx_convert_pair_to_py_int____int(__pyx_v_key_value->first); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(PyDict_SetItem(__pyx_v_o, __pyx_t_3, __pyx_t_1) < 0)) __PYX_ERR(1, 207, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "map.to_py":208
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "map.to_py":209
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("map.to_py.__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {"load", (PyCFunction)__pyx_pw_9CACompute_1load, METH_O, 0},
  {"get_neighbourhood", (PyCFunction)__pyx_pw_9CACompute_3get_neighbourhood, METH_O, 0},
  {"get_n_states", (PyCFunction)__pyx_pw_9CACompute_5get_n_states, METH_NOARGS, 0},
  {"get_colour_palette", (PyCFunction)__pyx_pw_9CACompute_7get_colour_palette, METH_NOARGS, 0},
  {"get_rule_name", (PyCFunction)__pyx_pw_9CACompute_9get_rule_name, METH_NOARGS, 0},
  {"compute", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9CACompute_11compute, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_CACompute(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_CACompute},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "CACompute",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_b_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 0, 0},
  {&__pyx_kp_b_B_S_Conditions_2, __pyx_k_B_S_Conditions_2, sizeof(__pyx_k_B_S_Conditions_2), 0, 0, 0, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_kp_b_Name_2, __pyx_k_Name_2, sizeof(__pyx_k_Name_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Neighbourhood_Range_2, __pyx_k_Neighbourhood_Range_2, sizeof(__pyx_k_Neighbourhood_Range_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Rulespace_2, __pyx_k_Rulespace_2, sizeof(__pyx_k_Rulespace_2), 0, 0, 0, 0},
  {&__pyx_kp_b_Rulestring_2, __pyx_k_Rulestring_2, sizeof(__pyx_k_Rulestring_2), 0, 0, 0, 0},
  {&__pyx_kp_b_State_Weights_2, __pyx_k_State_Weights_2, sizeof(__pyx_k_State_Weights_2), 0, 0, 0, 0},
  {&__pyx_kp_b__13, __pyx_k__13, sizeof(__pyx_k__13), 0, 0, 0, 0},
  {&__pyx_kp_b__14, __pyx_k__14, sizeof(__pyx_k__14), 0, 0, 0, 0},
  {&__pyx_kp_b__15, __pyx_k__15, sizeof(__pyx_k__15), 0, 0, 0, 0},
  {&__pyx_kp_b__16, __pyx_k__16, sizeof(__pyx_k__16), 0, 0, 0, 0},
  {&__pyx_kp_b__2, __pyx_k__2, sizeof(__pyx_k__2), 0, 0, 0, 0},
  {&__pyx_kp_b__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 0, 0},
  {&__pyx_kp_b__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 0, 0},
  {&__pyx_kp_b__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_d_nn, __pyx_k_b_s_d_nn, sizeof(__pyx_k_b_s_d_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_f_k_l_nn, __pyx_k_b_s_f_k_l_nn, sizeof(__pyx_k_b_s_f_k_l_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_b_s_nn, __pyx_k_b_s_nn, sizeof(__pyx_k_b_s_nn), 0, 0, 0, 0},
  {&__pyx_kp_b_bsd, __pyx_k_bsd, sizeof(__pyx_k_bsd), 0, 0, 0, 0},
  {&__pyx_n_s_cells_changed, __pyx_k_cells_changed, sizeof(__pyx_k_cells_changed), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_copy_grid, __pyx_k_copy_grid, sizeof(__pyx_k_copy_grid), 0, 0, 1, 1},
  {&__pyx_n_s_dict_grid, __pyx_k_dict_grid, sizeof(__pyx_k_dict_grid), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_find, __pyx_k_find, sizeof(__pyx_k_find), 0, 0, 1, 1},
  {&__pyx_n_s_findall, __pyx_k_findall, sizeof(__pyx_k_findall), 0, 0, 1, 1},
  {&__pyx_n_s_generations, __pyx_k_generations, sizeof(__pyx_k_generations), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_iteritems, __pyx_k_iteritems, sizeof(__pyx_k_iteritems), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_u_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 1, 0, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 0, 1, 1},
  {&__pyx_kp_b_rg_l_b_s_rb_rs_nn, __pyx_k_rg_l_b_s_rb_rs_nn, sizeof(__pyx_k_rg_l_b_s_rb_rs_nn), 0, 0, 0, 0},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_sub, __pyx_k_sub, sizeof(__pyx_k_sub), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_kp_u_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 1, 0, 0},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(0, 96, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 156, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 215, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "CACompute.pyx":135
 * 
 *         if section.find(b"Name:") != -1:
 *             rule_name = section.replace(b"Name: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_kp_b_Name_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "CACompute.pyx":137
 *             rule_name = section.replace(b"Name: ", b"")
 *         elif section.find(b"Neighbourhood Range:") != -1:
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))             # <<<<<<<<<<<<<<
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):
 */
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_kp_b_Neighbourhood_Range_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "CACompute.pyx":139
 *             neighbourhood_range = int(section.replace(b"Neighbourhood Range: ", b""))
 *         elif section.find(b"State Weights:") != -1:
 *             for x in section.replace(b"State Weights: ", b"").split(b"|"):             # <<<<<<<<<<<<<<
 *                 temp.clear()
 *                 for y in x.split(b","):
 */
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_kp_b_State_Weights_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "CACompute.pyx":146
 *             n_states = state_weights[0].size()
 *         elif section.find(b"Rulespace:") != -1:
 *             rule_space = section.replace(b"Rulespace: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_kp_b_Rulespace_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "CACompute.pyx":148
 *             rule_space = section.replace(b"Rulespace: ", b"")
 *         elif section.find(b"B/S Conditions:") != -1:
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")             # <<<<<<<<<<<<<<
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_kp_b_B_S_Conditions_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "CACompute.pyx":150
 *             bsconditions = section.replace(b"B/S Conditions: ", b"")
 *         elif section.find(b"Rulestring:") != -1:
 *             rule_string = section.replace(b"Rulestring: ", b"").split(b"|")             # <<<<<<<<<<<<<<
 * 
 *     alternating_period = state_weights.size()
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_kp_b_Rulestring_2, __pyx_kp_b_); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initCACompute(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initCACompute(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_CACompute(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_CACompute(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_CACompute(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'CACompute' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_CACompute(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("CACompute", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_CACompute) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "CACompute")) {
      if (unlikely(PyDict_SetItemString(modules, "CACompute", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "CACompute.pyx":3
 * # distutils: language=c++
 * 
 * import re             # <<<<<<<<<<<<<<
 * from libcpp.vector cimport vector
 * from libcpp.pair cimport pair
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_re, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_re, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "CACompute.pyx":1
 * # distutils: language=c++             # <<<<<<<<<<<<<<
 * 
 * import re
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "map.to_py":201
 * 
 * @cname("__pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int")
 * cdef object __pyx_convert_unordered_map_to_py_std_3a__3a_pair_3c_int_2c_int_3e_______int(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init CACompute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init CACompute");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a != b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_TRUE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_TRUE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a != (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) ((size_t) 0 - (size_t) 1), const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
